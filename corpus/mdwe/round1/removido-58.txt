Think global, act local: implementing model management with domain-specific integration languages
In recent years a number of model transformation languages have emerged that deal with fine-grained, local transformation specifications, commonly known as programming in the small [13]. To be able to develop complex transformation systems in a scalable way, mechanisms to work directly on the global model level are desirable, referred to as programming in the large [26]. In this paper we show how domain specific model integration languages can be defined, and how they can be composed in order to achieve complex model management tasks. Thereby, we base our approach on the definition of declarative model integration languages, of which implementing transformations are derived. We give a categorization of these transformations and rely on an object-oriented mechanism to realize complex model management tasks.