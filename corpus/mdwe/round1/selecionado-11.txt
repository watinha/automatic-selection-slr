Bridging existing Web modeling languages to model-driven engineering: a metamodel for {WebML}
Metamodels are a prerequisite for model-driven engineering {(MDE)} in general and consequently for model-driven web engineering in particular. Various modeling languages, just as in the web engineering field, however, are not based on metamodels and standards but instead define proprietary languages rather focused on notational aspects. Thus, {MDE} techniques and tools can not be deployed for such languages. The {WebML} web modeling language is one example that does not yet rely on an explicit metamodel. Instead, it is implicitly defined within the accompanying tool in terms of a document type definition {(DTD),} i.e., a grammar-like textual definition for specifying the structure of {XML} documents. Code generation then has to rely on {XSLT-based} model-to-code {transformations.In} this paper, we propose a metamodel for {WebML} which is based on the Meta Object Facility {(MOF).} To establish such a metamodel a semi-automatic approach is provided that allows to generate {MOF-based} metamodels from {DTDs.} The metamodel for {WebML} accomplishes the following aims: First, it represents an initial step towards a transition to employing {MDE} techniques (e.g., model transformations or language extensions through profiles) within the {WebML} design methodology. Second, it represents an important step towards a common metamodel for Web modeling. Third, the provision of a {MOF-based} metamodel ensures interoperability with other {MDE} tools.