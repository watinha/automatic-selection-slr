Challenges and Solutions for Model Driven Web Service Composition
System theory propagates the use of models which raise the level of abstraction to cope with complexity, evolving out of variety and connectivity. Different modeling techniques have been invented for the abstract description of certain aspects of dynamic system behaviour. Nowadays process models are also an accepted part of service oriented process design. Although service oriented architecture {(SOA)} is the aim, rather isolated processes are the starting point for executable code generation and not the changing functionality distribution the system offers. Thus we claim the system view, necessary for process lifecycle management, is missing. Moreover, in the context of Web Service Composition, a vertical, bi- directional model driven approach allows for manifold allocation of e.g. testing, validation or binding tasks within the layer stack of {MDAs} (model driven architecture). In this paper we discuss two distinctive proposals for model driven service composition, followed by a comparison of representative mapping scenarios offered by {IBM} and Microsoft.