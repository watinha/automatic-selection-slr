Strategizing and Evaluating the Onboarding of Software Developers in Large-Scale Globally Distributed Legacy Projects
Background: Recruitment and onboarding of software developers are essential
steps in software development undertakings. The need for adding
new people is often associated with large-scale long-living projects and
globally distributed projects. The formers are challenging because they
may contain large amounts of legacy (and often complex) code (legacy
projects). The latters are challenging, because the inability to find suffi-
cient resources in-house may lead to onboarding people at a distance, and
often in many distinct sites. While onboarding is of great importance for
companies, there is little research about the challenges and implications
associated with onboarding software developers and teams in large-scale
globally distributed projects with large amounts of legacy code. Furthermore,
no study has proposed any systematic approaches to support the
design of onboarding strategies and evaluation of onboarding results in
the aforementioned context.
Objective: The aim of this thesis is two-fold: i) identify the challenges and
implications associated with onboarding software developers and teams in
large-scale globally distributed legacy projects; and ii) propose solutions to
support the design of onboarding strategies and evaluation of onboarding
results in large-scale globally distributed legacy projects.
Method: In this thesis, we employed literature review, case study, and business
process modeling. The main case investigated in this thesis is the development
of a legacy telecommunication software product in Ericsson.
Results: The results show that the performance (productivity, autonomy,
and lead time) of new developers/teams onboarded in remote locations
in large-scale distributed legacy projects is much lower than the performance
of mature teams. This suggests that new teams have a considerable
performance gap to overcome. Furthermore, we learned that onboarding
problems can be amplified by the following challenges: complexity of
the product and technology stack, distance to the main source of product
knowledge, lack of team stability, training expectation misalignment, and
lack of formalism and control over onboarding strategies employed in different
sites of globally distributed projects. To help companies addressing
the challenges we identified in this thesis, we propose a process to support
the design of onboarding strategies and the evaluation of onboarding results.
Conclusions: The results show that scale, distribution and complex legacy
code may make onboarding more difficult and demand longer periods
of time for new developers and teams to achieve high performance. This means that onboarding in large-scale globally distributed legacy projects
must be planned well ahead and companies must be prepared to provide
extended periods of mentoring by expensive and scarce resources, such as
software architects. Failure to foresee and plan such resources may result
in effort estimates on one hand, and unavailability of mentors on another,
if not planned in advance. The process put forward herein can help companies
to deal with the aforementioned problems through more systematic,
effective and repeatable onboarding strategies.