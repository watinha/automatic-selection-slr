"Is It Really a Defect?" An Empirical Study on Measuring and Improving the Process of Software Defect Reporting
Abstract:
Testing is one of the most labor-intensive activities in software development life cycle and consumes between 30% and 50% of total development costs according to many studies. The communication gap between testers and developers that is caused by unclear or even invalid defect reporting usually makes the testing schedule delay, and contributes large amount of testing effort to rework and re-communication. Defect reporting's efficiency directly influences testing efficiency and effectiveness. From our observation and improvement practices on a software product with recent 4 increments: 1) the percentage of unclear defect reports is around 23%, but more than 82% testers, more or less, reported unclear defect reports, 2) the percentage of invalid defect reports is around 26%, but more than 35% testers reported invalid defect reports. Improvement practices that we took on training testers on how to report defect in a clearer and more efficient way further bridged the communication gap between testers and developers, and it can reduce 15.7% unclear defect reports and 19.53% invalid defect reports, which finally led to the improvement of testing efficiency.