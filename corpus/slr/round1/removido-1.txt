The impact of software engineering research on modern progamming  	languages
Software engineering research and programming language design have  	enjoyed a symbiotic relationship, with traceable impacts since the  	1970s, when these areas were first distinguished from one another.  	This report documents this relationship by focusing on several major  	features of current programming languages: data and procedural abstraction,  	types, concurrency, exceptions, and visual programming mechanisms.  	The influences are determined by tracing references in publications  	in both fields, obtaining oral histories from language designers  	delineating influences on them, and tracking cotemporal research  	trends and ideas as demonstrated by workshop topics, special issue  	publications, and invited talks in the two fields. In some cases  	there is conclusive data supporting influence. In other cases, there  	are circumstantial arguments (i.e., cotemporal ideas) that indicate  	influence. Using this approach, this study provides evidence of the  	impact of software engineering research on modern programming language  	design and documents the close relationship between these two fields.