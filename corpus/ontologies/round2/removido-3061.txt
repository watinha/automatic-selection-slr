Service testing for the internet of things
Services that represent sensor and actuator nodes, together with service orchestration, aid in overcoming the heterogeneous structure of the Internet of Things (IoT). Interconnecting different sensor and actuator nodes and exposing them as services is a complex topic which is even more demanding for testing. Further effort is needed to enable common and effcient methodologies for testing IoT-based services. IoT-based services differ from web services since they usually interact with the physical environment via sensor and actuator nodes. This changes how testing can be performed. An open research question is thereby how to apply Model-Based Testing (MBT) approaches for facilitating scalable and ef cient test automation. This thesis introduces a novel test framework to facilitate functional evaluation of IoT- based services based on MBT methodologies. The concept separates the service logic from connected sensor and actuator nodes in a sandbox environment. Furthermore, a new IoT service behaviour model is designed for representing relevant characteristics of IoT-based services and ensuring the automated emulation of sensor nodes. The IoT-behaviour model proves to be automatically transformable into executable Test Cases (TCs). As a proof of concept, the automated test approach is prototypically implemented as a novel test tool. The execution of the TCs reveals, that crucial failures, such as unexpected messages, data types, or data values, can be detected during test execution. Deriving tests from a test model typically result in huge number of TCs, which cannot be executed within a reasonable time and with limited resources. To enhance the diversity of executed TCs, similarity investigation algorithms are proposed and validated. The results show that the proposed Diversity-based Steady State Genetic algorithm can outperform existing solutions up to 11.6 % with less computation time. With regard to verifying the failure detection rate, experiments show that the proposed Group Greedy algorithm can enhance the rate up to 29 %.