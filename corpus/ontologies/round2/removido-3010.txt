A Domain-Specific Language for Modeling Performance Testing
Abstract Performance is a fundamental quality of software  systems. The focus of performance testing is to reveal bottlenecks  or lack of scalability of a system or an environment. However,  usually the software development cycle does not include this effort  on the early development phases, which leads to a weak elicitation  process of performance requirements. One way to mitigate that  is to include performance requirements in the system models.  This can be achieved by using Model-Based Testing (MBT) since  it enables to aggregate testing information in the system model  since the early stages of the software development cycle. This  also allows to automate the generation of test artifacts, such as  test cases or test scripts, and improves communication among  different teams. In this paper, we present a set of requirements  for developing a Domain-Specific Language (DSL) for modeling  performance testing of Web applications. In addition, we present  our design decisions in creating a solution that meets the specific  needs of a partner company. We believe that these decisions help  in building a body of knowledge that can be reused in different  settings that share similar requirements.