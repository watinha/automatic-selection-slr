A Micro-Kernel Test Engine for Automatic Test System
Abstract In traditional automatic test solutions, a test  engine usually encompasses all functions in its kernel,  including compiling test program, generating test event  chain, scheduling test process and executing test events. This  makes the engine tightly coupled with test language and the  system under test, so that it is difficult to maintain, optimize  and extend the test engine. In order to solve these problems,  a micro-kernel test engine is designed and implemented  based on the service oriented architecture. This microkernel  approach decouples function modules to make the  test engine kernel independent of the system under test and  the test language. This also makes the test engine more  modularized, so that the debugging process and  maintenance work of the engine can be much easier. With  new compiling component and test adapters, the engine  kernel can be extended for new test methods or reused in  new test applications. The application example and  extensibility analysis discussed in section 6 show the  feasibility of this micro-kernel test engine