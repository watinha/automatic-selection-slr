Automated Realistic Test Input Generation and Cost Reduction in Service-centric System Testing
Service-centric System Testing (ScST) is more challenging than testing traditional software  due to the complexity of service technologies and the limitations that are imposed  by the SOA environment. One of the most important problems in ScST is the problem  of realistic test data generation. Realistic test data is often generated manually or using  an existing source, thus it is hard to automate and laborious to generate. One of the  limitations that makes ScST challenging is the cost associated with invoking services  during testing process.  This thesis aims to provide solutions to the aforementioned problems, automated  realistic input generation and cost reduction in ScST. To address automation in realistic  test data generation, the concept of Service-centric Test Data Generation (ScTDG) is  presented, in which existing services used as realistic data sources. ScTDG minimises  the need for tester input and dependence on existing data sources by automatically generating  service compositions that can generate the required test data. In experimental  analysis, our approach achieved between 93% and 100% success rates in generating realistic  data while state-of-the-art automated test data generation achieved only between  2% and 34%.  The thesis addresses cost concerns at test data generation level by enabling data  source selection in ScTDG. Source selection in ScTDG has many dimensions such as  cost, reliability and availability. This thesis formulates this problem as an optimisation  problem and presents a multi-objective characterisation of service selection in ScTDG,  aiming to reduce the cost of test data generation.  A cost-aware pareto optimal test suite minimisation approach addressing testing cost concerns during test execution is also presented. The approach adapts traditional multi-objective minimisation approaches to ScST domain by formulating ScST concerns,  such as invocation cost and test case reliability. In experimental analysis, the  approach achieved reductions between 69% and 98.6% in monetary cost of service  invocations during testing.