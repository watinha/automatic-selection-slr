Evolving to a "lighter" software process: a case study
Many new development processes that characterize themselves as lightweight  	or agile have become fashionable, e.g. Extreme Programming (XP) (Beck,  	2000; Cockburn, 2000; Rising and Janoff, 2000). Each of these processes  	is focused on maximizing the effectiveness of a small team of developers  	while anticipating changes in the development environment. These  	processes are mainly focused on the coding phase of the process and  	require strict adherence to the techniques set forth (Beck, 1999).  	Since most of these processes have at least some aspects that might  	seem radical to a more traditional process, e.g. pair programming  	(Williams et al., 2000), an issue arises of how to integrate a lightweight  	process into an existing development/maintenance effort without stalling  	the effort for retraining in the new techniques? How do we evolve  	a traditional process to a lighter one? This paper describes the  	experiences of a development effort within an organization of the  	United States government as it tried to evolve to a lighter process.  	The project was subjected to both organizational and technical changes  	that required the project to be able to adapt rapidly to new development  	landscapes.