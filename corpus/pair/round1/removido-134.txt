Software process fusion: Uniting pair programming and solo programming
processes
The role of pair programming process in software development is controversial.
This controversy arises in part from their being presented as alternatives,
yet it would be more helpful to see them as complementary software
management tools. This paper describes the application of such a
complementary model, software process fusion (SPF), in a real-world
software management situation in China. Pair and solo programming
are adopted at different stages of the process and according to the
background of programmers, as appropriate. Unlike the usual practice
of eXtreme Programming, in which all production code must written
in pairs, all-the-time pair programming, the proposed model encourages
programmers to design code patterns of their own in pairs and then
to use these patterns to build sub-modules solo. The report finds
that the longer team members work alone, the more code patterns they
develop for reuse later in pairs.