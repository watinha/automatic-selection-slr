Analyzing the cost and benefit of pair programming
We use a combination of metrics to understand, model, and evaluate
the impact of pair programming on software development. Pair programming
is a core technique in the hot process paradigm of extreme programming.
At the expense of increased personnel cost, pair programming aims
at increasing both the team productivity and the code quality as
compared to conventional development. In order to evaluate pair programming,
we use metrics from three different categories: process metrics such
as the pair speed advantage of pair programming; product metrics
such as the module breakdown structure of the software; and project
context metrics such as the market pressure. The pair speed advantage
is a metric tailored to pair programming and measures how much faster
a pair of programmers completes programming tasks as compared to
a single developer. We integrate the various metrics using an economic
model for the business value of a development project. The model
is based on the standard concept of net present value. If the market
pressure is strong, the faster time to market of pair programming
can balance the increased personnel cost. For a realistic sample
project, we analyze the complex interplay between the various metrics
integrated in our model. We study for which combinations of the market
pressure and pair speed advantage the value of the pair programming
project exceeds the value of the corresponding conventional project.
When time to market is the decisive factor and programmer pairs are
much faster than single developers, pair programming can increase
the value of a project, but there also are realistic scenarios where
the opposite is true. Such results clearly show that we must consider
metrics from different categories in combination to assess the cost-benefit
relation of pair programming.