Experiences of using pair programming in an agile project
The interest in pair programming (PP) has increased recently, e.g.  	by the popularization of agile software development. However, many  	practicalities of PP are poorly understood. We present experiences  	of using PP extensively in an industrial project. The fact that the  	team had a limited number of high-end workstations forced it in a  	positive way to quick deployment and rigorous use of PP. The developers  	liked PP and learned it easily. Initially, the pairs were not rotated  	frequently but adopting daily, random rotation improved the situation.  	Frequent rotation seemed to improve knowledge transfer. The driver/navigator  	roles were switched seldom, but still the partners communicated actively.  	The navigator rarely spotted defects during coding, but the released  	code contained almost no defects. Test-driven development and design  	in pairs possibly decreased defects. The developers considered that  	PP improved quality and knowledge transfer, and was better suited  	for complex tasks than for easy tasks.