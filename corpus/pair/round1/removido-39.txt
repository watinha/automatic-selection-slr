Lessons learned about distributed pair programming: what are the
knowledge needs to address?
We have realized an experiment aimed at understanding the impact of
distribution on time and quality of code developed with pair programming.
From this experimental data's analysis the pair dismissal phenomenon
has stemmed. After the experiment, we have conducted an assessment
discussion guided by a questionnaire. The assessment confirmed the
dismissal hypothesis and highlighted knowledge needs to be addressed
when managing distributed pair programming in software projects.
This paper focuses on the results of the assessment and discusses
the lessons learned.