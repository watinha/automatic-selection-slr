Evaluating performances of pair designing in industry
Pair programming has attracted an increasing interest from practitioners
and researchers: there is initial empirical evidence that it has
positive effects on quality and overall delivery time, as demonstrated
by several controlled experiments. The practice does not only regard
coding, since it can be applied to any other phase of the software
process: analysis, design, and testing. Because of the asymmetry
between design and coding, applying pair programming to the design
phase might not produce the same benefits as those it produces in
the development phase. In this paper, we report the findings of a
controlled experiment on pair programming, applied to the design
phase and performed in a software company. The results of the experiment
suggest that pair programming slows down the task, yet improves quality.
Furthermore we compare our results with those of a previous exploratory
experiment involving students, and we demonstrate how the outcomes
exhibit very similar trends.