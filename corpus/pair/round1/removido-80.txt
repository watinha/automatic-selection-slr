A structured experiment of test-driven development
Test Driven Development (TDD) is a software development practice in  	which unit test cases are incrementally written prior to code implementation.  	We ran a set of structured experiments with 24 professional pair  	programmers. One group developed a small Java program using TDD while  	the other (control group), used a waterfall-like approach. Experimental  	results, subject to external validity concerns, tend to indicate  	that TDD programmers produce higher quality code because they passed  	18% more functional black-box test cases. However, the TDD programmers  	took 16% more time. Statistical analysis of the results showed that  	a moderate statistical correlation existed between time spent and  	the resulting quality. Lastly, the programmers in the control group  	often did not write the required automated test cases after completing  	their code. Hence it could be perceived that waterfall-like approaches  	do not encourage adequate testing. This intuitive observation supports  	the perception that TDD has the potential for increasing the level  	of unit testing in the software industry.