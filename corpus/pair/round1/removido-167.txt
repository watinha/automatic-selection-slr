On the economic evaluation of XP projects
From a project economics point of view, the most important practices
of extreme programming (XP) are pair programming and test-driven
development. Pair programming leads to a large increase in the personnel
cost, and test-driven development adds to the development effort.
On the other hand, pair programming can speed the project up; both
pair programming and test-driven development can reduce the defect
density of the code. Can the increased cost of XP be balanced by
its shorter time to market and higher code quality? To answer this
question, we construct a new model for the business value of software
projects. We then analyze the cost and benefit of XP by applying
our model to a realistic sample project. We systematically vary important
model parameters to provide a sensitivity analysis. Our analysis
shows that the economic value of XP strongly depends on how large
the XP speed and defect advantage really are. We also find that the
market pressure is an important factor when assessing the business
value of XP. Our study provides clear guidelines for managers when
to consider using XP - or better not.