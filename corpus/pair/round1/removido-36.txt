How distribution affects the success of pair programming
Recent experiments demonstrated the effectiveness of pair programming  	in terms of quality and productivity. Growing interest towards global  	software development is fostering the design of suitable methods  	and tools for distributing software processes, at any level of detail,  	from entire subprocesses up to a single activity. Consequently, people  	placed in different locations could also share programming tasks  	and related practices, such as pair programming. Unfortunately, distribution  	might seriously compromise the success of pair programming, due to  	communication and collaboration issues. We have performed an experiment  	in order to investigate the impact of distribution on pair programming  	when performing maintenance tasks. An interesting conjecture stems  	from the experiment: under certain conditions, distributed pair's  	components tend to dismiss from each other, stopping the collaborative  	work. This can be a very expensive risk factor to keep into account  	when planning tasks of distributed pair programming.