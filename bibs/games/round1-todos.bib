% This file was created with JabRef 2.5.
% Encoding: Cp1252

@ARTICLE{I[1],
    inserir = {true},
  author = {V. V. Abeele and B. Zaman and M. V. Abeele},
  title = {The Unlikeability of a Cuddly Toy Interface: An Experimental Study
	of Preschoolers Likeability and Usability of a 3D Game Played with
	a Cuddly Toy Versus a Keyboard},
  year = {2008},
  abstract = {We report on a comparative study of the likeability and usability
	of a cuddly toy interface versus a keyboard interface. We put 35
	preschoolers to the test and asked them to play a 3D game via a keyboard
	and via a cuddly toy interface. Afterwards the usability (user-friendliness)
	and the likeability (joy-ofuse) of both interfaces were assessed.
	Our results indicate that the cuddly toy interface was neither more
	likeable nor more usable than the keyboard interface. Based on additional
	qualitative data, we argument that the causes might be fatigue, a
	lack of meaningful use of gestures, and the occurrence of satisficing.},
  database = {SpringerLink},
  owner = {Katia},
  references = {International Conference on Tangible and Embedded Interaction

	The next UI breakthrough

	Laying the Foundations for Graspable User Interfaces

	Emerging Frameworks for Tangible User Interfaces

	Social Computing

	Tangible products: redressing the balance between appearance and action

	Freedom of fun, freedom of interaction

	Getting a grip on tangible interaction: a framework on physical space
	and social interaction

	From entry to access: how shareability comes about

	The CTI framework: informing the design of tangible systems for children

	using physical, graphical and tangible user interfaces

	Are Tangible Interfaces Really Any Better Than Other Kinds of Interfaces?

	Do tangible interfaces enhance learning?

	Toewie: a 3D game for 3-5 years old children to be played with a Cuddly
	toy interface

	Preschoolers and motion-based gameplay

	Evaluating fun and usability in computer games with childrenProefschrift
	aan de Technische Universiteit Eindhoven

	Tangible interfaces for real-time 3D virtual environments

	Towards tangibility in gameplay: building a tangible affective interface
	for a computer game

	Emotional design

	Processes of cognitive growth: Infancy

	The Design of Everyday Things

	Sympathetic interfaces: using a plush toy to direct synthetic characters

	Towards a Likeability Framework that meets Child-Computer Interaction
	& Communication Sciences

	The Extended Likeability Framework: A Theoretical Framework for and
	a Practical Case of Designing Likeable Media Applications for Preschoolers

	Guidelines for usability testing with children

	Evaluating games with children


	Handbook of Usability Testing: How to Plan, Design, and Conduct Effective
	Test

	How to Measure the Likeability of Tangible Interaction with Preschoolers

	Introducing contextual laddering to evaluate the likeability of games
	with children

	User-centered design in games. In the Human-Computer interaction Handbook:
	Fundamentals, Evolving Technologies and Emerging Applications

	Pleasure with Products: Human Factors for Body

	Playability heuristics for mobile games

	Communication and Community in Digital Entertainment Services

	Interaction frogger: a design framework to couple action and function
	through feedback and feedforward

	Rules of Play: Game Design Fundamentals

	The Sciences of the Artificial

	Exploring Action Dynamics as an Index of Paired-Associate Learning

	Towards a new set of ideals: consequences of the practice turn in
	tangible interaction},
  timestamp = {2010.07.07}
}

@ARTICLE{E[93],
    inserir = {false},
  author = {L. Achterbosch and R. Pierce and G. Simmons},
  title = {Massively multiplayer online role-playing games: the past, present,
	and future},
  year = {2008},
  abstract = {Massively multiplayer online role-playing games (MMORPGs) are emerging
	in the computer game industry as a very popular genre. These games
	have existed since the late 1990s, but in the last few years the
	market has become increasingly strong. This relatively new genre
	is attracting a widespread audience, bringing together those who
	previously enjoyed both pen and paper and computer role-playing games,
	as well as those who enjoy socializing with other players in a virtual
	environment. Game developers see MMORPGs as a potentially profitable
	business due to its widespread appeal, but the reality is that only
	a small percentage of MMORPGs that are released become a success
	[Kosak 2006]. This article attempts to determine the many aspects
	that make a successful MMORPG; it also attempts to ascertain what
	new and innovative features are expected by the users from the next
	generation of MMORPGs. This is achieved by looking at and discussing
	past literature and surveying the MMORPG community's perception of
	previous and current MMORPGs, as well as their expectations of the
	next generation. An online survey attracted 122 participants to provide
	their perceptions of current and past MMORPGs. This article determines
	and outlines the respondents' preferences in the MMORPG genre, discussing
	what implications these could have on its future. The survey also
	gave insight into the respondents' expectations of the future of
	MMORPGs. We conclude this article with a discussion of aspects of
	current MMORPGs that the participants would like improved, as well
	as new features they would like incorporated into the next generation
	of games.},
  database = {ACM},
  owner = {Katia},
  references = {Early Mud history

	China imposes online gaming curbs

	An analysis of online gaming crime characteristics

	Online Gaming Cheating and Security Issue

	Multi-user dungeons

	Sworn statement

	Defining grief play in MMORPGs: player and developer perceptions

	The effect of latency and network limitations on MMORPGs: a field
	study of everquest2

	The computer role-playing game genre

	Massively multiplayer online games: The past, the present, and the
	future

	Child dies as parents play WoW

	Preventing bots from playing online games

	Addressing cheating in distributed MMOGs

	What's ahead for massively multiplayer

	Online world timeline

	The history of NWN

	House ownership and decay changes

	A service platform for on-line games

	Everquest II sets new standard in multiplayer online gaming with voiceover
	for nonplayer characters

	The pursuit of a mythical audience

	Dungeon Master (computer game)

	EverQuest II

	Ultima Online

	Ultima Underworld: The Stygian Abyss

	The history of TSR

	A distributed event delivery method with load balancing for MMORPG

	The Daedalus project

	The demographics, motivations, and derived experiences of users of
	massively multi-user online graphical environments},
  timestamp = {2010.07.06}
}

@ARTICLE{E[111],
    inserir = {false},
  author = {T. Agotnes and W. van der Hoek and M. Wooldridge},
  title = {Reasoning about coalitional games},
  year = {2009},
  abstract = {We develop, investigate, and compare two logic-based knowledge representation
	formalisms for reasoning about coalitional games. The main constructs
	of Coalitional Game Logic (cgl) are expressions for representing
	the ability of coalitions, which may be combined with expressions
	for representing the preferences that agents have over outcomes.
	Modal Coalitional Game Logic (mcgl) is a normal modal logic, in which
	the main construct is a modality for expressing the preferences of
	groups of agents. For both frameworks, we give complete axiomatisations,
	and show how they can be used to characterise solution concepts for
	coalitional games. We show that, while cgl is more expressive than
	mcgl, the former can only be used to reason about coalitional games
	with finitely many outcomes, while mcgl can be used to reason also
	about games with infinitely many outcomes, and is in addition more
	succinct. We characterise the computational complexity of satisfiability
	for cgl, and give a tableaux-based decision procedure.},
  database = {ScienceDirect},
  owner = {Katia},
  references = {Effectivity Functions in Social Choice Theory

	On the logic of coalitional games

	Alternating-time temporal logic

	The bargaining set for cooperative games

	Complexity in cooperative game theory

	Model Checking

	Complexity of determining nonemptiness of the core

	Computing Shapley values, manipulating value division schemes, and
	checking core membership in multi-issue domains

	Complexity of constructing solutions in the core based on synergies
	among coalitions

	Extended modal logic

	On the complexity of cooperative solution concepts

	Computational complexity of weighted threshold games

	Temporal and modal logic

	Solutions to general non-zero-sum games

	Logic in conflict

	A modal characterization of Nash equilibrium

	Computational modal logic

	Introduction to Modal Logic

	Marginal contribution nets: A compact representation scheme for coalitional
	games

	All I know: a study in autoepistemic logic

	Theory of Games and Economic Behaviour

	A compact representation scheme for coalitional games in open anonymous
	environments

	A Course in Game Theory

	Computational Complexity

	Logic for social software

	A modal logic for coalitional power in games


	Distributed rational decision making

	Coalition formation among autonomous agents: Strategies and complexity

	Task allocation via coalition formation among autonomous agents

	Methods for task allocation via agent coalition formation,

	First-Order Logic

	A logic for strategic reasoning

	Making some issues of implicit knowledge explicit

	and common knowledge

	Modal logic for games and information

	Handbook of Knowledge Representation


	On the computational complexity of qualitative coalitional games

	On the computational complexity of coalitional resource games},
  timestamp = {2010.07.07}
}

@ARTICLE{E[77],
    inserir = {false},
  author = {L. de Alfaro and M. Faella},
  title = {Information Flow in Concurrent Games},
  year = {2003},
  abstract = {We consider games where the players have perfect information about
	the games state and history, and we focus on the information exchange
	that takes place at each round as the players choose their moves.
	The abilityof a player to gather information on the opponents choice
	of move in a round determines her ability to counteract the move,
	and win the game. When the game is played between teams, rather than
	single players, the amount of intra-team communication determines
	the ability of the team members to coordinate their moves and win
	the game. We consider games with quantitative bounds on inter-team
	and intra-team information flow, and we provide algorithms and complexity
	bounds for their solution.},
  database = {SpringerLink},
  owner = {Katia},
  references = {Alternating-time temporal logic

	Solving sequential conditions by finite-state strategies

	Concurrent omega-regular games

	Concurrent reachability games

	The control of synchronous systems

	The control of synchronous systems part II

	Tree automata, mu-calculus and determinacy

	Competitive Markov Decision Processes

	Trees, automata, and games

	Computers and Intractability: A Guide to the Theory of NP-Completeness

	Synthesis with incomplete information

	Synthesizing distributed systems

	Multiple-person alternation

	Distributed-reactive systems are hard to synthesize

	The compexityof two-player games of incomplete information

	Stochastic games

	On the synthesis of strategies in infinite games

	Probability With Martingales

	Infinite games on finitely coloured graphs with applications to automata
	on infinite trees},
  timestamp = {2010.07.07}
}

@ARTICLE{I[2],
    inserir = {true},
  author = {C. Alves and G. Ramalho and A. Damasceno},
  title = {Challenges in Requirements Engineering for Mobile Games Development:
	The Meantime Case Study},
  year = {2007},
  abstract = {The development of new market-driven software products involves several
	challenges for the requirements engineering process. The challenges
	are deeper in the case these products are mobile video games. In
	particular, the mobile games must satisfy a number of critical non-functional
	requirements (e.g. portability, gameplay, emotional issues). In addition
	to that, mobile games are developed for mass market, demanding from
	the development team to understand the requirements of very diverse
	and sometimes unknown groups of stakeholders. This paper presents
	the experience of meantime, a global mobile game developing company,
	in conducting requirements engineering activities during the development
	of the Frogman game. It also presents some lessons learned in the
	process.},
  database = {IEEE},
  owner = {Katia},
  references = {Engineering: a Roadmap

	Invented Requirements and Imagined Customers: Requirements engineering
	for Off-the-Shelf software

	Requirements Engineering and the Creative Process in the Video Game
	Industry

	Emotional Requirements in Video Games

	Game Development and Production

	Global Software Development: Technical, Organizational, and Social
	Challenges

	Is Emotion Relevant to Requirements Engineering?

	Elicitation and Management of User Requirements in Market-Driven Software
	Development

	Rules of Play: Game Design Fundamentals

	Non-Functional Requirements in Software Engineering

	Engineering Joy

	Provoking Creativity: Imagine What Your Requirements Could Be Like

	Improving Market-Driven RE Processes

	A Theory of Fun for Game Design

	Analysing fun as a candidate software requirement

	The Role of User Involvement in Requirements Quality and Project Success

	Putting Some Emotion into Requirements Engineering

	Heuristics for designing enjoyable user interfaces: Lessons from computer
	games

	Comparative Analysis of Porting Strategies in Mobile Device Games},
  timestamp = {2010.07.06}
}

@ARTICLE{I[3],
    inserir = {true},
  author = {V. Alves and T. Camara and C. Alves},
  title = {Experiences with Mobile Games Product Line Development at Meantime},
  year = {2008},
  abstract = {Small and medium enterprises (SME) represent a significant percentage
	of software companies. Although there are some experience reports
	on using software product line (SPL) techniques in SMEs, there is
	a lack of such reports on the mobile games domain. This domain is
	attractive both economically and technically, with a significant
	amount of variability, thus suggesting the use of a SPL approach.
	Accordingly, we conduct an exploratory study in a company in this
	domain, eliciting the main challenges, determining if and how SPL
	approaches help to address them, and raising hypotheses to guide
	future studies.},
  database = {IEEE},
  owner = {Katia},
  references = {ANT, APACHE

	Antenna Preprocessor

	Juniper 2008

	Meantime

	Pure::Variants

	Qualcomm Brew

	TiraJump

	Challenges in re for mobile games development: the meantime case study

	Implementing Software Product Line Adoption Strategies

	Comparative analysis of porting strategies in j2me games

	Beyond code: Handling variability in art artifacts in mobile game
	product lines

	Extracting and evolving code in product lines with aspect-oriented
	programming

	Requirements in the wild: How small companies do it

	Generative Programming: Methods, Tools, and Applications

	Evolving software product lines with aspects: an empirical study on
	design stability

	Easing the transition to software mass customization

	New methods in software product line development

	Evaluating support for features in advanced modularization technologies

	Managing infinite variability in mobile terminal software: Research
	articles

	Java 2 Platform

	Why are small software organizations different?

	Rules of Play: Game Design Fundamentals

	Porting games in j2me: Challenges, case study, and guidelines

	First decade of mobile games

	Building product populations with software components},
  timestamp = {2010.07.06}
}

@ARTICLE{E[61],
    inserir = {false},
  author = {V. Alves and P. Matos Jr. and L. Cole and P. Borba and G. Ramalho},
  title = {Extracting and Evolving Mobile Games Product Lines},
  year = {2005},
  abstract = {For some organizations, the proactive approach to product lines may
	be inadequate due to prohibitively high investment and risks. As
	an alternative, the extractive and the reactive approaches are incremental,
	offering moderate costs and risks, and therefore sometimes may be
	more appropriate. However, combining these two approaches demands
	a more detailed process at the implementation level. This paper presents
	a method for extracting a product line and evolving it, relying on
	a strategy that uses refactorings expressed in terms of simpler programming
	laws. The approach is evaluated with a case study in the domain of
	games for mobile devices, where variations are handled with aspect-oriented
	constructs.},
  database = {SpringerLink},
  owner = {Katia},
  references = {AspectJ project

	ProGuard

	An evaluation of aspect-oriented programming as a product line implementation
	technology

	Extracting and Evolving Mobile Games Product Lines 81

	Software Product Lines: Practices and Patterns

	Deriving refactorings for AspectJ

	Generative Programming: Methods, Tools, and Applications

	Staged configuration using feature models

	Refactoring: Improving the Design of Existing Code

	Refactoring of aspect-oriented software

	Role-based refactoring of crosscutting concerns

	Programming

	Easing the transition to software mass customization

	JSR-37 Mobile Information Device Profile (MIDP)

	Towards a catalog of aspect-oriented refactorings

	Concern graphs: Finding and describing concerns using structural program
	dependencies

	Reengineering a PC-based system into the mobile device product line},
  timestamp = {2010.07.07}
}

@ARTICLE{I[4],
    inserir = {true},
  author = {A. Amanatiadou and I. van de Weerd},
  title = {Extending the Reference Method for Game Production: A Situational
	Approach},
  year = {2009},
  abstract = {In this research, we describe the development of a situational game
	production method. In earlier research, the reference method for
	game production was proposed, which gives a complete overview of
	all possible activities and deliverables in a game production process.
	However, this method is a generic method that is not suitable for
	every game development project. The need exists for a method that
	can be tuned to different situations. In respect to this research,
	a situation corresponds to a game genre or other factors that influence
	the development steps. We conducted case studies at nine Dutch game
	companies, in order to a) validate the activities and deliverables
	in the existing reference method, and b) analyze the companiespsila
	existing methods in order to identify new situational routes which
	can be used to extend the reference method. We use method engineering
	principles and a meta-modeling technique to document, compare and
	analyze the nine methods. Based on the analysis, we propose four
	new routes, where each route represents a specific production case.
	The four routes are: serious games, online games, prototype and localization.
	Finally, we integrate the new routes with the existing method by
	developing a route map.},
  database = {IEEE},
  owner = {Katia},
  references = {Developing a game categorization for situational game production

	The use of computer games as an educational tool: identification of
	appropriate game types and game elements

	Genre and game studies: toward a critical approach to video game genres

	Hearts, clubs, diamonds, spades: players who suit muds

	Game Development and Production

	Method engineering: engineering of information systems development
	methods and tools

	Meta-modelling based assembly techniques for situational method engineering

	The Game Production Handbook

	are restless

	Situational method engineering for informational system project approaches

	Design science in information systems research

	Computer game criticism: a method for computer game analysis

	Methodology engineering: a proposal for situation specific methodology
	construction

	UML 2.0 superstructure specification

	Introduction to Game Development

	On Game Design


	Modelling design processes

	Design Research in Information Systems

	Meta-modeling for situational analysis and design methods

	A situational implementation method for web-based content management
	system-applications: method engineering and validation in practice

	Method comparison: a case study in game production methods

	Current practices in serious game research: a review from a learning
	outcomes perspective

	Games-Based Learning Advancements for Multisensory Human Computer
	Interfaces: Techniques and Effective Practices

	Case Study Research: Design and methods

	From visual simulation to virtual reality to games},
  timestamp = {2010.07.06}
}

@ARTICLE{I[5],
    inserir = {true},
  author = {A. Ampatzoglou and A. Chatzigeorgiou},
  title = {Evaluation of object-oriented design patterns in game development},
  year = {2007},
  abstract = {The use of object-oriented design patterns in game development is
	being evaluated in this paper. Games quick evolution, demands great
	flexibility, code reusability and low maintenance costs. Games usually
	differentiate between versions, in respect of changes of the same
	type (additional animation, terrains etc). Consequently, the application
	of design patterns in them can be beneficial regarding maintainability.
	In order to investigate the benefits of using design patterns, a
	qualitative and a quantitative evaluation of open source projects
	is being performed. For the quantitative evaluation, the projects
	are being analyzed by reverse engineering techniques and software
	metrics are calculated.},
  database = {ScienceDirect},
  owner = {Katia},
  references = {A Pattern Language Town, Buildings, Construction

	OO design patterns, design structure, and program changes: an industrial
	case study

	Designing a PC game engine

	Game design patterns

	Borland Together Control Center 6.1 product documentation

	The MOOD Metrics Set

	A metrics suite for object oriented design

	Managerial use of metrics for object oriented software: an exploratory
	analysis

	A software architecture for games

	Design Patterns: Elements of Reusable Object-Oriented Software

	Fingerprinting design patterns

	The effects of design pattern application on metric scores

	Game production time line

	Game engines in scientific research

	Agile software development: principles,patterns and practices

	Challenges in collaboration game design developing learning environments
	for creating games

	Game programming and the myth in a childs play

	A controlled experiment in maintenance comparing design patterns to
	simpler solutions

	Game research: the science of interactive environment

	The impact of computer games on scientific and information visualization:

	Design Patterns Explained. A New Perspective on Object Oriented Design

	The story engine concept in CS education

	Managing projects in a games factory: temporality and practices

	Design Pattern detection

	A controlled experiment comparing the maintainability of programs
	programming environment},
  timestamp = {2010.07.07}
}

@ARTICLE{E[120],
inserir = {false},
  author = {E. F. Anderson and S. Engel and P. Comninos and L. McLoughlin},
  title = {The case for research in game engine architecture},
  year = {2008},
  abstract = {This paper is a call for research in the field of game engine architecture
	and design, a more comprehensive and thorough understanding of which
	we consider to be essential for its development. We present a number
	of key aspects that may help to define the problem space and provide
	a catalogue of questions that we believe identify areas of interest
	for future investigation.},
  database = {ACM},
  owner = {Katia},
  references = {Game Development: Harder Than You Think

	A software architecture for games

	3D Game Engine Design

	Down the hyper-spatial tube: Spacewar and the birth of digital game
	culture

	Component based game development

	An introduction to software architecture

	The ultimate game developer's sourcebook

	Ultimate 3D Game Engine Design & Architecture

	Game engine anatomy 101

	"game engine" versus "rendering engine"

	Multi-threaded game engine design},
  timestamp = {2010.07.06}
}

@ARTICLE{E[6],
    inserir = {false},
  author = {C. S. Ang and P. Zaphiris and S. Mahmood},
  title = {A model of cognitive loads in massively multiplayer online role playing
	games},
  year = {2007},
  abstract = {Being one of the most commercially successful entertainment software
	applications, massively multiplayer online role playing games (MMORPGs)
	continue to expand in term of the revenue they generate as well as
	the involvement of users who congregate in their virtual space and
	form communities around them to support each other. Unlike conventional
	offline computer games, or networked games with limited numbers of
	players, MMORPGs are not merely software applications as they are
	usually seen as a space with complicated dynamics of social interactions.
	Hence, it is believed that playing these games might cause cognitive
	overload problems among the players as they have to constantly interact
	with the game world as well as with other users. We conducted an
	exploratory study using qualitative methods to explore cognitive
	overloads in Maple Story, a typical MMORPG. Our results reveal that
	several types of cognitive overloads emerge during the game playing.
	While some of these overloads pose serious problems even to expert
	players, players seem to develop strategies to overcome them. It
	is found that some forms of cognitive load are actually desirable
	in order to make the game challenging. We have also created a set
	of recommendations that can help game developers handle cognitive
	load problems in MMORPGs.},
  database = {ScienceDirect},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.07}
}

@ARTICLE{I[6],
    inserir = {true},
  author = {W. Barendregt and M. M. Bekker and D. G. Bouwhuis and E. Baauw},
  title = {Identifying usability and fun problems in a computer game during
	first use and after some practice},
  year = {2007},
  abstract = {This paper describes an experiment to discover the change in the types
	of detected problems and the attitude of children towards a game
	when user testing a computer game for young children during first
	use and after they have practiced with a game. Both the numbers of
	different types of identified problems and the severity of the problems
	are investigated. Based on this knowledge, practitioners could adapt
	the set up of their user tests to effectively find as many aspects
	of the game as possible that merit change, according to the aims
	of the developers. The study shows that usability problems caused
	by a lack of knowledge were more often identified during first use.
	Furthermore, fun problems related to a too-high challenge level may
	disappear after some practice, whereas fun problems caused by the
	game taking over control for too long while the user wants to proceed
	playing the game were identified more often after some practice.
	The study shows that the impact severity of problems detected during
	first use was higher than when children had more practice with a
	game. As a result of these changes in experienced problems the commonly
	used measures efficiency, effectiveness and satisfaction increased
	when children had practiced with the game. Finally, the study also
	shows that the set of most severe problems identified during first
	use may be radically different from the set of most severe problems
	identified after some practice.},
  database = {ScienceDirect},
  owner = {Katia},
  references = {The Architecture of Cognition

	Towards a framework for design guidelines for young children's computer
	games

	Empirical evaluation of usability and fun in computer games for children

	Predicting effectiveness of children participants in user testing
	based on personality characteristics

	Usability Testing and Research

	Evaluating usability and fun during initial and extended use of children's
	computer games

	Curiosity and Exploration

	Taxonomy of Educational Objectives

	An interpreted demonstration of computer game design

	A framework for usability problem extraction

	Intrinsic rewards and emergent motivation

	Intrinsic Motivation

	Heuristics and usability guidelines for the creation and evaluation
	of fun in video games

	Ergebnisse von Beobachtungen und Befragungen im Burobereich

	Mental Models, Lawrence Erlbaum

	Arbeitspsychologie

	The evaluator effect: a chilling fact about usability evaluation methods

	Ergonomic requirements for office work with visual display terminals
	(VDTs), Part 11: guidance on usability

	Usability evaluation methods, the reliability and usage of cognitive
	walkthrough and usability test

	The evaluator effect in usability tests

	Evaluating usability and fun of children's products

	Comparison of evaluation methods using structured usability problem
	reports

	What makes things fun to learn? A study of intrinsically motivating
	computer games

	Making learning fun: a taxonomy of intrinsic motivations for learning

	Max en de toverstenen (Milo and the magical stones)

	KIM Studie 2003 Kinder und Medien Computer und Internet

	Usability Engineering

	Estimating the number of subjects needed for a thinking aloud test

	Kind en media

	The Observer Pro

	Categorization of action slips

	Some observations on mental models

	User Centered System Design: New Perspectives on Human-Computer Interaction

	User-centered design in games

	Play, Dreams, and Imitation in Childhood

	Some surprising differences between novice and expert errors in computerized
	office work

	Human errors: a taxonomy for describing human malfunction in industrial
	installations

	Endurability, engagement and expectations: measuring children's fun

	Human Error

	Real World Research: A Resource for Social scientists and Practitioner
	Researchers

	Game Design Theory and Practice

	Handbook of Usability Testing: How to Plan, Design, and Conduct Effective
	Tests,

	Guidelines for Developing Successful Games

	DEVAN: a detailed video analysis of user test data

	Managing the evaluator effect in user testing

	Errors in working with office computers: a first validation of a taxonomy
	for observed errors in a field setting},
  timestamp = {2010.07.07}
}

@ARTICLE{E[136],
    inserir = {false},
  author = {P. Barr and J. Noble and R. Biddle},
  title = {Video game values: Human computer interaction and games},
  year = {2007},
  abstract = {Current human computer interaction (HCI) research into video games
	rarely considers how they are different from other forms of software.
	This leads to research that, while useful concerning standard issues
	of interface design, does not address the nature of video games as
	games specifically. Unlike most software, video games are not made
	to support external, user-defined tasks, but instead define their
	own activities for players to engage in. We argue that video games
	contain systems of values which players perceive and adopt, and which
	shape the play of the game. A focus on video game values promotes
	a holistic view of video games as software, media, and as games specifically,
	which leads to a genuine video game HCI.},
  database = {ScienceDirect},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.07}
}

@ARTICLE{E[81],
    inserir = {false},
  author = {M. Bell and M. Chalmers and L. Barkhuus and M. Hall and S. Sherwood
	and P. Tennent and B. Brown and D. Rowland S. Benford and M. Capra
	and A. Hampshire},
  title = {Interweaving mobile games with everyday life},
  year = {2006},
  abstract = {We introduce a location--based game called Feeding Yoshi that provides
	an example of seamful design, in which key characteristics of its
	underlying technologies-the coverage and security characteristics
	of WiFi-are exposed as a core element of gameplay. Feeding Yoshi
	is also a long--term, wide--area game, being played over a week between
	three different cities during an initial user study. The study, drawing
	on participant diaries and interviews, supported by observation and
	analysis of system logs, reveals players' reactions to the game.
	We see the different ways in which they embedded play into the patterns
	of their daily lives, augmenting existing practices and creating
	new ones, and observe the impact of varying location on both the
	ease and feel of play. We identify potential design extensions to
	Feeding Yoshi and conclude that seamful design provides a route to
	creating engaging experiences that are well adapted to their underlying
	technologies.},
  database = {ACM},
  owner = {Katia},
  references = {Picking Pockets on the Lawn: The Development of Tactics and Strategies
	in a Mobile Game

	Coping with uncertainty in a location-based game

	The error of our ways: the experience of self-reported position in
	a location-based game

	Life on the edge: supporting collaboration in location-based experiences

	Lessons from the lighthouse: collaboration in a shared mixed reality
	system

	Sharing the Square: Collaborative Leisure in the City Streets

	A Historical View of Context

	FIASCO: game interface for location-based play

	Orchestrating a mixed reality game 'on the ground'

	Hocman: supporting mobile group collaboration

	Where on-line meets on the streets: experiences with mobile mixed
	reality games

	The Work to Make a Home Network Work

	Mogi: Location and Presence in a Pervasive Community Game

	Six in the city: introducing Real Tournament - a mobile IPv6 based
	context-aware multiplayer game

	Cell-ID Location Technique, Limits and Benefits: An Experimental Study

	The Computer for the Twenty-First Century

	Creating the invisible interface},
  timestamp = {2010.07.06}
}

@ARTICLE{E[14],
    inserir = {false},
  author = {F. Bellotti and R. Berta and A. De Gloria and L. Primavera},
  title = {Adaptive Experience Engine for Serious Games},
  year = {2009},
  abstract = {Designing games that support knowledge and skill acquisition has become
	a promising frontier of education techniques, since games are able
	to capture the user concentration for long periods and can present
	users with realistic and compelling challenges. In this scenario,
	there is a need for scientific and engineering methods to build games
	not only as more realistic simulations of the physical world but
	as means to provide effective learning experiences. Abstracting state
	of the art serious games' (SGs) features, we propose a new design
	methodology for the sand box serious games (SBSGs) class, decoupling
	content from the delivery strategy during the gameplay. This methodology
	aims at making design more efficient and standardized in order to
	meet the growing demand for interactive learning. The methodology
	consists in modeling an SBSG as a hierarchy of tasks (e.g., missions)
	and specifies the requirements for a runtime scheduling policy that
	maximizes learning objectives in a full entertainment context. The
	policy is learned by an experience engine (EE) based on computational
	intelligence. In this approach, the domain-expert author focuses
	on the creation and semantic annotation of tasks. Tasks are put in
	a repository and can then be exploited by game designers who define
	the expected learning curve and other requirements about education
	and entertainment for the game. The task sequencing that aims at
	matching such specifications with the real user profile is then presented
	to the EE. The EE can operate also in absence of the specification
	of the learning curve, continuously adapting the game flow without
	aiming at the achievement of target knowledge levels predefined by
	the author. We have implemented an EE module based on genetic computation
	and reinforcement learning (RL) atop of a state-of-the-art game engine.
	Test results show that the EE is able to define in real-time missions
	that meet the requirements expressed by the author.},
  database = {IEEE},
  owner = {Katia},
  references = {Serious games for serious topics

	Cognitive science implications for enhancing training effectiveness
	in a serious gaming context

	Sixty percent of all Americans play video games, contributing to the
	fourth straight year of double digit growth for the interactive entertainment
	industry

	Digital game-based learning

	From visual simulation to virtual reality to games

	Design and evaluation challenges of serious games

	Lessons learned from games for education

	What Video Games Have to Teach us About Learning and Literacy

	A game-based adaptive unit of learning with ims learning design and
	e-Adventure

	How would a state of the art instructional video game look like?

	Human memory: A proposed system and its control processes

	Open-ended video games: A model for developing learning for the interactive
	age

	A Framework for Task-Based Learning

	Challenge and Change in Language Teaching

	Task-Based Language Learning and Teaching

	The Long Tail

	Exploring gaming mechanisms to enhance knowledge acquisition in virtual
	worlds

	Travel in Europe: An online game environment to promote and divulgate
	European heritage

	Situating Constructionism

	How to build serious games

	JDoc:Aserious game for medical learning

	OceanQuest: A university-based serious game project

	Visual realism enhances realistic response in an immersive virtual
	environment

	Is less actually more? the usefulness of educational mini-game

	Enhancing the educational value of videogames

	The educational potential of modified video games

	Applying principles of gaming, motivation and learning to enhance
	the effectiveness of CyberCIEGE

	A Field Guide to Educational Simulations


	PlayMancer: A serious gaming 3D environment

	Projects in VR: The Delta3D open source game engine

	Game AI in Delta3D

	Adaptive educational games: Providing non-invasive personalised learning
	experiences

	A case for formal design paradigm for serious games

	Artificial Intelligence and Tutoring Systems: Computational and Cognitive
	Approaches to the Communication of Knowledge

	Intelligent tutoring systems: Past, present and future

	Adaptation in digital games

	Expanding disposition theory: Reconsidering character liking, moral
	evaluations, and enjoyment

	Conceptualising media enjoyment as attitude: implications for mass
	media effects research

	Understanding media enjoyment: The role of transportation into narrative
	worlds

	Heuristics and usability guidelines for the creation and evaluation
	of fun in video games

	Proof of learning: Assessment in serious games

	The future of learning objects},
  timestamp = {2010.07.06}
}

@ARTICLE{I[7],
    inserir = {true},
  author = {D. Bendas and M. Myllyaho},
  title = {Wireless Games - Review and Experiment},
  year = {2002},
  abstract = {This paper is an introduction to the domain of wireless games. It
	presents a brief history of mobile gaming, a number of important
	technologies and introduces classification and evaluation concepts
	and criteria. A multi-player, multi-platform card game developed
	in the University of Oulu, is used to present authors own experiences
	in this field.},
  database = {SpringerLink},
  owner = {Katia},
  references = {Choice of one or two devices

	Nintendo wins new software maker

	The first smart phone service in the world

	Games Top 10.: Genre

	IDSA.: Computer And Video Games Are Here To Stay

	IDSA.: Essential Facts about the Computer and Video Game Industry

	IDSA: Interactive Digital Software Association Reports Popularity
	Of Computer And Video Games With Adults

	InFusio.:Customers

	Be an iMode Mifune?

	What About Fun and Games?

	The Wireless Arcade

	Mobileinfo.: Technology: Qualcomm the Bearer of Good News

	Nintendo.: Consolidated Financial Statements

	Mobile Gaming: A Framework for Evaluating the Industry 2000-2005

	Wireless Entertainment: The State of Play

	Tietokonepelien lyhyt historia (timeline)


	Mobile Phone Content and Java Game Market in Japan

	Culture Clash

	The Global Business Game: A Brief History of Business Games

	SubTV.: WaterWar

	Sun Microsystems.: Java2 Micro Edition (J2ME)

	Elektronisen pelaamisen historiaa lajityyppien kautta tarkasteltuna


	Lehdistotiedote 11.02.2002: Pelimarkkinat Suomessa 2001

	UMTS Forum.: Forum revises market study

	Wireless Web News.: Gaming the only way out for struggling operators

	Great things in small packages

	Making Money Writing Wireless Games},
  timestamp = {2010.07.07}
}

@ARTICLE{E[122],
    inserir = {false},
  author = {S. Benford},
  title = {The distinctive challenges of pervasive games as distributed real-time
	applications},
  year = {2006},
  abstract = {Summary form only given. Pervasive games are an emerging form of distributed
	real-time application that extend computer gaming out into the real
	world. From the city streets to the remote wilderness, players with
	mobile computing devices move through the world, sensors capture
	information about their current context, including their location,
	and this is used to deliver a gaming experience that adapts to where
	they are, what they are doing, and even how they are feeling. Players
	becomes unchained from their consoles and experience a game that
	is interwoven with the real world and that is potentially available
	at any place and any time. Pervasive games raise significant new
	challenges for the designers of distributed real-time applications,
	many of which arise from the distinctive characteristics of the underlying
	fabric of sensing and wireless communications technologies that constitute
	the ubiquitous computing infrastructure. Drawing on a series of recent
	collaborations with artists to develop, tour and study pervasive
	games, the author articulates these distinctive design challenges,
	exploring issues such as support for location-based play, revealing
	the nature of the ubiquitous infrastructure to designers, and adapting
	long-term persistent games with patterns of daily life.},
  database = {IEEE},
  owner = {Katia},
  references = {no references: The distinctive challenges of pervasive games as distributed
	real-time applications},
  timestamp = {2010.07.06}
}

@ARTICLE{E[17],
    inserir = {false},
  author = {E. J. Berglund and D. R. Cheriton},
  title = {Amaze: A Multiplayer Computer Game},
  year = {1985},
  abstract = {Amaze relies solely on the V kernel for point-to-point communication.
	The game's techniques could work in a general class of distributed
	applications.},
  database = {IEEE},
  owner = {Katia},
  references = {The V Kernel: A Software Base for Distributed Systems

	The Distributed V Kernel and its Performance for Diskless Workstations

	The Thoth System: Multi-process Structuring and Portability

	Grapevine: An Exercise in Distributed Computing},
  timestamp = {2010.07.06}
}

@ARTICLE{E[133],
    inserir = {false},
  author = {R. Bernhaupt and A. Boldt and T. Mirlacher and D. Wilfinger and M.
	Tscheligi},
  title = {Using emotion in games: emotional flowers},
  year = {2007},
  abstract = {It can be argued that one of the main reasons for playing games is
	to achieve an emotional reaction of the player. To be surprised,
	happy, angry or anxious - to perceive different emotional states
	- is one of the main reasons to play games. The "Emotional Flowers"
	game harnesses the player's emotions as the primary means for the
	game interaction. Within the game the player's facial expression
	of emotion is used to control the growth of a flower. Multiple players
	can play "Emotional Flowers" simultaneously. The main idea is to
	grow the flower as fast as possible based on positive emotions like
	happiness and surprise. Flowers of all participants within the game
	are additionally displayed on an ambient display in a public area.
	This influences not only emotions by the user, but also has an effect
	on social interactions within the group of players. In this paper,
	we present design, implementation and evaluation of the "Emotional
	Flowers" game.},
  database = {ACM},
  owner = {Katia},
  references = {Adobe Flash Player Version Penetration

	Emotional User Interfaces in the Car

	Defining personas in games using metrics

	Virtuelle Realität und parasoziale Interaktion

	SUS: A Quick and Dirty Usability Scale

	The FaceReader: Online Facial Expression Recognition

	Using heuristics to evaluate the playability of games

	Manual for the FacialAction Coding System

	Handbook of Cognition and Emotion

	Aesthetic information collages: generating decorative displays that
	contain information

	Reflex flower: ambient work rhythm visualization system in computer-aided
	work environments

	Weekend battle: an entertainment system for improving workers' motivation

	Gaze and Speech in Attentive User Interfaces

	Heuristic evaluation of ambient displays

	Emotions and Multimodal Interface-Agents: A Sociological View

	What is evaluation?

	Affective computing

	Informative art: using amplified artworks as information displays

	A circumplex model of affect

	The Game Design Reader: A Rules of Play Anthology

	Utilizing mobile phones as ambient information displays

	Between Aestethics and Utility: Designing Ambient Information Visualizations

	Issues with Long-term Evaluation of Ambient Displays

	The computer for the 21st century

	The Coming Age of Calm Technology},
  timestamp = {2010.07.06}
}

@ARTICLE{I[8],
    inserir = {true},
  author = {L. Bishop and D. Eberly and T. Whitted and M. Finch and M. Shantz},
  title = {Designing a PC Game Engine},
  year = {1998},
  abstract = {Computer game engine requirements change in response to evolving game
	platforms and demands for reduced development costs. We propose a
	3D game engine, marketed as NetImmerse, for varying performance levels.},
  database = {IEEE},
  owner = {Katia},
  references = {IRIS Performer: A High-Performance Multiprocessing Toolkit for Real-Time
	3D Graphics

	RenderWare Technical Specification

	Render Technology Features

	Michael Abrash"s Graphics Programming Black Book

	Accelerated Graphics Port Interface Specification

	VRML 2.0 Sourcebook

	Unofficial Quake-C Specification

	Building Online Virtual Worlds

	NetImmerse Programmers Manual

	Multiresolution Analysis of Arbitrary Meshes

	OBBTree: A Hierarchical Structure for Rapid Interference Detection

	Visibility Preprocessing For Interactive Walkthroughs

	Real-Time Continuous Level of Detail Rendering of Height Fields},
  timestamp = {2010.07.06}
}

@ARTICLE{I[9],
    inserir = {true},
  author = {J. Blow},
  title = {Game Development: Harder Than You Think},
  year = {2006},
  abstract = {The hardest part of making a game has always been the engineering.
	In times past, game engineering was mainly about low-level optimization writing
	code that would run quickly on the target computer, leveraging clever
	little tricks whenever possible.},
  database = {ACM},
  owner = {Katia},
  references = {Manager in a Strange Land: Turn-around Time

	Manager in a Strange Land: Content Turnaround

	Web portal for game developers free account and password required

	Linear Algebra Done Right

	Digital Filters

	Quaternion Algebra and Calculus

	Spherical Harmonic Lighting: The Gritty Details

	Interactive Profiling 1-3},
  timestamp = {2010.07.06}
}

@ARTICLE{I[10],
    inserir = {true},
  author = {M. Bond and R. Beale},
  title = {What makes a good game? Using reviews to inform design},
  year = {2009},
  abstract = {The characteristics that identify a good game are hard to define and
	reproduce, as demonstrated by the catalogues of both successes and
	failures from most games companies. We have started to address this
	by undertaking a grounded theoretical analysis of reviews garnered
	from games, both good and bad, to distil from these common features
	that characterize good and bad games. We have identified that a good
	game is cohesive, varied, has good user interaction and offers some
	form of social interaction. The most important factor to avoid is
	a bad pricing. Successfully achieving some of these good factors
	will also outweigh problems in other areas.},
  database = {ACM},
  owner = {Katia},
  references = {Flow: The Psychology of Optimal Experience

	Grounded Theory: A Thumbnail Sketch.

	Heuristics and usability guidelines for the creation and evaluation
	of fun in video games

	Video Game Reviews

	The discovery of grounded theory

	Digital game-based learning: towards an experiential gaming model

	What makes things fun to learn? Heuristics for designing instructional
	computer games

	Game Reviews from Metacritic

	A Q-Study of game player aesthetics

	Video Games in the 21st Century: Economic Contributions of the US
	Entertainment Software Industry

	GameFlow: A Model for Evaluating Player Enjoyment in Games},
  timestamp = {2010.07.06}
}

@ARTICLE{E[62],
    inserir = {false},
  author = {E. Brandt and J. Messeter},
  title = {Facilitating collaboration through design games},
  year = {2004},
  abstract = {In recent years both companies and research communities call for collaborative
	work practices and user-centered approaches in various design fields.
	There are several challenges and issues to take into consideration.
	For instance there is a need to find ways of collaborating across
	various competences, interests, responsibilities and perhaps professional
	languages both within one organization, between several organizations
	and between the organizations and a group of (potential) users. It
	is necessary to find ways to learn about users and the contexts of
	use, and to create a common understanding of the development task.
	This paper presents a set of four design games, which offers solutions
	to the challenges mentioned. The design games have been developed
	in the Space Studio during several projects and years. Here experiences
	are discussed on the basis of two research projects carried out in
	collaboration with industrial partners and potential users, and use
	of the games in three educational settings.The overall aim of the
	design games is to help facilitate a user-centered design process
	for cross-disciplinary design groups early in the design process.
	Framing collaborative design activities in a game format, arguably
	improves idea generation and communication between stakeholders.
	By shifting focus to the game, power relations and other factors
	that might hamper idea generation, are downplayed.},
  database = {ACM},
  owner = {Katia},
  references = {Setting the stage for improvised video scenarios

	Evoking the future: drama and props in user centered design

	Designing engineers

	Experience prototyping

	B: Actors, hair-dos and videotape: Informance design

	Making Use: Scenario-Based Design of Human-Computer Interactions

	Cardboard computers: mocking-it-up or hands-on the future

	From system descriptions to scripts for action

	Creative Cognition -- Theory, Research, and Applications

	Exploring design through wearable computing art(ifacts)

	Concept design Games (Book 1 and 2)

	Using 'endowed props' in scenario-based design

	Everyday Life as a Stage in Creating and Performing Scenarios for
	Wireless Devices

	Tangible bits: towards seamless interfaces between people, bits and
	atoms

	Engaged Design -- New challenges for workplace design

	Brick Games in Boardrooms: Making Use Context Tangible

	Beyond the Control Room: Mobile Devices for Spatially Distributed
	Interaction on Industrial Process Plants

	Contextualizing mobile IT

	Understanding contexts by being there: case studies in bodystorming

	Mindstorms: Children, computers, and powerful ideas

	Methods & tools: Playacting and focus troupes

	The Reflective Practitioner: How Professionals Think in Action

	The structure of ill-structured solutions: boundary objects and heterogeneous
	distributed problem solving

	The Computer for the 21st Century

	Back to the real world},
  timestamp = {2010.07.06}
}

@ARTICLE{E[116],
    inserir = {false},
  author = {A. Brownsword and I. Gorton},
  title = {Software Architecture in Game Development},
  year = {2008},
  abstract = {Summary form only given. Video games have now existed in various forms
	for over 30 years, and have evolved from humble beginnings into remarkably
	complex software projects. The ever present emphasis on an immersive
	audio/visual experience has put game developers in the position of
	being on the bleeding edge of exploring the performance of modern
	consumer hardware. This talk will discuss the elements that make
	up a contemporary video game, the software processes that are involved
	in development, key challenges, and look at some important design
	patterns that form the architectural basis.},
  database = {IEEE},
  owner = {Katia},
  references = {references not available: Software Architecture in Game Development},
  timestamp = {2010.07.06}
}

@ARTICLE{E[95],
    inserir = {false},
  author = {T. Burney and P. Lock},
  title = {Measuring Game-Play Performance and Perceived Immersion in a Domed
	Planetarium Projection Environment},
  year = {2007},
  abstract = {Game playing in immersive projection environments such as caves and
	domes is assumed to offer an enhanced experience but there is little
	quantitative research that measures this. This paper reports on a
	study of user performance statistics while playing a computer game
	projected onto a planetarium dome and compares these with similar
	measurements taken in a conventional projected flat screen environment.
	A survey of users subjective impressions of immersion was also taken
	and used to compare these display modes. Analysis of users in each
	mode revealed differences in user experience and some aspects of
	performance. It was confirmed that dome projection enhanced the players
	sense of immersion when compared with flat projection. Navigation
	speed was found to decline in the dome while other performance metrics
	showed no significant difference between the environments.},
  database = {SpringerLink},
  owner = {Katia},
  references = {Media Productions for a Dome Display System

	Spherical mirror: a new approach to hemispherical dome projection

	Game engine virtual reality with CaveUT Virtual World

	Investigating Interaction in CAVE Virtual Environments

	Gameflow: A Model for Evaluating Player Enjoyment in Games (Article
	3A)

	A grounded investigation of game immersion

	Effects of field of view on presence, enjoyment, memory, and simulator
	sickness in a virtual environment

	Future Directions in Astronomy Visualisation

	Visualisation using game engines},
  timestamp = {2010.07.07}
}

@ARTICLE{E[112],
    inserir = {false},
  author = {D. Callele and E. Neufeld and K. Schneider},
  title = {Requirements in Conflict: Player vs. Designer vs. Cheater},
  year = {2008},
  abstract = {There are significant interactions between video game stakeholder
	emotional requirements and security requirements. Counter-intuitively,
	some traditional security requirements are not necessarily met by
	the game implementation some forms of security breaches are condoned
	by the stakeholders (if not actually demanded by them) and the requirements
	engineering process must support these contradictions. We present
	an overview of security requirements for video games and show how
	stakeholder diversity introduces significant complexities to the
	requirements negotiation process. Our analysis of certain security
	threats, and their emotional motivations, shows that these motivations
	form an important element of the emotional requirements and that
	significant context is necessary for properly capturing the emotional
	requirements related to security. Finally, we show how emotional
	requirements can be used to guide security goal development for this
	domain and propose the use of in-game justice systems to allow players
	to address security violations in realtime.},
  database = {IEEE},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.06}
}

@ARTICLE{I[11],
    inserir = {true},
  author = {D. Callele and E. Neufeld and K. Schneider},
  title = {Requirements engineering and the creative process in the video game
	industry},
  year = {2006},
  abstract = {The software engineering process in video game development is not
	clearly understood, hindering the development of reliable practices
	and processes for this field. An investigation of factors leading
	to success or failure in video game development suggests that many
	failures can be traced to problems with the transition from preproduction
	to production. Three examples, drawn from real video games, illustrate
	specific problems: 1) how to transform documentation from its preproduction
	form to a form that can be used as a basis for production;, 2) how
	to identify implied information in preproduction documents; and 3)
	how to apply domain knowledge without hindering the creative process.
	We identify 3 levels of implication and show that there is a strong
	correlation between experience and the ability to identify issues
	at each level. The accumulated evidence clearly identifies the need
	to extend traditional requirements engineering techniques to support
	the creative process in video game development.},
  database = {IEEE},
  owner = {Katia},
  references = {Goal-based requirements analysis

	Digital America

	Postmortem column

	Putting some emotion into requirements engineering

	Game Development and Production

	Software defect reduction top 10 list

	Ontology as a requirements engineering product

	Non-Functional Requirements in Software Engineering

	Flow: The Psychology of Optimal Experience

	Goaldirected requirements acquisition

	Analysing fun as a candidate software requirement

	POSTMORTEMS from Game Developer

	Top Boxoffice

	The dry and the wet

	Techniques for requirements elicination

	A scenario-based methodology for conducting requirements elicitation

	Engineering joy

	Requirements information management: The NATURE approach

	Game Design Perspectives

	The emotion commotion

	Domains of concern in software architectures and architecture description
	languages

	The Indie Game Development Survival Guide

	The Design of Everyday Things

	Speeding up requirements management in a product software company:
	Linking customer wishes to product requirements through linguistic
	engineering

	Point/counterpoint: Requirements analysts must also be inventors

	Requirements Trawling: techniques for discovering requirements

	Game Architecture and Design

	Rules of Play: Game Design Fundamentals

	Game Design Secrets of the Sages

	Requirements engineering in the year 2000: a research perspective

	Classification of research efforts in requirements engineering},
  timestamp = {2010.07.06}
}

@ARTICLE{I[12],
    inserir = {true},
  author = {D. Callele and E. Neufeld and K. Schneider},
  title = {Emotional Requirements in Video Games},
  year = {2006},
  abstract = {Requirements engineering for video games must address a wide range
	of functional and non-functional requirements. Video game designers
	are most concerned with capturing and representing the player experience:
	the means by which the player's consciousness is cognitively engaged
	while simultaneously inducing emotional responses. We show that emotional
	requirements can be expressed in two parts: as the emotional intent
	of the designer and the means by which the designer expects to induce
	the target emotional state. Spatial and temporal qualifiers on intent
	and means may also be required. We introduce emotional terrain maps,
	emotional intensity maps, and emotion time lines as visual mechanisms
	for capturing and expressing emotional requirements. Using a first-person
	shooter example, we show that these mechanisms can express the desired
	emotional requirements while providing support for spatial and temporal
	qualifiers.},
  database = {IEEE},
  owner = {Katia},
  references = {Storyboard prototyping for requirements verification

	The role of emotion in believable agents

	Putting some emotion into requirements engineering

	Requirements engineering and the creative process in the video game
	industry

	The use of faces to represent points in k-dimensional space graphically

	Analysing fun as a candidate software requirement

	Measuring facial movement

	The Cognitive Affinity Project

	Engineering joy

	The emotion commotion

	The Design of Everyday Things

	Supporting Scenario-Based Requirements Engineering},
  timestamp = {2010.07.06}
}

@ARTICLE{E[22],
    inserir = {false},
  author = {S. Caltagirone and M. Keys and B. Schlief and M. J. Willshire},
  title = {Architecture for a massively multiplayer online role playing game
	engine},
  year = {2002},
  abstract = {Faster networks, faster processors and 3D accelerator cards have contributed
	to the push for a new genre of online games, the Massively Multiplayer
	Online Role Playing Game, MMORPG. This paper presents a high-level
	software architecture for building a MMORPG engine. Six goals for
	the architecture are set, the architecture is presented and then
	examined to determine how well the goals have been met. The architecture
	blends in a unique way several classical software architecture patterns,
	using the strength of each to achieve the goals for the system.},
  database = {ACM},
  owner = {Katia},
  references = {Software architecture in practice

	Cheat-Proof Playout for Centralized and Distributed Online Games

	Design and use of software architectures: adopting and evolving a
	product-line approach

	Pattern-oriented software architecture: a system of patterns

	A Distributed Multiplayer Game Server System

	A Distributed Architecture for Multiplayer Interactive Applications
	on the Interne

	a 3D Multi-Player Game on the Interne

	Aspects of Networking in Multiplayer Computer Games},
  timestamp = {2010.07.06}
}

@ARTICLE{E[33],
    inserir = {false},
  author = {J. Cavazos},
  title = {Computer games: introduction},
  year = {1996},
  abstract = {"Why an issue on computer games?" you may be asking. Several reasons
	come to mind. First, computer science owes a lot to computer games.
	Obviously, the computer game industry has made significant advances
	in computer graphics, but computer games have also made contributions
	in other areas such as human computer interaction and computer architecture.
	In the future, I believe the contributions from computer games to
	computer science, and vice versa, will be even more numerous. Computer
	game companies and software and hardware companies are forming alliances
	in order to leverage off each other's research. Entertainment companies
	and telecommunication companies are also joining these alliances.
	Whatever the outcome of these partnerships, we know that computer
	games will change dramatically in the future...},
  database = {ACM},
  owner = {Katia},
  references = {no references - Computer games: introduction},
  timestamp = {2010.07.06}
}

@ARTICLE{E[23],
    inserir = {false},
  author = {W. Cazzola and D. Colombo and D. Harrison},
  title = {Aspect-oriented procedural content engineering for game design},
  year = {2009},
  abstract = {Generally progressive procedural content in the context of 3D scene
	rendering is expressed as recursive functions where a finer level
	of detail gets computed on demand. Typical examples of content procedurally
	generated are fractal images and noise textures. Unfortunately, not
	always the content can be expressed in this way, developers and content
	creators need the data to have some peculiarity (like windows on
	a wall for a house 3D model) and a method to drive data simplification
	without losing relevant details. In this paper we discuss how aspect
	oriented (AO) techniques can be used to drive the content creation
	process by mapping each data peculiarity to the code to generate
	it. Using aspects will let us to partially evaluate the code of the
	procedure improving the performance without losing the flow of the
	generation logic. We will also discuss how the use of AO can provide
	techniques to build simplified version of the data through code transformations.},
  database = {ACM},
  owner = {Katia},
  references = {Freely Annotating C#

	On the Footprints of Join Points: The Blueprint Approach

	Preserving Attribute Values on Simplified Meshes by Resampling Detail
	Textures

	C-BDAM -- Compressed Batched Dynamic Adaptive Meshes for Terrain Rendering

	Progressive meshes

	Aspect-Oriented Programming

	Procedural modeling of buildings

	Decimation of triangle meshes

	Dynamic AOP and Runtime Weaving for Java- How Does AspectWerkz Address
	It?},
  timestamp = {2010.07.06}
}

@ARTICLE{E[83],
    inserir = {false},
  author = {A. T. Chamillard},
  title = {Introductory game creation: no programming required},
  year = {2006},
  abstract = {Many incoming college freshmen have accumulated a significant number
	of hours of experience playing computer games. Extending that experience
	to actual game creation activities can be highly motivational for
	these students. Most of these activities require some level of programming
	expertise, however, making them activities too advanced for the majority
	of incoming students.In this paper, we describe a freshman-level
	course called Problem Solving through Game Creation. Students learn
	to use a number of drag-and-drop game creation tools to develop both
	2D and 3D games, with no programming required in the course. We also
	cover a variety of other topics and tools related to game development.Our
	experience has been that students enjoy the course, but we have more
	formal course goals as well. Specifically, we hope to motivate students
	to declare and complete the computer science major and to better
	prepare students for the initial required computer science courses.
	We describe these goals in detail and discuss the process we have
	initiated to continually evaluate achievement of those goals.},
  database = {ACM},
  owner = {Katia},
  references = {Awesome Game Creation: No Programming Required with Cdrom

	Teaching with games: the Minesweeper and Asteroids experience

	Evaluating programming ability in an introductory computer science
	cours

	Teaching software engineering through game design

	Engaging girls with computers through software games

	Strategy game programming projects

	Introduction to the personal software process

	Design and implementation of computer games: a capstone course for
	undergraduate computer science education

	CS1 and CS2: write computer games in Java!

	The effect of a male-oriented computer gaming culture on careers in
	the computer industry

	Fun and games: a new software engineering course

	Do computer games have a role in the computing classroom?},
  timestamp = {2010.07.06}
}

@ARTICLE{E[135],
    inserir = {false},
  author = {K. Chang and G. Kim and T. Kim},
  title = {Video Game Console Audio: Evolution and Future Trends},
  year = {2007},
  abstract = {Rapidly advancing technologies and the increasing role of computers
	give the computer game boundless potential for the future. Among
	the various game industries, the console game industry in particular
	has attracted significant attention, bringing the importance of sound
	and music to the forefront. Game music was traditionally used for
	sound effects to prevent user boredom. As gaming developed, so did
	audio, being utilized for numerous purposes. As gaming platforms
	increased in power and complexity, audio, which was once limited
	to simple beeps, started to play a larger role, becoming back ground
	music (BGM) having quality at par with that of films. This paper
	discusses the evolution of video game console audio specifications
	and hardware, from simple 8-bit machines to future directions in
	the development of audio generators for game sound & music.},
  database = {IEEE},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.06}
}

@ARTICLE{E[16],
    inserir = {false},
  author = {D. Charles and D. Livingstone},
  title = {AI: the Missing Link in Digital Game Interface Design?},
  year = {2004},
  abstract = {The central problem that this paper addresses is how to manage dynamic
	change within game environments in response to variable player requirements
	and ability. In particular, we discuss the role of a game AI to enable
	game systems to learn about individual user patterns, behaviours,
	desires or moods in order to adapt the environment in reaction to
	the users interaction with the environment. We discuss the role
	that AI may play in the design of the game interface in order to
	enhance the dynamic and responsive nature of the game system with
	respect to individual users and leading to more rewarding and immersive
	game experiences.},
  database = {SpringerLink},
  owner = {Katia},
  references = {Testing Undefined Behaviour as a Result of Learning

	Intelligent Modeling of the User in Interactive Entertainment

	Enhancing Gameplay: Challenges for Artificial Intelligence in Digital
	Games

	Player Modelling for Adaptive Game

	Intelligent Interfaces for Digital Games

	Learning of AI Players from Game Observation Data},
  timestamp = {2010.07.07}
}

@ARTICLE{I[13],
    inserir = {true},
  author = {T. C. S. Cheah and K. -W. Ng},
  title = {A practical implementation of a 3D game engine},
  year = {2005},
  abstract = {Creating a 3-D game engine is not a trivial task as gamers often demand
	for high quality output with top notch performance in games. In this
	paper, we show you

	how various real-time rendering algorithms can be applied to implement
	a practical 3-D game engine. We explore the general architecture
	of a 3-D engine and

	discuss the role of a scene graph in a 3-D engine. We will look at
	scene graph from the software engineering perspective. In particular,
	we show you the way to design

	a scene graph that is object-oriented and portable across different
	rendering engine. Then, we explain the algorithms that we apply to
	speed up the performance of

	our 3-D engine. We optimize the 3-D engine on the scene graph and
	object geometry levels. The algorithms that we propose are expected
	to perform reasonably well for both static and dynamic scenes. Finally,
	we give you a brief preview on the possibility of parallel processing
	in scene graph to create a 3-D engine with multiprocessing

	capability.},
  database = {IEEE},
  owner = {Katia},
  references = {Scene Graphs in the New Millennium

	Creating 3-D Graphics Engines

	An object-oriented 3D Graphics Toolkit

	A Generalized Scene Graph

	Output-Sensitive Visibility Algorithms for Dynamic Scenes with Applications
	to Virtual Reality

	Applications of Spatial Data Structures

	Simple Intersection Tests for Games

	Ray Tracing Complex Scenes

	Hierarchical Scene Representations

	Efficient and Feature-Preserving Triangular Mesh Decimation

	Surface Simplification using Quadric Error Metric

	Decimation of Triangle Meshes

	Model Simplification Using Vertex Clustering

	Visibility Culling using Hierarchical Occlusion Maps

	Dynamic Scene Occlusion Culling

	IRIS Performer: A High Performance Multiprocessing Toolkit for Real-Time
	3D Graphics

	The Design of a Parallel Graphics Interface},
  timestamp = {2010.07.06}
}

@ARTICLE{I[14],
    inserir = {true},
  author = {F. Chehimi and P. Coulton and R. Edwards},
  title = {Evolution of 3D mobile games development},
  year = {2008},
  abstract = {3D computer graphics have been an important feature in games development
	since it was first introduced in the early 80s and there is no doubt
	that 3D based content is often viewed as more attractive in games
	than the more abstract 2D graphics. Many games publishers are keen
	to leverage their success in the console market into the mobile phone
	platform. However, the resource constraints of mobile phones and
	the fragmented nature of the environment present considerable challenges
	for games developers. In this paper we consider some of the current
	constraints together with current and, probable, future developments
	both in the software and hardware of mobile phones. As part of this
	process we benchmark some of the latest and most prevalent software
	and hardware devices to ascertain both the quality of the graphics
	produced and the effects upon battery life. Whilst our test results
	highlight that the current market does indeed present challenges,
	our research into the future developments highlights the fact we
	are approaching greater standardization, which will be an important
	factor for the successful development of 3D mobile games.},
  database = {SpringerLink},
  owner = {Katia},
  references = {Mobile phone makers eye booming games market

	Mobile games market stagnating

	21st century game design

	OpenGL ES game development

	Introduction to 3-D graphics on series 60 platform

	Creating entertainment applications for cellular phones

	C++ optimisations for mobile applications

	Evolution of 3D games on mobile phones

	The OpenGL graphics system: a specification

	Getting started with the mobile 3D graphics API for J2ME


	Advances in 3D graphics for Smartphones

	Time for an assault on batteries?},
  timestamp = {2010.07.07}
}

@ARTICLE{E[53],
    inserir = {false},
  author = {F. Chehimi and P. Coulton and R. Edwards},
  title = {Evolution of 3D games on mobile phones},
  year = {2006},
  abstract = {While there is no doubt that there will be an increasing trend towards
	3D games on mobile devices the resource constraints of the devices
	themselves and the highly variable nature of the environment present
	considerable challenges for games developers. In this paper we consider
	some of the current constraints together with current and, probable,
	future developments both in the software and hardware of mobile phones
	that will enable more sophisticated games to be developed. As part
	of this process we benchmark some of the latest and most prevalent
	software and devices to ascertain both the quality of the graphics
	produced and the effects on the battery life. Whilst we are certain
	that 3D games play an important future in the success of future mobile
	services the current baseline for development is highly variable
	and presents difficulties for games programmers both in development
	and wide scale distribution.},
  database = {IEEE},
  owner = {Katia},
  references = {Worldwide share of Mobile Gaming Revenues to Shift

	OpenGL ES Game Development

	The Challenge of Migration: Desktop to Handheld

	Wireless Game Development in C/C++ with BREW

	Developing Series 60 Applications: A Guide for Symbian OS C++ Developers

	About BREW

	JSR 184: Mobile 3D Graphics API for J2ME

	Khronos and OpenGL ES

	Small and Beautiful

	OpenGL ES Development on Series60 and Symbian

	The Smartphone Benchmark

	OpenGL ES Demos

	Time for an Assault on Batteries?

	Xda Comparison Too

	Samsung Shows off Hard-dive Based Mobile

	Khronos News Release},
  timestamp = {2010.07.06}
}

@ARTICLE{E[49],
    inserir = {false},
  author = {G. Chen and J. Zhang},
  title = {Dynamic Terrain LOD with Region Preservation in 3D Game Engine},
  year = {2006},
  abstract = {In the outdoor 3D game, the terrain can be modified because of interaction.
	This brings two new complexities to render terrain in 3D game. The
	first lies in the real-time visualization of dynamic terrain, and
	the second is that the modified terrain surface need to be preserved.
	We present an algorithm for dynamic terrain LOD(DT LOD) with preserving
	region in 3D game engine. The algorithm uses a DAG to represent dependency
	relationship of vertices which split triangles, and employs an active
	vertices set to update triangles in two consecutive frames for improving
	rendering performance. The region LOD can be constructed according
	to the view direction and the distance between the viewpoint and
	regions. The results of experiments show that our algorithm has a
	effective performance during rendering terrain.},
  database = {SpringerLink},
  owner = {Katia},
  references = {Real-time, continuous level of detail rendering of height fields

	ROAMing Terrain: Real-time optimally adapting meshes

	Real-time visualization of dynamic terrain for ground vehicle simulation

	Visualization of large terrain made easy

	Real-Time Visualization of Dynamic Terrain

	Level of detail management for 3D games

	Large-scale dynamic terrain in three-dimensional construction process
	visualizations},
  timestamp = {2010.07.07}
}

@ARTICLE{I[15],
    inserir = {true},
  author = {J. Chen},
  title = {Flow in games (and everything else)},
  year = {2007},
  abstract = {A well-designed game transports its players to their personal Flow
	Zones, delivering genuine feelings of pleasure and happiness.},
  database = {ACM},
  owner = {Katia},
  references = {1


	Csikszentmihalyi, M. Flow: The Psychology of Optimal Experience. Harper
	Perennial, London, 1990.


	2


	Debold, E. Flow with soul: An interview with Dr. Mihaly Csikszentmihalyi.
	What Is Enlightenment Magazine (Spring-Summer 2002); www.wie.org/j21/cziksz.asp.


	3


	Holt, R. Examining Video Game Immersion as a Flow State. B.A. Thesis,
	Department of Psychology, Brock University, St. Catharines, Ontario,
	Canada, 2000.


	4


	Penelope Sweetser , Peta Wyeth, GameFlow: a model for evaluating player
	enjoyment in games, Computers in Entertainment (CIE), v.3 n.3, July
	2005 [doi>10.1145/1077246.1077253]},
  timestamp = {2010.07.06}
}

@ARTICLE{E[43],
    inserir = {false},
  author = {K. Chen and C. Lei},
  title = {Design implications of social interaction in online games},
  year = {2006},
  abstract = {While psychologists analyze network game-playing behavior in terms
	of players social interaction and experience, understanding user
	behavior is equally important to network researchers, because how
	players act determines how well systems, such as MMORPGs, perform.
	To gain a better understanding of patterns of player interaction
	and their implications for game design, we analyze a 1,356-million-packet
	trace of ShenZhou Online, a mid-sized commercial MMORPG. To the best
	of our knowledge, this work is the first to put forward architectural
	design recommendations for online games based on analysis of player
	interaction.

	We find that the dispersion of players in a virtual world is heavy-tailed,
	which implies that static and fixed-size partitioning of game worlds
	is inadequate. Neighbors and teammates tend to be closer to each
	other in network topology. This property is an advantage, because
	message delivery between the hosts of interacting players can be
	faster than between those of unrelated players. In addition, the
	property can make game playing fairer, since interacting players
	tend to have similar latencies to their servers. We also find that
	participants who have a higher degree of social interaction tend
	to play much longer, and players who are closer in network topology
	tend to team up for longer periods. This suggests that game designers
	could increase the stickiness of games by supporting, or even forcing,
	team playing.},
  database = {SpringerLink},
  owner = {Katia},
  references = {The social side of gaming: a study of interaction patterns in a massively
	multiplayer online game

	The demographics of groups and group leadership

	Peer-to-peer support for massively multiplayer games

	MOPAR: a mobile peer-to-peer overlay architecture for interest management
	of massively multiplayer online games

	Dynamic microcell assignment for massively multiplayer online gaming

	Locality aware dynamic load management for massively multiplayer games

	Scalable peer-to-peer networked virtual environment

	An efficient partitioning algorithm for distributed virtual environment
	systems},
  timestamp = {2010.07.07}
}

@ARTICLE{E[97],
    inserir = {false},
  author = {W. Y. Chen and S. Payandeh},
  title = {Micro Robot Hockey Simulator - Game Engine Design},
  year = {2007},
  abstract = {Like robot soccer, robot hockey is a game played between two teams
	of robots. A robot hockey simulator has been created, for the purpose
	of game strategy testing and result visualization. One major modification
	in robot hockey is the addition of a puck-shooting mechanism to each
	robot. As a result, the mechanics of interaction between the robots
	and the hockey puck become a key design issue. This paper describes
	the simulator design considerations for robotic hockey games. A potential
	field-based strategy planner is implemented which is used to develop
	strategies for moving the robots autonomously. The results of the
	simulation study show both successful cooperation between robots
	(on the strategy level), and realistic interaction between robots
	and the puck.},
  database = {IEEE},
  owner = {Katia},
  references = {references not founded: Micro Robot Hockey Simulator - Game Engine
	Design},
  timestamp = {2010.07.06}
}

@ARTICLE{E[132],
    inserir = {false},
  author = {K. S. Y. Chiu and K. C. C. Chan},
  title = {Using Data Mining for Dynamic Level Design in Games},
  year = {2008},
  abstract = {Fun is the most important determinant of whether a game will be
	successful. Fun can come from challenges and goals, such as victory
	in a scenario, the accumulation of money, or the right to move to
	the next level. A game that provides a satisfying level of challenge
	is said to be balanced. Some researchers use artificial intelligence
	(AI) on the dynamic game balancing. They use reinforcement learning
	and focuses on the non-player characters. However, this is not suitable
	for all game genres such as a game requiring dynamic terrains. We
	propose to adjust the difficulty of a game level by mining and applying
	data about the sequential patterns of past player behavior. We compare
	the performance of the proposed approach on a maze game against approaches
	using other types of game AI. Positive feedback and these comparisons
	show that the proposed approach makes the game both more interesting
	and more balanced.},
  database = {SpringerLink},
  owner = {Katia},
  references = {Game Design: A Practical Approach

	Automatic computer game balancing: a reinforcement learning approach

	Dynamic game level design using Gaussian mixture model

	Beginning Level Design, Part 1: Level Design Theory

	AI for Dynamic Difficulty Adjustment in Games

	Difficulty Scaling of Game AI

	Dynamic Game Level Design Using Gaussian Mixture Model

	Adaptive Game AI with Dynamic Scripting

	The State of the Industry

	Information Weight of Evidence, the Singularity between Probability
	Measures and Signal Detection

	Balancing Games with Positive Feedback},
  timestamp = {2010.07.07}
}

@ARTICLE{I[16],
    inserir = {true},
  author = {H. Cho and J.Yang},
  title = {Architecture patterns for mobile games product lines},
  year = {2008},
  abstract = {Product line software engineering (PLSE) is a promising method for
	software reuse. For the key of success, a reusable and adaptable
	architecture design is necessary. In domain of mobile games product
	lines, architectures have some common structures because of circumstance
	properties of the domain and business constraints. In this paper,
	we classify them as architecture patterns. By doing this, we can
	expect increasing portability, reusability, adaptability, maintainability,
	and eventually productivity and improving quality.},
  database = {IEEE},
  owner = {Katia},
  references = {Feature-Oriented Product Line Engineering

	Extracting and Evolving Mobile Games Product Lines

	Design Patterns: Elements of Reusable Object-Oriented Software

	The UML Class Diagram: Part 1

	AspectJ Project

	Combining Feature-Oriented Analysis and Aspect-Oriented Programming
	for Product Line Asset Development

	Framed Aspects: Supporting Variability and Configurability for AOP

	Feature-Oriented Domain Analysis (FODA) Feasibility Study

	FORM: A Feature-Oriented Reuse Method with Domain-Specific Reference
	Architectures},
  timestamp = {2010.07.06}
}

@ARTICLE{I[17],
    inserir = {true},
  author = {Y. J. Choi},
  title = {Providing Novel and Useful Data for Game Development Using Usability
	Expert Evaluation and Testing},
  year = {2009},
  abstract = {A case study is done to study whether usability expert evaluation
	and testing are appropriate for game development. In this study,
	it identifies if the usability expert evaluation and testing provide
	novel and useful data for game development. For this experiment,
	a computer game is first evaluated and then tested. Then game developers
	are asked to rate the findings and give other feedback about the
	methods used and the results gained. The usability expert evaluation
	and testing have considerable face validity in game development because
	the results of a case study were both novel and useful for game development.},
  database = {IEEE},
  owner = {Katia},
  references = {User-testing in a Hostile Environment: Overcoming Resistance and Apathy
	in your Game Company

	Using Heuristics to Improve the Playability of Games

	Using the RITE Method to improve products: a definition and a case
	study

	A case for cases. In Commentary on "Damaged Merchandize?"

	Usability engineering},
  timestamp = {2010.07.06}
}

@ARTICLE{E[103],
    inserir = {false},
  author = {P. Ciancarini and G. P. Favini},
  title = {Plagiarism detection in game-playing software},
  year = {2009},
  abstract = {Plagiarism is a growing issue in the field of game-playing software.
	As new ideas and technologies are successfully implemented in free
	and commercial programs, they will be reused and revisited by later
	programs until they become standard, but on the other hand the same
	phenomenon can lead to accusations and claims of plagiarism, especially
	in competitive scenarios such as computer chess tournaments. Establishing
	whether a program is a "clone" or derivative of another can be a
	difficult and subjective task, left to the judgment of the individual
	expert and often resulting in a shade of gray rather than black and
	white verdicts. Tournaments judges and directors have to decide how
	similar is too similar on a case-by-case basis. This paper presents
	an objective framework under which similarities between game programs
	can be judged, using chess as a test case.},
  database = {ACM},
  owner = {Katia},
  references = {Actions do speak louder than words: deterring plagiarism with the
	use of plagiarism-detection software

	Plagiarism in natural and programming languages: an overview of current
	tools and technologies

	Genetic algorithms for mentor-assisted evaluation function optimization

	Detecting copied submissions in computer science workshops

	Metrics based plagarism monitoring

	Desktop tools for offline plagiarism detection in computer programs

	Finding plagiarisms among a set of programs with JPlag

	Winnowing: local algorithms for document fingerprinting

	Augmented ideas

	The interpretation of rules

	Rybka wins WCCC 2008

	Rybka vs. Strelka

	Rybka vs. Fruit

	Plagiarism in computer go

	Rules of WCCC 2008

	The Sherlock program

	BOSS Submission system},
  timestamp = {2010.07.06}
}

@ARTICLE{E[44],
    inserir = {false},
  author = {P. Ciancarini and G. P. Favini},
  title = {Detecting clones in game-playing software},
  year = {2009},
  abstract = {The number of competitions using software agents in the AI or entertainment
	computing fields has grown over the years from a few to many. For
	instance, tournaments exist to let programs to play chess, checker,
	go, bridge, poker, simulated soccer, etc. While most competitions
	are organized for research purposes, some have a commercial side,
	thus raising the stakes for the software authors. Hence, plagiarism
	is becoming a problematic issue in the field of game-playing software
	agents used in competitions and tournaments. As new ideas and technologies
	are successfully implemented in open source programs, they will be
	reused and revisited by later programs until they become standard
	practices, but on the other hand the same phenomenon can lead to
	accusations and claims of plagiarism, especially in competitive scenarios,
	such as computer chess tournaments. Establishing whether a program
	is a clone or derivative of another can be a difficult and subjective
	task, left to the judgment of the individual expert and often resulting
	in a shade of gray rather than black and white verdicts. Tournaments
	judges and directors have to decide how similar is too similar on
	a case-by-case basis. This paper presents an objective framework
	under which similarities between game programs can be judged, using
	chess as a test case.},
  database = {ScienceDirect},
  owner = {Katia},
  references = {Actions do speak louder than words: deterring plagiarism with the
	use of plagiarism-detection software

	Detecting copied submissions in computer science workshops

	Metrics based plagiarism monitoring

	Desktop tools for offline plagiarism detection in computer programs

	Genetic algorithms for mentor-assisted evaluation function optimization

	Plagiarism in natural and programming languages: an overview of current
	tools and technologies

	Finding plagiarisms among a set of programs with JPlag

	Winnowing: local algorithms for document fingerprinting

	Detecting and measuring similarity in code clones

	Augmented ideas

	The interpretation of rules

	Rybka wins WCCC 2008

	Rybka vs. Strelka

	Rybka vs. Fruit

	Plagiarism in computer Go

	Rules of WCCC 2008

	The Sherlock program

	The BOSS Submission system

	Clone Engine List},
  timestamp = {2010.07.07}
}

@ARTICLE{E[100],
    inserir = {false},
  author = {K. Claypool and M. Claypool},
  title = {On frame rate and player performance in first person shooter game},
  year = {2007},
  abstract = {The rate at which frames are rendered in a computer game directly
	impact player performance, influencing both the playability and enjoyability.
	However, despite the importance of frame rate and the wide-spread
	popularity of computer games, to the best of our knowledge, there
	is little quantitative understanding of the effects of frame rate
	on the player performance in computer games. This paper provides
	a unique classification of actions in First Person Shooter (FPS)
	games based on interaction requirements that provide a means to qualitatively
	assess the impact of frame rates on player performance. This qualitative
	assessment is supported by quantitative analysis from two large user
	studies that measure the effects of frame rate on the fundamental
	player actions in a First Person Shooter game. Nearly 100 users participated
	in the two user study experiments, providing performance and perception
	data over a range of frame rates commonly studied for video streaming
	and inclusive of frame rates found in many computer game platforms.
	In general, the analysis shows that actions that require precise,
	rapid response, such as shooting, are greatly impacted by degradations
	in frame rates, while actions with lower precision and response requirements,
	such as moving, are more tolerant of low frame rates. These insights
	into the effects of frame rates on player performance can guide players
	in their choice for game settings and new hardware purchases, and
	inform system designers in their development of new hardware.},
  database = {SpringerLink},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.07}
}

@ARTICLE{I[28],
    inserir = {true},
  author = {A. Conconi and T. Ganchev and O. Kocsis and G. Papadopoulos and F.
	Fernandez-Aranda and S. Jimenez-Murcia},
  title = {PlayMancer: A Serious Gaming 3D Environment},
  year = {2008},
  abstract = {Serious games are computer games used as educational technology or
	as a vehicle for presenting or promoting a point of view. Serious
	games are intended to provide an engaging, self-reinforcing context
	in which to motivate and educate the players towards non-game events
	or processes, including business operations, training, marketing
	and advertisement. The potential of games for entertainment and learning
	has been demonstrated thoroughly from research and clearly in the
	market place. Unfortunately, the investments committed to entertainment
	dwarfs that which is committed for more serious purposes. Furthermore,
	game development has become more complex, expensive, and burdened
	with a long development cycle. In this paper we introduce PlayMancer,
	a work in progress that aims to overcome such barriers by augmenting
	existing 3D gaming engines with new possibilities and thusly creating
	a novel development framework. In section I of this paper we briefly
	survey the serious games market. In section II we introduce the PlayMancer
	project and its objectives, whereas in section III we present the
	platform architecture. Section VI describes an application scenario
	where a PlayMancer-based game is being used as additional therapeutic
	tool to treat chronic mental disorders, such as eating disorders
	and behavioral addiction.},
  database = {IEEE},
  owner = {Katia},
  references = {RavenClaw: Dialog management using hierachical task decomposition
	and expectation agenda

	Context-dependent user modeling for smart homes

	Object-Oriented Graphics Rendering Engine

	OpenTracker-an open software architecture for reconfigurable tracking
	based on XML

	OpenTracker - An Open Architecture for Reconfigurable Tracking based
	on XML


	The State of the Brain Fitness Software Market 2008

	A multipurpose telehealth network for mental health professionals
	in rural and remote areas

	Using telemedicine to avoid transfer of rural emergency department
	patients

	Pilot studies of telemedicine for patients with obsessive-compulsive
	disorder

	Applicability of telemedicine for assessing patients with bschizophrenia:
	acceptance and reliability

	The use of alternative delivery systems and new technologies in the
	treatment of patients with eating disorders

	The use of VR in the treatment of panic disorders and agoraphobia

	Combat related post traumatic stress disorder: a multiple case report
	using virtual reality graded exposure therapy with physiological
	monitoring

	Virtual reality exposure therapy for the treatment of posttraumatic
	stress disorder following

	Cue-exposure therapy to decrease alcohol craving in virtual environment

	The development of a computer-assisted cognitive remediation program
	for patients with schizophrenia

	A systematic review of randomized control trials evaluating the effectiveness
	of interactive computerized asthma patient education programs

	Assessment and training in a 3-dimensional virtual environment with
	haptics: a report on 5 cases of motor rehabilitation in the chronic
	stage after stroke

	Improvement in cancer-related knowledge following use of a psychoeducational
	video game for adolescents and young adults with cancer

	Developing a computer game to prepare children for surgery

	Personal Investigator: A therapeutic 3D game for adolescent psychotherapy

	Exploring the use of computer games and virtual reality in exposure
	therapy for fear of driving following a motor vehicle accident

	Predicts 2006: eLearning Will Become Intrinsic to your Business Process

	2007

	Corporate Training Market 2007: Forecast & Analysis

	Simba Information, Report, 2007.},
  timestamp = {2010.07.06}
}

@ARTICLE{I[18],
    inserir = {true},
  author = {S. Cornett},
  title = {The usability of massively multiplayer online roleplaying games:
	designing for new users},
  year = {2004},
  abstract = {This study examines the usability challenges faced by new players
	of massively multiplayer online role-playing games (MMORPGs), one
	of the fastest-growing segments of the video game industry. Played
	in completely online worlds, these games allow players to communicate
	with one another, form groups and communities, and compete in a variety
	of fantasy environments.Nineteen subjects participated in an exploratory
	usability study of four games, three MMORPGs and a similar single-player
	game used for comparison. Results reveal that many people not usually
	considered as potential players of these games may be interested
	in them, but a wide variety of usability issues present serious problems
	for players inexperienced with the genre. Based on an analysis of
	the usability data and player feedback, specific recommendations
	are made to improve the experience of these games for new players.
	These results further demonstrate the applicability and importance
	of usability testing to video games.},
  database = {ACM},
  owner = {Katia},
  references = {Anarchy Online

	Computer Role-Playing games

	The History of MUDs

	Dark Age of Camelot

	Challenges and opportunities in the online game market

	EverQuest

	Heuristics and usability guidelines for the creation and evaluation
	of fun in video games

	Beyond focus groups: Getting more useful feedback from consumers

	Beyond psychological theory: Getting data that improve games

	Using the RITE method to improve products: A definition and a case
	study

	Neverwinter Nights

	Usability Engineering

	User-centered design in games

	The human-computer interaction handbook: fundamentals, evolving technologies
	and emerging applications

	Showdown in cyberspace: Star Wars vs. The Sims

	An analysis of MMOG subscription growth

	Gender and age distribution

	The Daedalus Project 1-2},
  timestamp = {2010.07.06}
}

@ARTICLE{E[126],
    inserir = {false},
  author = {B. Cowley and D. Charles and M. Black and R. Hickey},
  title = {Toward an understanding of flow in video games},
  year = {2008},
  abstract = {In the domain of computer games, research into the interaction between
	player and game has centred on 'enjoyment', often drawing in particular
	on optimal experience research and Csikszentmihalyi's 'Flow theory'.
	Flow is a well-established construct for examining experience in
	any setting and its application to game-play is intuitive. Nevertheless,
	it's not immediately obvious how to translate between the flow construct
	and an operative description of game-play. Previous research has
	attempted this translation through analogy. In this article we propose
	a practical, integrated approach for analysis of the mechanics and
	aesthetics of game-play, which helps develop deeper insights into
	the capacity for flow within games. The relationship between player
	and game, characterized by learning and enjoyment, is central to
	our analysis. We begin by framing that relationship within Cowley's
	user-system-experience (USE) model, and expand this into an information
	systems framework, which enables a practical mapping of flow onto
	game-play. We believe this approach enhances our understanding of
	a player's interaction with a game and provides useful insights for
	games' researchers seeking to devise mechanisms to adapt game-play
	to individual players.},
  database = {ACM},
  owner = {Katia},
  references = {The Study of Games

	Hearts, clubs, diamonds, spades: Players who suit Muds

	21st Century Game Design (Game Development Series

	Riddles of difficulty

	Roger Caillois' patterns of play

	Play specifications

	Perceptual pleasure and the brain

	Attentional response of humans and squirrel monkeys to visual patterns:
	Final studies and resume

	Man, Play and Games

	Selezione psicologica e qualità dell esperienza {Psychological selection
	and quality of experience}

	Player-centred game design: Player modelling and adaptive digital
	games

	Three models for the description of language

	Formal abstract design tools. Game Developer Magazine (Aug.)

	Creating a system of game play notation

	I have no words and I must design

	Elementary game design

	Low-level game design, atoms, measurement and hierarchies

	User-system-experience model for user centred design in computer games

	Using decision theory for player analysis in Pacman

	Computation at the onset of chaos

	Beyond Boredom and Anxiety

	Play and intrinsic rewards

	Flow: The Psychology of Optimal Experience

	The Development of Cognitive Anthropology

	The pleasure principle: immersion, engagement, flow

	Extending soft models to game design: flow, challenges and conflicts

	The Viable System Model: Interpretations and Applications of Stafford
	Beer's VSM

	A person-artefact-task (PAT) model of flow antecedents in computer-mediated
	environments

	Ludology meets narratology: Similitude and differences between (video)
	games and narrative

	Using frustration in the design of adaptive videogames

	The Play of Animals

	Formal models and game design

	...

	Aesthetics as an aid to understanding complex systems and decision
	judgement in operating complex systems

	The magical number seven, plus or minus two: Some limits on our capacity
	for processing information

	Sociological implications of the flow experience

	Hamlet on the Holodeck

	A new framework for entertainment computing: From passive to active
	experience

	Measuring the Customer Experience in Online Environments: A Structural
	Modeling Approach

	Applying formal methods to model organizations and structures in the
	real world

	The Oxford History of Board Games

	The Interactive Book

	Optimal experience and the family context

	About a framework for information and information processing of learning
	systems

	How to measure cognitive complexity in human-computer interaction

	The psycho-physiology of video gaming: Phasic emotional responses
	to game events

	Rules of Play: Game Design Fundamentals

	The Game Design Reader: A Rules of Play Anthology

	Bosozkou: Flow in motorcycle gangs

	A Mathematical Theory of Communication

	Loop quantum gravity

	A tutoring system for commercial games

	Dynamic scripting

	Defining virtual reality: dimensions determining telepresence

	The Grasshopper: Games, Life, and Utopia

	GameFlow: a model for evaluating player enjoyment in games

	Reflections on building two Go programs

	Theory of Games and Economic Behavior

	The Video GameTheory Reader

	Modeling children's entertainment in the playware playground

	A generic approach for obtaining higher entertainment in predator/prey
	computer games

	Interactive opponents generate interesting games

	The relation of strength of stimulus to rapidity of habit-formation},
  timestamp = {2010.07.06}
}

@ARTICLE{E[131],
    inserir = {false},
  author = {B. Cowley and D. Charles and M. Black and R. Hickey},
  title = {User-System-Experience Model for User Centered Design in Computer
	Games},
  year = {2006},
  abstract = {This paper details the central ideas to date, from a PhD entitled
	Player Profiling for Adaptive Artificial Intelligence in Computer
	and Video Games. Computer and videogames differ from other web and
	productivity software in that games are much more highly interactive
	and immersive experiences. Whereas usability and user modelling for
	other software may be based on productivity alone, games require
	an additional factor that takes account of the quality of the user
	experience in playing a game. In order to describe that experience
	we describe a model of User, System and Experience (USE) in which
	the primary construct for evaluation of a players experience will
	be the Experience Fluctuation Model (EFM), taken from Flow theory.
	We illustrate with a straightforward example how this system may
	be automated in real-time within a commercial game.},
  database = {SpringerLink},
  owner = {Katia},
  references = {Using frustration in the design of adaptive videogames

	21st Century Game Design

	Man, Play and Games

	Only A Game weblog

	Flow: The Psychology of Optimal Experience

	A Person-Artefact-Task (PAT) Model of Flow Antecedents in Computer-Mediated
	Environments

	Player-Centred Game Design: Player Modelling and Adaptive Digital
	Games

	Homo Ludens: a Study of the Play Element in Culture

	Defining virtual reality: dimensions determining telepresence

	GameFlow: A Model for Evaluating Player Enjoyment in Games

	About a framework for information and information processing of learning
	systems

	A Scheme for Creating Digital Entertainment with Substance},
  timestamp = {2010.07.07}
}

@ARTICLE{E[79],
    inserir = {false},
  author = {L. Cozic and S. B. Davis and H. Jones},
  title = {Interaction and Expressivity in Video Games: Harnessing the Rhetoric
	of Film},
  year = {2004},
  abstract = {The film-maker uses the camera and editing creatively, not simply
	to present the action of the film but also to set up a particular
	relation between the action and the viewer. In 3D video games with
	action controlled by the player, the pseudo camera is usually less
	creatively controlled and has less effect on the playerrsquos appreciation
	of and engagement with the game. This paper discusses methods of
	controlling games by easy and intuitive interfaces and use of an
	automated virtual camera to increase the appeal of games for users.},
  database = {SpringerLink},
  owner = {Katia},
  references = {Action and Image: dramatic structure in cinema

	A model for constraint-based camera planning

	Screen Space: Depiction and the Space of Interactive Media

	The Intruder: Expressive Cinematography in Videogames

	Smarter Tools for Storytelling: Are They Just Around the Corner?

	CamDroid: A system for implementing intelligent camera control

	Computer games: A camera engine for computer games

	The Rhetoric of Film

	The virtual cinematographer: a paradigm for automatic real-time camera
	control and directing

	Programming Autonomous Entities with Purposes and Trends for Virtual
	Storytelling

	Trigger Happy

	The Technique of Film Editing

	Grammar of the Edit

	Grammar of the Shot},
  timestamp = {2010.07.07}
}

@ARTICLE{I[19],
    inserir = {true},
  author = {M. Cutumisu and C. Onuczko and M. McNaughton and T. Roy and J. Schaeffer
	and A. Schumacher and J. Siegel and D. Szafron and K. Waugh and M.
	Carbonaro and H. Duff and S. Gillis},
  title = {ScriptEase: A generative/adaptive programming paradigm for game scripting},
  year = {2007},
  abstract = {The traditional approach to implementing interactions between a player
	character (PC) and objects in computer games is to write scripts
	in a procedural scripting language. These scripts are usually so
	complex that they must be written by a computer programmer rather
	than by the author of the game story. This interruption in the game
	story authoring process has two distinct disadvantages: it increases
	the cost of game production and it introduces a disconnect between
	the authors intentions and the interactions produced from the programmers
	written scripts. We introduce a mechanism to solve these problems.
	We show that game authors (non-programmers) can generate the necessary
	scripts for implementing meaningful interactions between the PC and
	game objects using a three-step process. In the first step, the author
	uses a generative pattern (concept) to create a high-level description
	of a commonly occurring game scenario. In the second step, the author
	uses a standard set of adaptation operations to customize the high-level
	description to the particular circumstances of the story that is
	being told. In the third step, the author presses a button that automatically
	generates scripting code from the adapted pattern. We describe the
	results of three studies in which a combined total of 56 game story
	authors used this three-step process to construct Neverwinter Nights
	game stories, using a tool called ScriptEase. We believe that this
	generative/adaptive process is the key to future game story scripting.
	More generally, this article advocates the development of adaptive
	programming as an alternative to current constructive programming
	techniques, as well as the application of adaptive programming in
	many domains.},
  database = {ScienceDirect},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.07}
}

@ARTICLE{E[51],
    inserir = {false},
  author = {M. Cutumisu and C. Onuczko and D. Szafron and J. Schaeffer and M.
	McNaughton and T. Roy and J. Siegel and M. Carbonaro},
  title = {Evaluating pattern catalogs: the computer games experience},
  year = {2006},
  abstract = {Patterns and pattern catalogs (pattern languages) have been proposed
	as a mechanism for re-use. Traditionally, patterns have been used
	to foster design re-use, and generative design patterns have been
	used to achieve both design and code re-use. In theory, a pattern
	catalog could be created and used to provide re-usable patterns within
	a project and across a group of related projects. This idea raises
	a natural question. How can we measure the effectiveness of a pattern
	catalog or compare the effectiveness of different pattern catalogs?
	In this paper, we define four metrics that can be used to measure
	the effectiveness of pattern catalogs. We illustrate these metrics
	by applying them to a case study that uses a pattern catalog of generative
	design patterns to generate scripting code for computer games. The
	metrics are general enough to assess any pattern catalog, independent
	of application domain or whether the patterns are generative or descriptive.},
  database = {IEEE},
  owner = {Katia},
  references = {Bethesda Softworks

	BioWare Corp

	A Pattern Language for Business Resource Management

	Automatic code generation from design patterns

	Tool Support for Object-oriented Patterns

	Interactive Story Writing in the Classroom: Using Computer Games

	Design Patterns: Elements of Reusable Object-Oriented Software

	ISO/IEC 9126-1

	Open Issues with Software Quality Models

	Lilac Soul's NWN Script Generator V2.0

	Lionhead Studios

	Generative Design Patterns

	ScriptEase: Generative Design Patterns for Computer Role-Playing Games

	Pattern-based AI Scripting using ScriptEase

	Code Generation for AI Scripting in Computer Role-Playing Games

	Neverwinter Nights

	Neverwinter Nights Scripting Forum

	Neverwinter Nights Vault

	Pattern Catalog For Computer Role Playing Games

	ScriptEase for Neverwinter Nights

	Writing Interactive Stories in the Classroom

	Assessing the Impact of Using Design-Patterns-Based Systems

	A Pattern Language of Transport Systems (Point and Route)},
  timestamp = {2010.07.06}
}

@ARTICLE{E[121],
    inserir = {false},
  author = {R. Darken and P. McDowell and E. Johnson},
  title = {The Delta3D Open Source Game Engine},
  year = {2006},
  abstract = {What is it that all game engines and visual simulation tools have
	in common? A lot, as it turns out. In fact, game engines have so
	much in common that you have to wonder if they should actually be
	a commodity and they should be. That advanced feature that makes
	one game engine different from all the rest is part of the reason
	why game engines and visual simulation tools cost so much. Furthermore,
	most game engines have a unique development pipeline associated with
	them. The way content is developed and integrated is specific to
	that engine, implying limited (if any) portability and reuse. This
	business model is perfectly appropriate for the entertainment industry
	where having the latest graphics features can make or break a title,
	but to the training community, the model simply does not work. We
	need to think differently....},
  database = {IEEE},
  owner = {Katia},
  references = {Real-Time Visualization of Detailed Terrain},
  timestamp = {2010.07.06}
}

@ARTICLE{I[20],
    inserir = {true},
  author = {H. Desurvire and M. Caplan and J. A. Toth},
  title = {Using heuristics to evaluate the playability of games},
  year = {2004},
  abstract = {Heuristics have become an accepted and widely used adjunct method
	of usability evaluation in Internet and software development. This
	report introduces Heuristic Evaluation for Playability (HEP), a comprehensive
	set of heuristics for playability, based on the literature on productivity
	and playtesting heuristics that were specifically tailored to evaluate
	video, computer, and board games. These heuristics were tested on
	an evolving game design to assess their face validity and evaluation
	effectiveness compared to more standard user testing methodologies.
	The results suggest that HEP identified qualitative similarities
	and differences with user testing and that HEP is best suited for
	evaluating general issues in the early development phases with a
	prototype or mock-up. Combined with user studies, HEP offers a new
	method for the HCI game community that can result in a more usable
	and playable game.},
  database = {ACM},
  owner = {Katia},
  references = {Desurvire, Faster, cheaper!! Are usability inspection methods as effective
	as empirical testing?

	What is gained and lost when using evaluation methods other than empirical
	testing

	The 400 Project

	User Testing for Games: Getting Better Data Earlier

	Heuristics and Usability Guidelines for the Creation and Evaluation
	of FUN in Video Games

	Heuristics for designing enjoyable user interfaces: lessons from computer
	games

	Heuristic evaluation},
  timestamp = {2010.07.06}
}

@ARTICLE{I[21],
    inserir = {true},
  author = {H. Desurvire and C. Wiberg},
  title = {Game Usability Heuristics (PLAY) for Evaluating and Designing Better
	Games: The Next Iteration},
  year = {2009},
  abstract = {Game developers have begun applying formal human-computer interaction
	(HCI) principles in design. Desurvire et al [2] adapted a set of
	Heuristics for productivity software to games. The resulting set,
	presented at CHI 2004, was Heuristics to Evaluate Playability (HEP).
	Generalization of these heuristics is required to make them applicable
	to a multiple of game genres and game deliveries. This follow-up
	study focused on the refined list, Heuristics of Playability (PLAY),
	that can be applied earlier in game development as well as aiding
	developers between formal usability/playability research during the
	development cycle. Heuristics were formed based on their efficacious
	scores on the popular game review website, metacritic.com. Fifty-four
	gamers rated High and Low ranked games on 116 potential heuristics.
	Implications for how these Heuristics will help developers improve
	game quality are discussed. PLAY has been found useful in design
	evaluation and elf-report survey format.},
  database = {SpringerLink},
  owner = {Katia},
  references = {What is Gained and Lost When Using Evaluation Methods Other Than Empirical
	Testing

	Using Heuristics to Evaluate the Playability of Games

	Evaluating Fun and Entertainment: Developing A Conceptual Framework
	Design of Evaluation Methods

	Master of the Game: Assessing Approachability in Future Game Design

	The 400 Project

	User Testing for Games: Getting Better Data Earlier

	Heuristics and Usability Guidelines for the Creation and Evaluation
	of FUN in Video Games

	Beyond Focus Groups: Getting More Useful Feedback from Consumers

	Heuristics for designing enjoyable user interfaces: Lessons from computer
	games

	Usability Inspection Methods

	Authoring Edutainment Stories for Online Players (AESOP): Introducing
	Game play into Interactive Dramas},
  timestamp = {2010.07.07}
}

@ARTICLE{E[31],
    inserir = {false},
  author = {A. Dolphin},
  title = {Compositional applications of a game engine},
  year = {2009},
  abstract = {In this paper it is suggested that game engine technologies provide
	the capacity for developing existing modes of artistic presentation
	and dissemination within the realms of sound art and music composition/performance.
	The paper outlines three creative works currently under development
	which are predominantly preoccupied with the use of game engines
	for musical and/or sonic purposes. Each project utilizes the game
	engine Unity 3D used in conjunction with external software for sound
	generation, synthesis or musical analysis. The artistic context and
	motivations of the work are briefly discussed, with the three projects,
	SpiralSet, MagNular, and CollideOscope Score subsequently being described
	and outlined.},
  database = {IEEE},
  owner = {Katia},
  references = {SpiralSet: A Sound Toy Utilizing Game Engine Technologies

	MagNular: Symbolic Control of an External Sound Engine Using an Animated
	Interface

	Unity 3D Game Engine incorporating the Ageia PhysX physics engine

	Max/MSP/Jitter

	Painterly Interfaces for AudioVisual Performance

	Magnus Spectrum

	Evaluating the Wiimote as a Musical Controller

	Q3OSC Or: How I Learned to Stop Worrying and Love the Game

	Chuck

	Open Sound Control (OSC)

	Fijuu2: a game-based, audio-visual performance engine

	Nintendo Elektroplankton

	Smule is Sonic Media

	The Strange Agency

	Nick Collins iPhone Apps

	Where the Action Is

	Virtual Intimacy : Phya as an Instrument

	Driving Sound Synthesis from a Physics Engine

	Sonic Arts Network

	CNMAT Spectral Synthesis Tutorials

	SPEAR - Sinusoidal Partial Editing Analysis and Resynthesis Software

	Description of the SDIF standard file format and related software
	libraries and application

	MnM: a Max/MSP mapping toolbox

	External objects for Max/MSP

	CNMAT Downloads},
  timestamp = {2010.07.06}
}

@ARTICLE{E[12],
    inserir = {false},
  author = {L. Driel and R. Bidarra},
  title = {A Semantic Navigation Model for Video Games},
  year = {2009},
  abstract = {Navigational performance of artificial intelligence (AI) characters
	in computer games is gaining an increasingly important role in the
	perception of their behavior. While recent games successfully solve
	some complex navigation problems, there is little known or documented
	on the underlying approaches, often resembling a primitive conglomerate
	of ad-hoc algorithms for specific situations. In this paper we develop
	a generic navigation model which we call semantics-based, because
	it enables AI to incorporate a wide variety of navigation information
	into the planning of a character's behavior, including raw geometry,
	strategic objects, and locomotion abilities. The role of semantics
	in this domain is highlighted and the presentation of the main components
	of this semantic navigation model is illustrated with a variety of
	examples. The semantic navigation model has been validated and implemented
	within a navigation system for Unreal Engine 3 that requires little
	level designer intervention, has a rich interface for AI programmers,
	and can be extended with other types of semantic information. It
	is concluded that using this navigation model delivers more natural
	paths, requires fewer world annotation, and supports dynamic re-planning.},
  database = {SpringerLink},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.07}
}

@ARTICLE{I[22],
    inserir = {true},
  author = {H. B. Duh and V. H. H. Chen and C. B. Tan},
  title = {Playing different games on different phones: an empirical study on
	mobile gaming},
  year = {2008},
  abstract = {With the growing popularity of mobile phone gaming, design issues
	with mobile phone games have become more important. Given the complexity
	of designing games for mobile phones, game developers must understand
	how mobile phone users gaming experiences are like when using different
	types of phones. This paper examines users gaming experiences in
	playing three types of games on three different types of phones.
	It is found that users have different preferences when playing different
	games on certain phones. Some games are more suitable to be played
	on mobile phone than others. Easy control and fewer levels of difficulties
	are the two main issues for consideration in designing mobile phone
	games. It is recommended that game designers design specific types
	of games for different mobile phone

	interfaces. Mobile phone manufacturers need to consider gamers requirements
	for the type of games they intend to include in the mobile phone.},
  database = {ACM},
  owner = {Katia},
  references = {User experiences with mobile phone camera game interfaces

	Challenges for pervasive mobile game design: examining players' emotional
	responses

	User case study and network evolution in the mobile phone sector (a
	study on current mobile phone applications)

	Ancient runes: using text input for interaction in mobile games

	Playability heuristics for mobile multi-player games

	Framework for evaluation of networked mobile games

	Design and implementation of a built-in camera based user interface
	for mobile games},
  timestamp = {2010.07.06}
}

@ARTICLE{E[99],
    inserir = {false},
  author = {T. V. Evreinova and G. Evreinov and R. Raisamo},
  title = {Non-visual game design and training in gameplay skill acquisition
	 A puzzle game case study},
  year = {2008},
  abstract = {This paper reports the results of a study on the design and evaluation
	of the game and techniques which allow puzzles to be played in the
	absence of visual feedback. We have demonstrated that a camera-mouse
	can be used successfully for blind navigation and target location
	acquisition within a game field. To gradually teach the players the
	sequential learning method was applied. Blind exploration of the
	gamespace was augmented with sticky labels and overview sound cues,
	verbal and non-verbal, which can significantly reduce the cognitive
	load and facilitate mental matching and integration. The full-sticky
	labels technique does not require fine motor skills and allows a
	user to gain control over the game with a minimum level of skills.
	With the vertical sticky labels technique training was focused on
	the development of accurate head movements only on a horizontal plane.
	With practice, the players can use the non-sticky labels technique.
	After 240 trials (3 4 h), the cumulative experience of the blindfolded
	players was increased 22.5 27 times compared to the initial 10 trials.},
  database = {ScienceDirect},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.07}
}

@ARTICLE{I[23],
    inserir = {true},
  author = {T. V. Evreinova and G. Evreinov and R. Raisamo},
  title = {Non-visual Gameplay: Making Board Games Easy and Fun},
  year = {2008},
  abstract = {In this paper we report the results of a study on an evaluation of
	a game and techniques which allow playing board games in the total
	absence of visual feedback. We have demonstrated that a camera mouse
	can be used for blind navigation within a game field. Snapping a
	position of the virtual pointer to the regions of interest as well
	as audio-haptic complementary mapping significantly reduce the cognitive
	load and facilitate mental matching and integration of overview sound
	sequences.},
  database = {SpringerLink},
  owner = {Katia},
  references = {Non-visual game design and training in gameplay skill acquisition
	- a puzzle game case study

	Camera based Head-mouse: Optimization of Template-Based Cross-Correlation
	Matching

	Using Haptic Cues to Aid Non-Visual Structure Recognition

	Helping visually impaired students in the study of mathematics

	The role of auditory cortex in the formation of auditory streams

	Understanding and Representing Space: Theory and Evidence from Studies
	with Blind and Sighted Children

	Differences between early-blind, late-blind, and blindfolded-sighted
	people in haptic spatial-configuration learning and resulting memory
	traces

	Using Non-speech Sounds to Improve Access to 2D Tabular Numerical
	Information for Visually Impaired Users

	Interactive Sonification of Spreadsheets

	The role of attention in the formation of auditory streams

	Making computers easier for older adults to use: Area cursors and
	sticky icons

	Deliberate suppression of vision as a training tool for multimodal
	skills},
  timestamp = {2010.07.07}
}

@ARTICLE{E[20],
    inserir = {false},
  author = {X. Fang and S. Chan and C. Nair},
  title = {An Online Survey System on Computer Game Enjoyment and Personality},
  year = {2009},
  abstract = {This paper discusses the development of an online survey instrument
	to measure the game enjoyment and player characteristics like age,
	gender and personality traits. A research framework of game play
	is proposed based on a review of prior research on computer game
	enjoyment, game characteristics, personality theories, effects of
	computer game play, and technology acceptance model. The proposed
	framework suggests that an appropriate fit between characteristics
	of the player and gaming technology will result in greater enjoyment
	while social influence may moderate effects of the fit. The survey
	will allow the researcher to establish the fit profiles between player
	characteristics and game play.},
  database = {SpringerLink},
  owner = {Katia},
  references = {The therapeutic use of videogames in childhood and adolescence

	Anxiety and presence during VR immersion: A comparative study of the
	reactions of phobic and non-phobic participants in therapeutic virtual
	environments derived from computer games

	An update on the effects of playing violent video games

	Effects of violent video games on aggressive behavior, aggressive
	cognition, aggressive affect, physiological arousal, and prosocial
	behavior: a meta-analytic review of the scientific literature

	Video games and aggressive thoughts, feelings, and behavior in the
	laboratory and in life

	The observational analysis of adolescent gambling in U.K. amusement
	arcades

	Exposure to violent video games increases automatic aggressiveness

	Perceived usefulness, perceived ease of use, and user acceptance of
	information technology

	Why people continue to play online games: in search of critical design
	factors to increase customer loyalty to online contents

	Explaining the enjoyment of playing video games: the role of competition.

	Playing Video Games: Motives, Responses, And Consequences

	It is always a lot of fun!: exploring dimensions of digital game experience
	using focus group methodology

	Emotional response patterns and sense of presence during video games:
	potential criterion variables for game design

	The Psychophysiology of Video Gaming: Phasic Emotional Responses to
	Game Events

	Fundamental compnents of the gameplay experience: Analysing immersion

	Dimensions and determinants of the enjoyment of playing digital games:
	a three-level model

	Affect and the Computer Game Player: The Effect of Gender, Personality,
	and Game Reinforcement Structure on Affective Responses to Computer
	Game-Play

	Measuring Emotional Valence during Interactive Experiences: Boys at
	Video Game Play

	Using psychophysiological techniques to measure user experience with
	entertainment technologies

	Playing videogames: The electronic friend

	Electronic leisure: Video game usage and the communication climate
	of video arcades

	Home video game playing in schoolchildren: A study of incidence and
	patterns of play

	Are computer games bad for children?

	The appeal of violent video games in children

	Relationship between developmental stages and video game uses and
	gratifications, game preference, and amount of time spent in play

	Gender differences in video game use and preferences

	Video games and the pleasure of control

	Explaining the enjoyment of playing video games: The role of competition

	Enjoyment: at the heart of media entertainment

	Conceptualizing media enjoyment as attitude: implications for mass
	media effects research},
  timestamp = {2010.07.07}
}

@ARTICLE{E[26],
    inserir = {false},
  author = {N. Fleming},
  title = {Build your own games},
  year = {2008},
  abstract = {Software is allowing children to develop their own animations and
	games by building blocks of code.},
  database = {ScienceDirect},
  owner = {Katia},
  references = {no references: Build your own games},
  timestamp = {2010.07.07}
}

@ARTICLE{I[24],
    inserir = {true},
  author = {E. Folmer},
  title = {Component Based Game Development A Solution to Escalating Costs
	and Expanding Deadlines?},
  year = {2007},
  abstract = {Expanding deadlines and escalating costs have notoriously plagued
	the game industry. Although the majority of the game development
	costs are spent on art and animation, significant cost reductions
	and more importantly reductions in development time can be achieved
	when developers use off the shelf components rather than develop
	them from scratch. However, many game developers struggle with component
	integration and managing the complexity of their architectures. This
	paper gives an overview of developing games with components, presents
	a reference architecture that outlines the relevant areas of reuse
	and signifies some of the problems with developing components unique
	to the domain of games.},
  database = {SpringerLink},
  owner = {Katia},
  references = {A Flexible and Expandable Architecture for Electronic Games

	Postmortems from Game Developer: Insights from the Developers of Unreal
	Tournament, Black and White

	DTI: From exuberant youth to sustainable maturity: competitive analysis
	of the UK games software sector

	Recommended practice for architectural description IEEE

	Describing, Instantiating and Evaluating a Reference Architecture:
	A Case Study

	Game Architecture and Design with Cdrom

	On the Development of a Free RTS Game Engine

	A reference architecture for component based development

	The Mythical Man-Month: Essays on Softw

	Game Development: Harder Than You Think},
  timestamp = {2010.07.07}
}

@ARTICLE{E[98],
    inserir = {false},
  author = {M. Frade and F. F. de Vega and C. Cotta},
  title = {Modelling Video Games Landscapes by Means of Genetic Terrain Programming
	- A New Approach for Improving Users Experience},
  year = {2008},
  abstract = {Terrain generation algorithms can provide a realistic scenario for
	video game experience and can help keep users interested in playing
	by providing new landscapes each time they play. Nowadays there are
	a wide range of techniques for terrain generation, but all of them
	are focused on providing realistic terrains. This paper proposes
	a new technique, Genetic Terrain Programming, based on evolutionary
	design with GP to allow game designers to evolve terrains according
	to their aesthetic feelings or desired features. The developed application
	produces Terrains Programs that will always generate different terrains,
	but consistently with the same features (e.g. valleys, lakes).},
  database = {SpringerLink},
  owner = {Katia},
  references = {ROAMing terrain: Real-time optimally adapting meshes

	Realtime procedural terrain generation - realtime synthesis of eroded
	fractal terrain for use in computer games

	Chaos and Fractals - New Frontiers of Science

	Terrain generation using genetic algorithms

	Artificial evolution for computer graphics

	SBART 2.4: an IEC tool for creating 2D images, movies, and collage

	NEvAr - the assessment of an evolutionary art too

	Genetic programming},
  timestamp = {2010.07.07}
}

@ARTICLE{I[25],
    inserir = {true},
  author = {D. Frost},
  title = {Ucigame, a java library for games},
  year = {2008},
  abstract = {Ucigame (pronounced OO-see-GAH-me) is a Java package that supports
	the programming of 2D sprite-based computer games. Designed for novice
	programmers, it enables students in an introductory class to write
	computer games that have animated sprites, music and sound effects,
	and event-driven keyboard and mouse handling. Ucigame has also been
	used successfully in a senior-level class for experienced programmers.},
  database = {ACM},
  owner = {Katia},
  references = {Alice: Free, Easy, Interactive 3D Graphics for the WWW

	Great principles of computing

	Golden T Studios -- Golden T Game Engine (GTGE)

	What is the role of language in learning programming?

	Home of the Lightweight Java Game Library

	Taming Java for the classroom

	Java: An Eventful Approach

	Java Game Toolkit

	Java Task Force Home Page

	JLayer MP3 library for the Java Platform

	A games first approach to teaching introductory programming

	Scratch for budding computer scientists

	Processing 1.0 website

	Scratch | Home | imagine, program, share

	YoYo Games | Gamemaker},
  timestamp = {2010.07.06}
}

@ARTICLE{I[26],
    inserir = {true},
  author = {M. Furini},
  title = {An architecture to easily produce adventure and movie games for the
	mobile scenario},
  year = {2008},
  abstract = {Simple and easy-to-play casual games are flooding the mobile gaming
	market and are best-sellers on the mobile game charts of several
	cellphone network operators. Most of the titles are mobile versions
	of videogames developed in the '80s and '90s, which were also very
	simple and easy-to-play. In this article we focus on adventure and
	movie games, a genre simple, easy-to-play, and very popular in the
	past. We propose a software architecture to easily produce full-motion
	adventure games for the mobile scenario, and thus potentially transform
	any modern cellphone into an adventure game console. The games are
	portable and protected against un-authorized usage. The feasibility
	of our approach is shown through a prototype player and an evaluation
	that shows the suitability of the proposed approach for the mobile
	scenario. The simplicity of our approach along with the ubiquity
	of modern cell-phones may bring new life to adventure games, which
	can also become an exciting genre for the current mobile gaming scenario.},
  database = {ACM},
  owner = {Katia},
  references = {DRM on open platforms? It may be possible after al

	Planning algorithms for interactive storytelling

	The darknet and the future of content distribution

	Interactive storytelling: The rise of a new game genre?

	Fast Montgomery modular multiplication and RSA cryptographic processor
	architectures

	Planning formalisms and authoring in interactive storytelling

	Enhanced spread spectrum watermarking of MPEG-2 AAC audio

	A logic-based tool for interactive generation and dramatization of
	stories

	Secure spread spectrum watermarking for multimedia

	On bringing adventure games into the mobile gaming scenario

	Casual gamers and female gamers to drive mobile games revenues over
	the $10 billion mark by 2009

	Performance study of ecc-based collusion-resistant multimedia fingerprinting

	An overview of the MPEG-7 Description Definition Language (DDL)

	Overview of the MPEG-4 Standard

	Transparent and Robust Audio Data Hiding in Subband Domain

	Digital rights management in a 3G mobile phone and beyond

	Information technology coding of audio-visual objects part 12: Iso
	base media file format

	A Mobile Century? Changes in Everyday Mobility in Britain in the Twentieth
	Century

	Security in embedded systems: Design challenges

	Fingerprinting and forensic analysis of multimedia

	An implementation of real-time 3D interactive drama

	Preloading game demos is a key merchandizing lever to drive purchases},
  timestamp = {2010.07.06}
}

@ARTICLE{E[29],
    inserir = {false},
  author = {J. Gackenbach and M. Rosie},
  title = {Cognitive evaluation of video games: players' perceptions},
  year = {2009},
  abstract = {Video games were evaluated by players very familiar with them, along
	five cognitive dimensions drawn from the PASS model. These 233 gamers
	evaluated up to three games each which were then placed into genres
	defined by GameSpot.com and compared in terms of their perceived
	cognitive components. Game genre, for which there was sufficient
	number of evaluations, differed along each cognitive dimension.},
  database = {ACM},
  owner = {Katia},
  references = {Cognitive Skill as a Predictor of Flow and Presence In Naturally Mapped
	Video Games

	A Better Look at Intelligence

	Cognitive processing differences between frequent and infrequent Internet
	users

	Video Game Play and Consciousness Development: A Transpersonal Perspective

	Cognitive Skill Predicts Video Game Ability},
  timestamp = {2010.07.06}
}

@ARTICLE{E[68],
    inserir = {false},
  author = {author not founded: Game development},
  title = {Game development},
  year = {2006},
  abstract = {abstract not founded: Game development},
  database = {ACM},
  owner = {Katia},
  references = {references not founded: Game development},
  timestamp = {2010.07.06}
}

@ARTICLE{E[32],
    inserir = {false},
  author = {P. V. Gestwicki},
  title = {Computer games as motivation for design patterns},
  year = {2007},
  abstract = {We present a computer game case study that can be used to motivate
	the need for design patterns. Design patterns are often misunderstood,
	but good examples can motivate students to work at understanding
	patterns. Computer games are used in many books and online resources
	to teach programming concepts, but these examples are usually simplified
	or non-object-oriented. We present a simple game that exhibits functionality
	found in commercial games (animation, collision detection, etc.)
	and show how it can be used as a case study for design patterns.
	Specifically, we illustrate how the state, facade, observer, strategy,
	and visitor patterns can replace procedural approaches for implenting
	the logic and animation of game written in Java.},
  database = {ACM},
  owner = {Katia},
  references = {Probl-based learning for foundations computer science courses

	Patterns in Game Design

	Teaching software engineering through game design

	Killer Game Programming in Java

	A tale of two paradigms

	Teaching inter-object design patterns to freshmen

	Design patterns: elements of reusable object-oriented software

	Methodology and architecture of JIVE

	The game of set: an ideal example for introducing polymorphism and
	design patterns

	Holub on Patterns: Learning Design Patterns by Looking at Code

	Design patterns for games

	Teaching design patterns in CS1: a closed laboratory sequence based
	on the game of life},
  timestamp = {2010.07.06}
}

@ARTICLE{E[13],
    inserir = {false},
  author = {P. Di Gianantonio and F. Honsell and M. Lenisa},
  title = {A type assignment system for game semantics},
  year = {2008},
  abstract = {We present a type assignment system that provides a finitary interpretation
	of lambda terms in a game semantics model. Traditionally, type assignment
	systems describe the semantic interpretation of terms in domain-theoretic
	models. Quite surprisingly, the type assignment system presented
	in this paper is very similar to the traditional ones, the main difference
	being the omission of the subtyping rules.},
  database = {ScienceDirect},
  owner = {Katia},
  references = {Domain theory in logical form

	Retracing some paths in process algebra

	Geometry of interaction and linear combinatory algebras

	Linear realizability and full completeness for typed lambda calculi

	A complete characterization of complete intersection-type preorders

	A filter lambda model and the completeness of type-assignment

	An extension of the basic functionality theory for the -calculus

	Extended type structure and filter lambda models

	Functional characters of solvable terms

	The fine structure of game models

	Game semantics for the untyped Bn-calculus

	Towards a geometry of interaction

	Wave-style geometry of interaction models in rel are graph-like lambda
	models

	Principal type scheme for an extended type theory},
  timestamp = {2010.07.07}
}

@ARTICLE{E[46],
    inserir = {false},
  author = {T. Gillespie},
  title = {Digital storytelling and computer game design},
  year = {1997},
  abstract = {This workshop uses a combination of short lecture and hands on practice
	to introduce digital storytelling and computer game design and the
	multitude of skills needed to successfully design digital stories
	and computer games. Working examples are taken from two current projects
	at Indiana University: Lost Highways and Rock-Paper-Scissors in Lizard
	Land.},
  database = {ACM},
  owner = {Katia},
  references = {Homo Ludens

	The Elements of Friendly Software Design},
  timestamp = {2010.07.06}
}

@ARTICLE{I[29],
    inserir = {true},
  author = {T. C. N. Graham and P. Curzon and G. Doherty and P. Palanque and
	R. Potter and C. Roast and S. P. Smith},
  title = {Usability and Computer Games: Working Group Report},
  year = {2007},
  abstract = {Computer games are intended to be fun to play. While they are also
	interactive systems with sophisticated user interfaces, standard
	concepts of usability do not necessarily apply to games. In this
	workshop, we explored the relationship between usability and fun.
	Our central conclusion was that applying standard usability design
	guidelines, such as those proposed by Nielson [4], may improve or
	reduce the fun of a game, but that for many standard usability guidelines,
	there exist equivalent guidelines addressing fun in games.},
  database = {SpringerLink},
  owner = {Katia},
  references = {Eve Online

	Red Alert 2

	NetDevil

	Usability Engineering},
  timestamp = {2010.07.07}
}

@ARTICLE{I[27],
    inserir = {true},
  author = {T. C. N. Graham and W. Roberts},
  title = {Toward Quality-Driven Development of 3D Computer Games},
  year = {2007},
  abstract = {The development of video games is a complex software engineering activity
	bringing together large multidisciplinary teams under stringent constraints.
	While much has been written about how to develop video games, there
	has been as yet little attempt to view video game development from
	a quality perspective, attempting to enumerate the quality attributes
	that must be satisfied by game implementations, and to relate implementation
	techniques to those quality attributes. In this paper, we discuss
	desired quality attributes of 3D computer games, and we use the development
	of our own Life is a Village game to illustrate architectural tactics
	that help achieve these desired qualities.},
  database = {SpringerLink},
  owner = {Katia},
  references = {Software Architecture in Practice

	Usability-Supporting Architectural Patterns

	AI Game Development

	Entertainment Software Association


	Game Wars

	Bringing Usability Concerns to the Design of Software Architecture

	Building Lua into Games

	A Calculus for the Refinement and Evolution of Multi-User Mobile Applications

	Creating Scripting Languages for Nonprogrammers

	Architecting an RTS AI

	Physical Fitness in Virtual Worlds

	Massively Multiplayer Games using a Distributed Services Approach

	The Perils of AI Game Scripting

	Building a Sports AI Architecture},
  timestamp = {2010.07.07}
}

@ARTICLE{E[115],
    inserir = {false},
  author = {IEEE Computer Graphics and Applications Staff},
  title = {Serious Work: Programming for Games},
  journal = {IEEE Comput. Graph. Appl.},
  year = {1994},
  abstract = {no abstract: Serious Work: Programming for Games},
  database = {IEEE},
  owner = {Katia},
  references = {no references: Serious Work: Programming for Games},
  timestamp = {2010.07.06}
}

@ARTICLE{E[73],
    inserir = {false},
  author = {C. Grundy and A. Blake},
  title = {Go with the flow or seize control? interaction principles that make
	games enjoyable},
  year = {2006},
  abstract = {A series of design principles relevant to creating graphics for games
	interfaces were interpreted from the work of leading interaction
	experts. Students studying for an MSc in Computer Games Graphics
	were asked to explore how the principles might improve enjoyment
	of a game. The graduates of the course consider visual themes and
	their layout; they were asked to develop graphical designs to test
	ideas and evaluate them within the group. The purpose of the activity
	was to consider how

	emotional responses might be improved, during game play, beyond levels
	of satisfaction usually asociated with usability.},
  database = {IEEE},
  owner = {Katia},
  references = {Quality of Experience: Defining the criteria for Effective Interaction
	design

	About Face: The Essentials of Interaction Design

	Flow: The psychology of optimal experience

	Moor

	Towards a Framework of Interaction and Experience As It Relates to
	Product Design

	Cognition, Emotion and other inescapable aspects of human experience

	The Elements of User Experience

	Fitting the task to the human

	Pleasure in Product Use: beyond usabilit

	HCI: psychology, task analysis and software engineering

	Mental Models: Towards a Cognitive Science of Language, Inference,
	and Consciousness

	Metaphors we live by

	The four loves

	Designing Web Usability: The practice of simplicity

	Emotional Design and why we love (or hate) Everyday Things

	Beauty in Usability: Forget about Ease of Use!

	Funology from usability to enjoyment

	Interaction Design: beyond Human Computer Interaction

	Postdesign and Participatory Culture, Useful and Critical: the position
	of Research in Design

	Designing the User Interface: I

	Affective Gaming

	The Pursuit of Pleasure

	First Principles (of interface design)},
  timestamp = {2010.07.06}
}

@ARTICLE{E[96],
    inserir = {false},
  author = {J. Hagelback and S. J. Johansson},
  title = {Measuring player experience on runtime dynamic difficulty scaling
	in an RTS game},
  year = {2009},
  abstract = {Do players find it more enjoyable to win, than to play even matches?
	We have made a study of what a number of players expressed after
	playing against computer opponents of different kinds in an RTS game.
	There were two static computer opponents, one that was easily beaten,
	and one that was hard to beat, and three dynamic ones that adapted
	their strength to that of the player. One of these three latter ones
	intentionally drops its performance in the end of the game to make
	it easy for the player to win. Our results indicate that the players
	found it more enjoyable to play an even game against an opponent
	that adapts to the performance of the player, than playing against
	an opponent with static difficulty. The results also show that when
	the computer player that dropped its performance to let the player
	win was the least enjoyable opponent of them all.},
  database = {IEEE},
  owner = {Katia},
  references = {This Great Symbol: Pierre de Coubertin and the Origins of the Modern
	Olympic Games

	DreamHack

	Toward a theory of intrinsically motivating instruction

	What makes computer games fun?

	Gameflow: A model for evaluating player enjoyment in games

	Rapid Adaptation of Video Game AI

	Real-time challenge balance in an RTS game using rtNEAT


	Using multi-agent potential fields in real-time strategy games

	The rise of potential fields in real time strategy bots

	Towards Optimizing Entertainment in Computer Games

	Programming Game AI by Example

	Warcraft III Guide

	Warcraft III Game reviews},
  timestamp = {2010.07.06}
}

@ARTICLE{I[30],
    inserir = {true},
  author = {J. Han and C. Hyun and Y. Eom},
  title = {Multi-platform Online Game Design and Architecture},
  year = {2005},
  abstract = {Contemporary Multi-player online games (MOGs) support only a single
	game platform. Our research goal is to provide an MOG service to
	users from different platforms. This paper presents the architecture
	of the world-wide first multi-platform online game, which consists
	of 3D game engines and a multi-platform game server. The experimental
	results through the prototype implementation show the feasibility
	of simultaneously supporting multiple game platforms.},
  database = {SpringerLink},
  owner = {Katia},
  references = {Designing a PC Game Engine

	3D Game Engine Architecture

	Renderware

	Falcon3D

	ATI IMAGEON 2300

	NVIDIA GoForce 3D 4500

	OpenGL ES

	The Java 3D API Specification},
  timestamp = {2010.07.07}
}

@ARTICLE{E[87],
    inserir = {false},
  author = {T. Henderson},
  title = {Latency and User Behaviour on a Multiplayer Game Server},
  year = {2001},
  abstract = {Multiplayer online games represent one of the most popular forms of
	networked group communication on the Internet today. We have been
	running a server for a first-person shooter game, Half-Life. In this
	paper we analyse some of the delay characteristics of different players
	on the server and present some interim results. We find that whilst
	network delay has some effect on players behaviour, this is outweighed
	by application-level or exogenous effects. Players seem to be remarkably
	tolerant of network conditions, and absolute delay bounds appear
	to be less important than the relative delay between players.},
  database = {SpringerLink},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.07}
}

@ARTICLE{E[59],
    inserir = {false},
  author = {S. Ho and C. Huang},
  title = {Exploring success factors of video game communities in hierarchical
	linear modeling: The perspectives of members and leaders},
  year = {2009},
  abstract = {Video games are enjoying fast-growing popularity, becoming a major
	component of young people s social lives and leisure activities.
	Many players share information and conduct social interactions in
	virtual communities (VC). The current study sought to examine the
	relationships between members and leaders in such video game communities
	using a number of variables to describe the member (i.e., knowledge
	sharing, usefulness, enjoyability, off-site interaction, satisfaction,
	loyalty, and intention to use) and the leader (i.e., leader involvement).
	Based on a sample of 2227 members and 41 leaders in 30 video game
	communities, the research demonstrated the use of a two-level hierarchical
	linear modeling (HLM) to examine the relationships of VC leaders
	and members, appropriately adjusted for a nested structure. The results
	indicated that leaders who engage in higher levels of involvement
	in VC are more likely to have members who agree with and respond
	to the community. Furthermore, member- and leader-level factors were
	significantly associated with member satisfaction: knowledge sharing,
	usefulness, and enjoyability explained within-VC variance while leader
	involvement explained between-VC variance. Finally, member satisfaction
	demonstrated positive effects on both member loyalty and intention
	to use. The study further discussed the implications of these findings,
	offering direction for future research.},
  database = {ScienceDirect},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.07}
}

@ARTICLE{E[34],
    inserir = {false},
  author = {C. Hsu and H. Lu},
  title = {Consumer behavior in online game communities: A motivational factor
	perspective},
  year = {2007},
  abstract = {The concept of online communities has been used to improve customers
	loyalty in recent years. While studies on transaction community such
	as online auction have received more attention in the literature,
	entertainment community such as online game has seldom been addressed.
	This study applies the theory of reasoned action (TRA) and modifies
	the technology acceptance model (TAM) to propose a research model.
	An empirical study involving 356 subjects was conducted to test this
	model. The results indicate that customer loyalty is influenced by
	perceived enjoyment, social norms and preference. Perceived cohesion
	has an indirect impact on loyalty. In addition, the finding s practical
	implication suggests that community managers must overcome the problems
	users encounter, including suffering from an unstable system, malicious
	players and grief players.},
  database = {ScienceDirect},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.07}
}

@ARTICLE{E[42],
    inserir = {false},
  author = {S. H. Hsu and C. Kao and M. Wu},
  title = {Design facial appearance for roles in video games},
  year = {2009},
  abstract = {Roles in video games often serve as avatars of players. Different
	game players may have their particular preferences on a role s facial
	appearance. It would be desirable to allow players to customize the
	design of roles. This paper presents two methods for recommending
	a roles facial appearance for a particular game player and illustrates
	the two methods by using heroic roles as an example. The two recommendation
	methods are designated as the text-input and the picture-input approaches.
	The text-input approach requests the game player to carry out pairwise
	comparisons for determining the relative weights of 16 personality
	traits of heroes. The recommendation mechanism for the text-input
	approach is based on the fuzzy AHP (analytic hierarchy process).
	Whereas the picture-input approach requests the game player to view
	a sample set of pictures and rate his/her preferences on each picture.
	The recommendation mechanism for the picture-input approach is based
	on the BP (back-propagation) neural network. Experiments indicated
	that the text-input approach is more effective in terms of recommending
	an appropriate facial appearance, yet at the expense of needing more
	user time.},
  database = {ScienceDirect},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.07}
}

@ARTICLE{E[11],
    inserir = {false},
  author = {W. Hu},
  title = {A Reusable Eduventure Game Framework},
  year = {2008},
  abstract = {Adventure games for educational purpose, which is termed of eduventure,
	show many advantages. In this paper, a group of core concepts which
	is essential to eduventure game design is found. In order to prevent
	eduventure game designer from continually rediscovering of these
	core elements, we clarify the functionalities of these core concepts
	and form them into a collaborated conceptual framework. We also show
	how the Conceptual Eduventure Framework can be reused in eduventure
	game design and how it can serve as a tool which can adjust the balance
	between instruction and entertainment. Furthermore, we implement
	the Conceptual Eduventure Framework in TorqueScript so that it becomes
	a library of building blocks which can be reused in eduventure game
	development based on Torque Game Engine. As evaluation and application,
	an eduventure game project is built based on the TorqueScript Eduventure
	Framework which can be applied in freshman training.},
  database = {SpringerLink},
  owner = {Katia},
  references = {C.: The use of computer and video games for learning

	A fantasy adventure game as a learning environment: why learning to
	program is so difficult and what can be done about it

	Adventure games for science education: Generative methods in exploratory
	environments

	The Eduventure - A New Approach of Digital Game Based Learning Combining
	Virtual and Mobile Augmented Reality Games Episodes

	Using a Game Engine Technique to Produce 3D Entertainment Contents

	GarageGames Inc.

	Adapting a Commercial Role-Playing Game for Educational Computer Game
	Production

	Am I Mod or Not? - an Analysis of First Person Shooter Modification
	Culture},
  timestamp = {2010.07.07}
}

@ARTICLE{E[123],
    inserir = {false},
  author = {C. A. J. Hurkens and R. A. Pendavingh and G. J. Woeginger},
  title = {The Magnus-Derek game},
  year = {2008},
  abstract = {We provide a new adaptive strategy for the maximizer in the Magnus-Derek
	game on the n-cycle. We show that this new strategy succeeds within
	O(nlogn) rounds, and thus improves on a predecessor result that uses
	a quadratic number of rounds.},
  database = {ScienceDirect},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.07}
}

@ARTICLE{E[109],
    inserir = {false},
  author = {B. Ip and G. Jacobs},
  title = {Quantifying game design},
  year = {2004},
  abstract = {There is at present a conspicuous need for formal evaluative methods
	which designers of video and computer games can use in order better
	to understand the elusive factors which lead to good gameplay mechanics.
	This paper presents the results of an empirical study which has been
	used to establish a practical quantitative procedure for analysing
	and comparing certain gameplay characteristics of rally (driving)
	games, and thus of determining objectively characteristics which
	are typical of such games at various levels of quality and type.
	The information offered can be used by games developers as pointers
	to building into their products a superior gameplay which potentially
	makes for better reputations and increased sales.},
  database = {ScienceDirect},
  owner = {Katia},
  references = {no references: Quantifying game design},
  timestamp = {2010.07.07}
}

@ARTICLE{E[24],
    inserir = {false},
  author = {I. A. Iurgel},
  title = {Beneficial Dependencies: Design Principles for Narrative Games},
  year = {2005},
  abstract = {This paper presents the leitmotifs of current research on psychologically
	colored interactive narration. Virtual Characters, their stories
	and adventures are in focus, and not the story of the user. The concept
	of a Capricious Non-Player Character (C-NPC) is introduced as a new
	kind of agent appropriate for such stories. A C-NPC expects consideration
	and support, even towards its technological limitations. A narrative
	educational game is presented that functions as a testbed for the
	creation of C-NPCs. An overview of the technology employed for dialogue
	management is provided.},
  database = {SpringerLink},
  owner = {Katia},
  references = {Negotiated collusion: Modeling social language and its relationship
	effects in intelligent agents

	Designing and Evaluating Animated Agents as Social Actors

	Evolving Social Relationships with Animate Characters

	Caring for Agents and Agents that Care: Building Empathic Relations
	with Synthetic Agents

	Designing for Friendship: Becoming Friends with Your ECA

	Affective Pedagogical Agents and User Persuasion

	Digital Game-Based Learning

	On Interactive Storytelling

	Narrative Dialogues for Educational Installations

	Natural Language Understanding in FaCade: Surface-text Processing

	From Another Point of View: Art-E-Fact

	Virtual Actors in Interactivated Storytelling

	Domain-oriented conversation with H.C.},
  timestamp = {2010.07.07}
}

@ARTICLE{I[31],
    inserir = {true},
  author = {G. Jacobs and B. Ip},
  title = {Establishing user requirements: incorporating gamer preferences into
	interactive games design},
  year = {2005},
  abstract = {In a previous paper we investigated how various aspects of rally/racing
	game design can be quantified for the development of future titles.
	This paper explores how gamer preferences can be prioritised, analysed,
	and incorporated into the design of rally games by structuring information
	via a technique known as the Analytic Hierarchy Process, so as to
	allow the data to be put to practical effect by games designers.
	Combined with other techniques developed by the authors of this paper,
	the results can be used for a holistic management of the design and
	development process for many categories of interactive video games.},
  database = {ScienceDirect},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.07}
}

@ARTICLE{E[5],
    inserir = {false},
  author = {J. Jardine and D. Zappala},
  title = {A hybrid architecture for massively multiplayer online games},
  year = {2008},
  abstract = {Many massively multiplayer online games use client-server architectures
	that have enormous server-side bandwidth requirements. Peer-to-peer
	game architectures provide better scaling, but open the game to additional
	cheating, since players are responsible for distributing events and
	storing state. We have developed a hybrid game architecture that
	maintains centralized control of state, while significantly reducing
	server bandwidth. The architecture uses a combination of client-server
	and peer-to-peer event distribution, so that only critical events
	are processed by the server. In addition, the architecture uses measurements
	and monitoring to ensure that players are capable of handling event
	distribution and are indeed providing this service. By lowering the
	bandwidth needed to host a game, while also providing a simple way
	to prevent cheating, our hybrid architecture allows game companies
	to support more concurrent players while still providing a controlled
	game experience. We deploy a game using the hybrid architecture on
	PlanetLab and use a measurement study to demonstrate its advantages
	over a client-server architecture.},
  database = {ACM},
  owner = {Katia},
  references = {Mercury: supporting scalable multi-attribute range queries

	Colyseus: A Distributed Architecture for Online Multiplayer Games

	Hydra: a massively-multiplayer peer-to-peer architecture for the game
	developer

	The impact and implications of the growth in residential user-to-user
	traffic

	The impact and implications of the growth in residential user-to-user
	traffic

	Packet-dispersion techniques and a capacity-estimation methodology

	Using n-trees for scalable event ordering in peer-to-peer games

	Low latency and cheat-proof event ordering for peer-to-peer games

	Zoned federation of game servers: a peer-to-peer approach to scalable
	multi-player online games

	Traffic characteristics of a massively multi-player online role playing
	game

	Peer-to-Peer Support for Massively Multiplayer Games

	Load-balancing for peer-to-peer networked virtual environment

	Smartsockets: solving the connectivity problems in grid computing

	Bandwidth requirement and state consistency in three multiplayer game
	architectures

	Pastry: Scalable, Decentralized Object Location, and Routing for Large-Scale
	Peer-to-Peer Systems

	A distributed event delivery method with load balancing for MMORPG},
  timestamp = {2010.07.06}
}

@ARTICLE{I[32],
    inserir = {true},
  author = {K. Jegers},
  title = {Investigating the Applicability of Usability and Playability Heuristics
	for Evaluation of Pervasive Games},
  year = {2008},
  abstract = {This paper investigates to what extent traditional methods for usability
	evaluation can reveal problems and issues in pervasive games. The
	questions of importance for the study could be summarized as: what
	kind of problems in pervasive games can usability evaluation methods
	reveal? Which of these problems are general/traditional usability
	problems, which problems can be related to general problems in computer
	games and most importantly: which problems are unique for the genre
	of pervasive games? In order to approach these questions, a pervasive
	game prototype called "SupaFly", have been evaluated with 58 participants
	and by use of three standard usability evaluation methods; qualitative
	questionnaires, system logs and focus group interviews. The problems
	identified in the evaluation are analyzed and compared to categories
	and heuristics of previously known usability problems and problems
	identified in computer games (playability problems) in order to outline
	the problems unique for pervasive games. Of a total number of 16
	issues, six issues were at least partly not covered by traditional
	usability and playability. Of these six issues, three problematic
	issues were completely unique for pervasive games: the connection
	between the platforms of the game (unclear relation between game
	platforms), the role and meaning of player positioning (unclear role
	of player positioning (location)) and the level of social interaction
	(levels of interaction not aligned with social needs).},
  database = {IEEE},
  owner = {Katia},
  references = {Bridging the Physical and Digital in Pervasive Gaming

	Designing Ubiquitous Computer Games- A Report from a Workshop Exploring
	Ubiquitous Computing Entertainment

	Touch-Space: Mixed Reality Game Space Based on Ubiquitous

	The Usability of Massively Multiplayer Online Role Playing Games:
	Designing for New Users

	Using Heuristics to Evaluate the Playability of Games

	Improving Games with User Testing: Getting Better Data Earlier

	Uncle Roy All Around You: Mixing Games and Theatre on the City Streets

	Prosopopeia: Experiences from a Pervasive Larp

	A Report on the Crossmedia Game Epidemic Menace

	Augmenting the Virtual Domain with Physical and Social Elements: Towards
	a Paradigm Shift in Computer Entertainment Technology

	Contextual Virtual Interaction as Part of Ubiquitous Game Design and
	Development},
  timestamp = {2010.07.06}
}

@ARTICLE{E[102],
    inserir = {false},
  author = {K. Jegers},
  title = {Pervasive Game Flow: Understanding player's enjoyment in pervasive
	games},
  year = {2007},
  abstract = {Player enjoyment is perhaps the most important issue in successful
	game design, but so far it has not been addressed in the area of
	pervasive games. Departing from the general gameflow model, this
	article presents an initial outline for a new model of pervasive
	player enjoyment, that is, the pervasive gameflow model, which is
	described and discussed in terms of additions and elaborations to
	the general gameflow model. It is intended to serve as a departure
	point for further empirical studies on player enjoyment in pervasive
	games.},
  database = {ACM},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.06}
}

@ARTICLE{E[94],
    inserir = {false},
  author = {C. Jennett and A. L. Cox and P. Cairns and S. Dhoparee and A. Epps
	and T. Tijs and A. Walton},
  title = {Measuring and defining the experience of immersion in games},
  year = {2008},
  abstract = {Despite the word's common usage by gamers and reviewers alike, it
	is still not clear what immersion means. This paper explores immersion
	further by investigating whether immersion can be defined quantitatively,
	describing three experiments in total. The first experiment investigated
	participants abilities to switch from an immersive to a non-immersive
	task. The second experiment investigated whether there were changes
	in participants eye movements during an immersive task. The third
	experiment investigated the effect of an externally imposed pace
	of interaction on immersion and affective measures (state anxiety,
	positive affect, negative affect). Overall the findings suggest that
	immersion can be measured subjectively (through questionnaires) as
	well as objectively (task completion time, eye movements). Furthermore,
	immersion is not only viewed as a positive experience: negative emotions
	and uneasiness (i.e. anxiety) also run high.},
  database = {ScienceDirect},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.07}
}

@ARTICLE{I[33],
    inserir = {true},
  author = {Z. Jieyi and T. Min and T. Ruofeng and D. Jinxiang},
  title = {The Platform of Quick Development of Mobile 3D Game},
  year = {2008},
  abstract = {The platform of quick development of mobile 3D game can be used to
	reduce the mobile 3d phone games' develop-cycle. With this platform,
	the developers can break out of the complexity of programming. Thus
	more efforts will be putted into enriching contents of the game itself.
	The core of the platform of quick development of mobile 3D game is
	the ability of configuration, which can be divided into the following
	parts. The first part is the implementation of a 3D mobile game template
	in the environment of Symbian OS and Nokia Series 60 platform. The
	example game is a first-person shooting (FPS) game using OpenGL ES.
	The second part is to analyze the whole structure of the game systems,
	and to extract the parameters of the game which can be customized.
	According to the extracted part, we make the customized XML documents.
	Finally we use custom tools to customize the game. The tools modify
	the XML data following the programmer's intention and use the XML
	data to rewrite the gameÂ¿s source codes and to build a new version
	of the game.},
  database = {IEEE},
  owner = {Katia},
  references = {Customized Software Development Based on Controls and XML

	OpenGL Game Programming

	Nokia: Series 60 Platform Introductory White Paper v.1.0

	Method of Implementing Configurable Service Based on XML

	The Office Automation System of Xml-based configuration Technology

	The XML Files: MSXML 3.0 supports XPath 1.0, XSLT 1.0, XDR, and SAX2},
  timestamp = {2010.07.06}
}

@ARTICLE{E[18],
    inserir = {false},
  author = {M. Joselli and M. Zamith and E. Clua and A. Montenegro and R. Leal-Toledo
	and A. Conci and P. Pagliosa and L. Valente and B. Feijó},
  title = {An adaptative game loop architecture with automatic distribution
	of tasks between CPU and GPU},
  year = {2009},
  abstract = {This article presents a new architecture to implement all game loop
	models for games and real-time applications that use the GPU as a
	mathematics and physics coprocessor, working in parallel processing
	mode with the CPU. The presented model applies automatic task distribution
	concepts. The architecture can apply a set of heuristics defined
	in Lua scripts in order to get acquainted with the best processor
	for handling a given task. The model applies the GPGPU (general-purpose
	computation on GPUs) paradigm. In this article we propose an architecture
	that acquires knowledge about the hardware by running tasks in each
	processor and, by studying their performance over time, finding the
	best processor for a group of tasks.},
  database = {ACM},
  owner = {Katia},
  references = {Amd stream computing

	Power Efficient Processor Architecture and The Cell Processor

	Lua 5.1 Reference Manual

	Automatic Dynamic Task Distribution between CPU and GPU for Real-Time
	Systems

	A new physics engine with automatic process distribution between CPU-GPU

	The programming language lua

	GPU acceleration of numerical weather prediction

	Nvidia--Cuda compute unified device architecture

	Cuda particles

	Nvidia cuda compute unified device architecture documentation ver.
	1.1

	Geforce 8800 GPU architecture overview

	Fast n-body simulation with cuda

	A survey of general-purpose computation on graphics hardware

	Supermassive crowd simulation on GPU based on emergent behavior

	Fragment shaders for agent animation using finite state machines

	Larrabee: a many-core x86 architecture for visual computing

	Quantum chemistry on graphical processing units

	Real time game loop models for single-player computer games

	The GPU used as a math co-processor in real time applications

	A game loop architecture for the GPU used as a math coprocessor in
	real-time applications},
  timestamp = {2010.07.06}
}

@ARTICLE{E[124],
    inserir = {false},
  author = {D. M. Kaiser},
  title = {The structure of games},
  year = {2005},
  abstract = {Computer Game Playing has been an active area of research since Samuel s
	first Checkers player (Samuel 1959). Recently interest beyond the
	classic games of Chess and Checkers has led to competitions such
	as the General Game Playing competition, in which players have no
	beforehand knowledge of the games they are to play, and the Computer
	Poker Competition which force players to reason about imperfect information
	under conditions of uncertainty. The purpose of this dissertation
	is to explore the area of General Game Playing both specifically
	and generally. On the specific side, we describe the design and implementation
	of our General

	Game Playing system OGRE. This system includes an innovative method
	for feature extraction that helped it to achieve second and fourth
	place in two international General Game Playing competitions. On
	the more general side, we also introduce the Regular Game Language,
	which goes beyond current works to provide support for both stochastic
	and imperfect information games as well as the more traditional games.},
  database = {ACM},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.06}
}

@ARTICLE{E[3],
    inserir = {false},
  author = {Y. Kaneda and H. Takahashi and M. Saito and H. Aida and H. Tokuda},
  title = {A challenge for reusing multiplayer online games without modifying
	binaries},
  year = {2005},
  abstract = {In this paper, we advocate the problem of reusing Multiplayer Online
	Game (MOG) in Client-Server (C/S) architecture. The problem is that
	MOG services cannot continue to be provided because of high maintenance
	cost for operating game servers. Additionally, it is caused by the
	decreasing service users who getting tired of the game and game providers
	who have faced difficulties in collecting charge of the game service.
	It is important that every user can play MOGs at any time whether
	game servers of game providers run them or not.We describe a challenging
	method for solving the problem. Our solution provides a middleware
	which is inserted under the game applications to switch network architecture
	from C/S to Peer-to-Peer (P2P). By exploiting this method, the network
	architecture of MOGs can be easily changed from C/S to P2P under
	some restrictions without modifying binaries.},
  database = {ACM},
  owner = {Katia},
  references = {Massiv - Massively Multiplayer Online Game Middleware

	The Expat XML Parser

	Project:Athena - Ragnarok Online server emulation tool

	Cheat-proof playout for centralized and distributed online games

	Network Analysis of Counter-strike and Starcraft

	NDIS - Network Driver Interface Specification

	Cheat-proofing dead reckoned multiplayer games

	Profiling and Optimization of Software-Based Network-Analysis Applications

	Low latency and cheat-proof event ordering for peer-to-peer games

	A fair message exchange framework for distributed multi-player games

	Global Positioning System: Theory and Practice

	Enabling conferencing applications on the internet using an overlay
	muilticast architecture

	id software

	Overcast: Reliable multicasting with an overlay network

	Sync-MS: Synchronized Messaging Service for Real-Time Multi-Player
	Distributed Games

	DirectPlay

	Age of Empire

	The network time protocol

	On the impact of delay on real-time multiplayer games

	The effect of latency on user performance in Warcraft III

	A Review on Networking and Multiplayer Computer Games

	IP Network Address Translator (NAT) Terminology and Considerations

	Half Life:Counter Strike

	Terazona},
  timestamp = {2010.07.06}
}

@ARTICLE{E[41],
    inserir = {false},
  author = {K. Kanev and T. Sugiyama},
  title = {Design and simulation of interactive 3D computer games},
  year = {1998},
  abstract = {Design and development of attractive and competitive computer games
	is no longer a one-man task, but a complex multistage process with
	many participants. Discovering new game ideas and their further development,
	game world and characters design and modeling, game evaluation and
	testing all these are conducted by specialists teamed to work together.
	In this paper we discuss tools and facilities supporting the collaborative
	game design and development process through rapid prototyping and
	simulation of 3D game worlds, characters, behaviors and other game
	functionality. Single player and multi-player games are addressed
	in the context of different hardware platforms and software approaches.
	We report our experience in building a Game Design and Simulation
	testbed environment (GDS) and its usage in location-based entertainment
	projects. Work on GDS has been carried out in the scope of the VirtuaFly
	project and during the development of the physical motion based commercial
	game VirtuaFly2.},
  database = {ScienceDirect},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.07}
}

@ARTICLE{I[34],
    inserir = {true},
  author = {C. M. Kanode and H. M. Haddad},
  title = {Software Engineering Challenges in Game Development},
  year = {2009},
  abstract = {In software engineering (SE), video game development is unique yet
	similar to other software endeavors. It is unique in that it combines
	the work of teams covering multiple disciplines (art, music, acting,
	programming, etc.), and that engaging game play is sought after through
	the use of prototypes and iterations. With that, game development
	is faced with challenges that can be addressed using traditional
	SE practices. The industry needs to adopt sound SE practices for
	their distinct needs such as managing multimedia assets and finding
	the ldquofunrdquo in game play. The industry must take on the challenges
	by evolving SE methods to meet their needs. This work investigates
	these challenges and highlights engineering practices to mitigate
	these challenges.},
  database = {IEEE},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.06}
}

@ARTICLE{I[35],
    inserir = {true},
  author = {S. Kaur and H. K. Kaura},
  title = {Design and Implementation of a Multiplayer Bluetooth Game},
  year = {2009},
  abstract = {The mobile phones have undergone a tremendous advancement in terms
	of technology. They are no more a communicating device. They are
	more into computing, photography and entertainment. There are numerous
	single player games available on mobile phones. But we have successfully
	implemented a multiplayer game on mobile phone by making use of the
	Bluetooth functionality of the mobile phone. This paper focuses on
	the design and implementation of a multiplayer Bluetooth game. The
	game chosen was "Four Connect" and it is being successfully implemented.},
  database = {IEEE},
  owner = {Katia},
  references = {Mobile Python - Rapid prototyping on the mobile platform

	Nokia Python (PyS60) Discussion Boards

	Python (PyS60) Wiki

	Getting Started with Python for series S60 platform

	PyS60 library reference, Release 1.4.5 final

	Connect Four on Wikipedia

	Bluetooth Essential for Programmers

	Computer Graphics},
  timestamp = {2010.07.06}
}

@ARTICLE{E[66],
    inserir = {false},
  author = {R. Khaled and P. Barr and R. Biddle and R. Fischer and J. Noble},
  title = {Game design strategies for collectivist persuasion},
  year = {2009},
  abstract = {A fundamental feature of serious games is persuasion, an attempt to
	influence behaviors, feelings, or thoughts. Much of the existing
	research on serious games and, more generally, on persuasive technology
	(PT), does not address the important links between persuasion and
	culture. It has tended to originate from Western, individualist cultures,
	and has focused on how to design for these audiences. In this paper,
	we describe the design of one of two versions of a serious game we
	developed about quitting smoking titled Smoke? which is targeted
	at collectivist players. We show how the design was informed by persuasive
	strategies we identified from the cross-cultural psychology literature,
	intended for use in games for players of collectivist cultures: HARMONY,
	GROUP OPINION, MONITORING, DISESTABLISHING, and TEAM PERFORMANCE.
	We then discuss the results of a quantitative investigation of the
	effects of both game versions on both individualist and collectivist
	players.},
  database = {ACM},
  owner = {Katia},
  references = {The effect of cultural orientation on persuasion

	Persuasive Games: The Expressive Power of Videogames

	Activating interpersonal influence in the prevention of adolescent
	tobacco use

	Generating cross-cultural training data for THE UNIVERSITY GAME

	Global Marketing and Advertising: Understanding Cultural Paradoxes

	Self-evaluation and motivation to change

	Cultural Aspects of User Interface Understanding: An Empirical Evaluation
	of an E-Learning Website by International User Groups

	A theory of social comparison

	Persuasive Technology: Using Computers to Change What We Think and
	Do, Science & Technology Books

	September the 12th

	Cross-cultural variability of communication in personal relationships

	Beyond Culture

	Blackless Fantasy: The Disappearance of Race in Massively Multiplayer
	Online Role-Playing Games

	Cultures and organisations: Software of the mind

	One game does not fit all cultures. In Why do games work?

	Developing culturally-aware persuasive technology

	Factoring culture into the design of a persuasive game

	Excuses to continue smoking: The role of disengagement beliefs in
	smoking cessation

	Crosscurrents: cultural dimensions and global Web user-interface design

	Culture and the self: Implications for cognition, emotion, and motivation

	Cue exposure treatment for smoking relapse prevention: A controlled
	clinical trial

	What drives electronic commerce across cultures? A cross-cultural
	empirical investigation of the theory of planned behaviour

	Spare the rod? Conflicting cultural models of the family and approaches
	to child socialisation in New Zealand

	Universals in the content and structure of values: Theoretical advances
	and empirical tests in 20 countries

	Individualism-collectivism, life events, and self-esteem: a test of
	two trade-offs

	Individualism and collectivism: Cross-cultural perspectives on self-ingroup
	relationships

	Individualism and Collectivism (New Directions in Social Psychology)

	America's army: The official army game

	The Influence of Culture on Usability

	Spiral of Values},
  timestamp = {2010.07.06}
}

@ARTICLE{E[127],
    inserir = {false},
  author = {C. Kletsch and D. Volk},
  title = {Towards an AJAX-based game engine},
  year = {2008},
  abstract = {In recent years, browser games have considerably improved so that
	regarding the number of players they nowadays can compete with MMOGs.
	At the same time, they have abandoned their own principles by increasingly
	relying on proprietary technology. In this paper, we propose the
	concept of a 2D single player game engine that is based on new Web
	2.0 standards (especially AJAX) which promise to alleviate some of
	the problems that caused the mentioned technological shift. No additional
	platform besides a standard browser will be needed to run instantiated
	games, since the engine will be based on JavaScript. Game content
	will be loaded on-demand using an AJAX-compliant update mechanism.},
  database = {ACM},
  owner = {Katia},
  references = {What is Web 2.0? Ideas, technologies and implications for education

	Designing a PC Game Engine

	Facilitating the Education of Game Development},
  timestamp = {2010.07.06}
}

@ARTICLE{I[37],
    inserir = {true},
  author = {H. Korhonen and E. M. I. Koivisto},
  title = {Playability heuristics for mobile multi-player games},
  year = {2007},
  abstract = {Multi-player games are engaging because of social interaction and
	competing with real players. Currently, many digital games are multi-player
	or have multi-player features. When evaluating the playability of
	multi-player games, we need to consider player-to-player interaction.
	In this paper, we introduce and describe playability heuristics for
	mobile multi-player games that complement the playability heuristic
	model that we have presented earlier. Multi-player heuristics have
	been developed by identifying playability problems in game evaluations
	and comparing these findings to game design guidelines and other
	studies found in the literature. The results indicate that the presented
	multi-player heuristics correspond to issues that are addressed to
	be important in multi-player games.},
  database = {ACM},
  owner = {Katia},
  references = {Cheat-proof Layout for Centralized and Distributed Online Games

	Patterns in Game Design

	Approaches to managing deviant behavior in virtual communities

	An empirical evaluation of TCP performance in online games

	The usability of massively multiplayer online roleplaying games: designing
	for new users

	Heuristics and Usability Guidelines for the Creation and Evaluation
	of FUN in Video Games

	Online Game Interactivity Theory with Cdrom

	Defining grief play in MMORPGs: player and developer perceptions

	Design and Evaluation of MiMaze, a Multi-Player Game on the Internet

	Finding others online: reputation systems for social online spaces

	Supporting Communities in MMORPGs by Game Design

	Iterative Design of Mobile Games

	Mobile Game Playability Heuristics

	Playability heuristics for mobile games

	Developing Online Games: An Insider's Guide

	Developing Online Mobile Games

	On the impact of delay on real-time multiplayer games

	A key note speech on the design philosophy of World of Warcraft

	Project massive: a study of online gaming communities

	Play Between Worlds: Exploring Online Game Culture

	A Model to Support the Design of Multiplayer Games, Presence: Teleoperators
	and Virtual Environments},
  timestamp = {2010.07.06}
}

@ARTICLE{E[104],
    inserir = {false},
  author = {H. Korhonen and E. M. I. Koivisto},
  title = {Playability heuristics for mobile games},
  year = {2006},
  abstract = {Expert evaluation is a widely used method for evaluating the usability
	of software products. When evaluating games, traditional usability
	heuristics lack comprehension and cannot be directly applied. In
	this paper, we introduce playability heuristics that are specifically
	designed for evaluating mobile games. Heuristics form a core model
	that can be used in any mobile game evaluation. The model consists
	of three modules: Game Usability, Mobility, and Gameplay. The mobile
	context has some unique characteristics, which require special attention
	during the evaluation. These characteristics are described in mobility
	heuristics. Mobile devices also set some of their own requirements
	for general usability and these issues are described along with game
	usability heuristics. These heuristics have been developed by using
	an iterative design process of a mobile game. In addition, we have
	validated the heuristics and evaluated five mobile games by using
	them with the expert evaluation method. The results indicate that
	playability problems, which violate game usability or mobility heuristics,
	are quite easy to identify. Gameplay problems are harder to find,
	but gameplay heuristics help in evaluation and focus on different
	aspects of the gameplay.},
  database = {IEEE},
  owner = {Katia},
  references = {Patterns in Game Design

	Flow: The psychology of Optimal Experience

	Using heuristics to evaluate the playability of games

	Better by Design

	Heuristics and Usability Guidelines for the Creation and Evaluation
	of FUN in Video Games

	Series 60 Developer Platform 2.0: Usability Guidelines for Symbian
	C++ Games

	International Organization for Standardization (ISO) 9241-11: Ergonomic
	Requirements for Office Work with Visual Display Terminals

	Mobile Game Playability Heuristics

	Communication and Community in Digital Entertainment Services - Prestudy
	Research Report

	What makes things fun to learn? heuristics for designing instructional
	computer games

	Validating an extension to participatory heuristic evaluation: quality
	of work and quality of work life

	Developing Online Games: An Insider's Guide

	Enhancing the explanatory power of usability heuristics

	Usability Engineering

	Heuristic evaluation of user interfaces

	Andrew Rollings and Ernest Adams on Game Design},
  timestamp = {2010.07.06}
}

@ARTICLE{I[36],
    inserir = {true},
  author = {H. Korhonen and E. M. I. Koivisto},
  title = {Playability heuristics for mobile games},
  year = {2006},
  abstract = {Expert evaluation is a widely used method for evaluating the usability
	of software products. When evaluating games, traditional usability
	heuristics lack comprehension and cannot be directly applied. In
	this paper, we introduce playability heuristics that are specifically
	designed for evaluating mobile games. Heuristics form a core model
	that can be used in any mobile game evaluation. The model consists
	of three modules: Game Usability, Mobility, and Gameplay. The mobile
	context has some unique characteristics, which require special attention
	during the evaluation. These characteristics are described in mobility
	heuristics. Mobile devices also set some of their own requirements
	for general usability and these issues are described along with game
	usability heuristics. These heuristics have been developed by using
	an iterative design process of a mobile game. In addition, we have
	validated the heuristics and evaluated five mobile games by using
	them with the expert evaluation method. The results indicate that
	playability problems, which violate game usability or mobility heuristics,
	are quite easy to identify. Gameplay problems are harder to find,
	but gameplay heuristics help in evaluation and focus on different
	aspects of the gameplay.},
  database = {ACM},
  owner = {Katia},
  references = {Patterns in Game Design

	Flow: The psychology of Optimal Experience

	Using heuristics to evaluate the playability of games

	Better by Design

	Heuristics and Usability Guidelines for the Creation and Evaluation
	of FUN in Video Games

	Series 60 Developer Platform 2.0: Usability Guidelines for Symbian
	C++ Games

	Mobile Game Playability Heuristics

	Communication and Community in Digital Entertainment Services - Prestudy
	Research Report

	What makes things fun to learn? heuristics for designing instructional
	computer games

	Validating an extension to participatory heuristic evaluation: quality
	of work and quality of work life

	Developing Online Games: An Insider's Guide

	Enhancing the explanatory power of usability heuristics

	Usability Engineering

	Heuristic evaluation of user interfaces

	Andrew Rollings and Ernest Adams on Game Design},
  timestamp = {2010.07.06}
}

@ARTICLE{I[38],
    inserir = {true},
  author = {H. Korhonen and J. Paavilainen and H. Saarenpää},
  title = {Expert review method in game evaluations: comparison of two playability
	heuristic sets},
  year = {2009},
  abstract = {The expert review method is not yet widely adopted in game evaluations,
	although it has been used successfully in productivity software evaluations
	for years. In order to use the method effectively, there need to
	be playability heuristics that take into account the characteristics
	of the videogames. There are a few playability heuristic sets available,
	but they have several differences, and they have not been compared
	to discover their strengths and weaknesses in game evaluations. In
	this paper, we report on a first study comparing two playability
	heuristic sets when evaluating the playability of a videogame. The
	results indicate that the heuristics can assist the evaluators in
	evaluating both the user interface and the gameplay aspects of the
	game. However, playability heuristics need to be developed further
	before they can be utilized by the practitioners. Especially, the
	clarity and comprehensibility of the heuristics need to be improved,
	and the optimal number of heuristics is still open.},
  database = {ACM},
  owner = {Katia},
  references = {Game Design and Development: Fundamentals of Game Design

	Using heuristics to evaluate the playability of games

	Understanding Video Games, Routledge, New York, NY, 2007

	Fundamental Components of the Gameplay Experience: Analysing Immersion

	Playability in action videogames: a qualitative design model

	The 400 Project

	Heuristics and Usability Guidelines for the Creation and Evaluation
	of Fun in Video Games

	The Medium Is Not the Message: Advertising Effectiveness and Content
	Evaluation in Print and on the Web

	Damaged merchandise? a review of experiments that compare usability
	evaluation methods

	The evaluator effect in usability tests

	Effective Affective User Interface Design in Games

	Communication and Community in Digital Entertainment Services

	Mobile Game Playability Heuristics

	Playability heuristics for mobile games

	Extension of Heuristic Evaluation Method: a Review and Reappraisal

	Heuristics for designing enjoyable user interfaces: Lessons from computer
	games

	The Magical Number Seven

	Comparative usability evaluation (CUE-4)

	Usability Engineering

	Heuristic evaluation of user interfaces

	User-centered Design in Games

	Beyond usability in games, interactions

	Heuristic evaluation for games: usability principles for video game
	design

	Game Usability 101},
  timestamp = {2010.07.06}
}

@ARTICLE{E[52],
    inserir = {false},
  author = {M. Kostomaj and B. Boh},
  title = {Evaluation of User s Physical Experience in Full Body Interactive
	Games},
  year = {2009},
  abstract = {This paper is an evaluation of full body interactive games using Kroflic s
	and Labans framework of Body, Space, Time and Relationship. An experiment
	with 8 participants playing 10 games for 20 minutes was conducted
	and recorded to digital video. Body, Space and Time elements have
	been measured using observation, motion tracking and Quantity of
	Motion (QoM). The results from the experiment informed the designer
	about the participants physical experience through the analysis
	of postures used in each game, the quality of the movement, the body
	parts used in the interaction, the playing area, the direction of
	movement, direction of gaze, tempo, dynamics and QoM. The experiment
	informed the designer about important issues of the user s physical
	experience and proved that the method can provide useful information
	in the development and evaluation of full body interactive games.
	The theoretical work of Laban and Kroflic also proved useful for
	interaction and games design in the transition from desktop to full
	body interactive games.},
  database = {SpringerLink},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.07}
}

@ARTICLE{E[91],
    inserir = {false},
  author = {S. Kurkovsky},
  title = {Making the case for mobile game development},
  year = {2009},
  abstract = {The term mobile culture reflects a phenomenal role that mobile devices
	play in our everyday lives. Accordingly, in the eyes of many current
	students, computing technology is associated with their mobile phones
	and gadgets instead of larger desktops that are commonly used in
	the academic environment. Most of them

	carry mobile phones with them at all times, and being able to develop
	and immediately run an application on their phone may offer an experience
	that is as practical and as close to the real world as it gets. By
	using mobile computing and, in particular, mobile game development,
	it may be possible to make course material more relevant to students;
	this also may show a stronger connection to real-world applications
	and technology that surround our students.},
  database = {ACM},
  owner = {Katia},
  references = {No references: Short paper},
  timestamp = {2010.07.06}
}

@ARTICLE{I[39],
    inserir = {true},
  author = {T. Larrabee and C. L. Mitchell},
  title = {Gambit: A Prototyping Approach to Video Game Design},
  year = {1984},
  abstract = {Video game designers don't have to be assembly language programmers.
	Their creative talents can be expressed in a prototyping language.},
  database = {IEEE},
  owner = {Katia},
  references = {Video Games: The Electronic Big Bang

	Gambit A Programming Language for Designing Video Games

	SIMULA-67

	Smalltalk 80: The Language and its Implementation

	Abstraction Mechanisms in CLU

	A Device Independent Graphics Imaging Model for Use with Raster Devices

	Wirth Pascal User Manual and Report},
  timestamp = {2010.07.06}
}

@ARTICLE{I[40],
    inserir = {true},
  author = {H. Lee and T. Park},
  title = {Design and Implementation of an Online 3D Game Engine},
  year = {2004},
  abstract = {This paper proposes Dream3D, an online 3D game engine. We analyze
	requirements to build MMORPGs together with the techniques to satisfy
	them. And then, the techniques are classified into four categories:
	3D rendering, animation, server, and network techniques. We design
	and implement Dream3D to provide all the required functionalities.
	Related with the technique classification, Dream3D consists of four
	subsystems: rendering engine, animation engine, server engine, and
	network engine. For each of the subsystems, we propose an implementation
	model to satisfy the functionality requirements.},
  database = {SpringerLink},
  owner = {Katia},
  references = {3D Game Engine Design: A Practical Approach to Real-Time Computer
	Graphics

	Real-Time Rendering

	3D Games: Real-time Rendering and Software Technology

	Progressive Mesh

	3D Computer Graphics

	Mesh Optimization

	Game Architecture and Design

	Real-Time, Continuous Level of Detail Rendering of Height Fields

	Game Programming Gems 3},
  timestamp = {2010.07.07}
}

@ARTICLE{E[15],
    inserir = {false},
  author = {K. Lee and B. Ko and S. Calo},
  title = {Adaptive server selection for large scale interactive online games},
  year = {2005},
  abstract = {Large scale interactive online games aim to support a very large number
	of game players simultaneously. To support hundreds of thousands
	of concurrent players, game providers have so far focused on developing
	highly scalable game server architectures and extensible network
	infrastructures. Recently, distributed online games are beginning
	to incorporate more interactive features and action sequences; thus,
	it becomes increasingly important to provision server resources in
	an efficient manner to support real-time interaction between the
	users. In this paper, we present a novel distributed algorithm to
	select game servers for a group of clients participating in a large
	scale interactive online game session. The goal of server selection
	is to minimize the server resource usage while satisfying a real-time
	delay constraint. We develop a synchronization delay model for interactive
	games and formulate the server selection problem, and prove that
	the considered problem is NP-hard. The proposed algorithm, called
	zoom-in zoom-out, is adaptive to session dynamics (e.g., clients
	join) and lets the clients select appropriate servers in a distributed
	manner such that the server resource is efficiently utilized. Using
	simulation, we study the performance of the proposed algorithm and
	show that it is simple, yet effective in achieving its design goal.
	In particular, we show that the performance of our algorithm is comparable
	to, or sometimes even better than, that of centralized greedy algorithms,
	which require global information and extensive computations.},
  database = {ScienceDirect},
  owner = {Katia},
  references = {Lineage

	NCsoft

	Butterfly.net.

	Terazona

	PlanetSide

	Bandwidth requirement and state consistency in three multiplayer game
	architectures

	A Distributed Multiplayer Game Server System

	Network infrastructure for massively distributed games

	A generic proxy system for networked computer games

	Implementation of a service platform for online games

	A service platform for OnLine games

	Zoned federation of game servers: a peer-to-peer approach to scalable
	multi-player online games

	Scalable peer-to-peer networked virtual environment

	Mercury: supporting scalable multi-attribute range queries

	End-to-end transmission control mechanisms for multiparty interactive
	applications on the Internet

	A distributed architecture for multiplayer interactive applications
	on the Internet

	Sync-MS: synchronized messaging service for real-time multi-player
	distributed games

	1500 Archers on a 28.8: network programming in age of empires and
	beyond

	Distributed center-location algorithms

	BRITE

	Emergence of scaling in random networks

	On the placement of web server replicas

	Introduction to algorithms

	An iterative algorithm for delay-constrained minimum-cost multicasting

	An Efficient Delay-Constrained Minimum Spanning Tree Heuristic

	Approximation algorithms for selecting network centers

	A fair message exchange framework for distributed multi-player games},
  timestamp = {2010.07.07}
}

@ARTICLE{I[43],
    inserir = {true},
  author = {M. W. Lee and J. M. Lee},
  title = {Generation and control of game virtual environment},
  year = {2007},
  abstract = {In this paper, we present a framework for the generation and control
	of an Internet-based 3-dimensional game virtual environment that
	allows a character to navigate through the environment. Our framework
	includes 3-dimensional terrain mesh data processing, a map editor,
	scene processing, collision processing, and walkthrough control.
	We also define an environment-specific semantic information editor,
	which can be applied using specific location obtained from the real
	world. Users can insert text information related to the characters
	real position in the real world during navigation in the game virtual
	environment.},
  database = {SpringerLink},
  owner = {Katia},
  references = {Construction of an Open Geometry Server for Client-server Virtual
	Environments

	Designing a PC Game Engine

	The Delta3D Open Source Game Engine

	Integrating Dynamic Full-body Motion Devices in Interactive 3D Entertainment

	Virtual Human Representation and Communication in VLNET

	Introduction to 3D Game Programming with DirectX 9.0

	Real-time Rendering

	High-Level Semantics Representation for Intelligent Simulative Environments

	Information-rich Virtual Environments: Theory, Tools, and Research
	Agenda

	Real-Time 3D Terrain Engines Using C++ and DirectX 9

	Sibert. A Toolset for Navigation in Virtual Environments

	Fast 3D Triangle-box Overlap Testing},
  timestamp = {2010.07.07}
}

@ARTICLE{E[47],
    inserir = {false},
  author = {S. Lee and K. Jung},
  title = {Dynamic Game Level Design Using Gaussian Mixture Model},
  year = {2006},
  abstract = {In computer games, the level design and balance of character attributes
	are the key features of interesting games. Level designers adjust
	the attributes of the game characters and opponent behavior to create
	appropriate levels of difficult, and avoid player frustration. Generally,
	opponent behavior is defined by a static script, however, this results
	in repetitive levels and environments, making in difficult to maintain
	the player s interest. Accordingly, this paper proposes a dynamic
	scripting method that can sustain the degree of interest intended
	by the level designer by adjusting the opponent behaviors while playing
	the game. The player s countermeasure pattern for dynamic level design
	is modeled using a Gaussian Mixture Model (GMM). The proposed method
	is applied to a shooter game, and the experimental results maintain
	the degree of interest intended by the level designer.},
  database = {SpringerLink},
  owner = {Katia},
  references = {Game Developer Magazine

	Using Evolutionary Programming to Create Neural Networks that are
	Capable of Playing Tic-Tac-Toe

	Difficulty Scaling of Game AI

	Computing Gaussian Mixture Models with EM using Equivalence Constraints},
  timestamp = {2010.07.07}
}

@ARTICLE{I[42],
    inserir = {true},
  author = {S. H. Lee and G. H. Lee and H. H. Cho and D. H. Song and S. Y. Rhew},
  title = {An Empirical Model of the Game Software Development Processes},
  year = {2006},
  abstract = {One of the hottest and fastest developing areas of computer software
	in Korea is computer game software. However, due to relatively young
	history and empirical nature of the area, there has not been any
	agreement or standardization of game software process design for
	its efficacy. In this paper, we propose a practical model of the
	game software development processes, which can be easily applicable
	to the traditional software development based on ISO12207 and/or
	RUP through the panel interview of game developers. We evaluate the
	model by on-line survey of another set of practical game developers
	and break down the results by game platform and game genre. And the
	results are quite promising.},
  database = {IEEE},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.06}
}

@ARTICLE{I[41],
    inserir = {true},
  author = {W. Lee and L. Liu and J. Chiou},
  title = {A Component-Based Framework to Rapidly Prototype Online Chess Games
	for Home Entertainment},
  year = {2006},
  abstract = {To reduce the cost and risk of developing computer games, game developers
	are increasingly adopting software engineering methods to produce
	game engines or middleware. In this paper, we take such an approach
	to develop a software framework for rapidly prototyping online chess
	games. A set of application programming interfaces (APIs) is pre-defined
	to deal with the technical details. Following the provided guidelines,
	any game programmer can use APIs to develop his own games in a time-efficient
	manner, and can connect the game to the platform as an application
	for all online players. To demonstrate how our framework can be used
	to develop a game conveniently and efficiently, we have used it to
	design a well-known Chinese chess game as an example.},
  database = {IEEE},
  owner = {Katia},
  references = {Designing a PC Game Engine

	Special Issue on Ubiquitous Games

	Game Development: Harder than you think

	Software Engineering and Computer Games

	Peer-to-peer support for massively multiplayer games

	Practical Middleware for Massively Multiplayer Online Games

	Massively Multi-player Games: Matching Game Design with Technical
	Design

	Relative QoS Optimization for Multiparty Online Gaming in DiffServ
	Networks

	Network Infrastructure for Massively Distributed Games

	A Distributed Architecture for Multiplayer Interactive Applications
	on the Internet

	Implementation of a Service Platform for Online Games

	Adaptive Server Selection for Large Scale Interactive Online Games},
  timestamp = {2010.07.06}
}

@ARTICLE{I[75],
    inserir = {true},
  author = {M. van Lent and W. Swartout},
  title = {Games: Once More, with Feeling},
  year = {2007},
  abstract = {Achieving increased player engagement involves adding deep emotional
	experiences to videogames. Games and simulations are already capable
	of gripping a player's emotions. From the earliest days of flight
	simulators, for example, professional pilots have frequently reported
	feeling stressed during simulated emergencies in a training simulator.
	Similarly, gamers say that they feel tension during intense moments
	in a first-person shooter. Games also seem effective at creating
	feelings of triumph and at startling or exciting players.},
  database = {IEEE},
  owner = {Katia},
  references = {no references - Games: Once More, with Feeling},
  timestamp = {2010.07.06}
}

@ARTICLE{E[92],
    inserir = {false},
  author = {J.P. Lewis and M. McGuire and P. Fox},
  title = {Mapping the Mental Space of Game Genres},
  year = {2007},
  abstract = {The gaming community currently uses an informal classification of
	games into genres such as first-person shooters, real-time strategy
	games, etc. While this classification is generally accepted, producing
	a more formal taxonomy of game types directly from data has several
	scholarly and commercial advantages. These include providing a basis
	for analysis of age- and gender-related data, statistically meaningful
	grouping in critical literature, improved game recommendations on
	retail websites, and better evaluation of a game's market potential
	before production. Mapping the mental space of game genres is challenging,
	both because it involves subjective evaluations and because there
	are many axes on which games can vary. We collected pairwise similarity
	metrics of games from game players through an online survey to build
	a large similarity matrix that is the projection of a high-dimensional
	space representing the unknown and hypothetical true mental space
	of game genres. We then applied previous techniques in manifold learning
	and psychology to the problem of reconstructing the most significant
	dimensions into maps that can be meaningfully interpreted. We believe
	this is the first application of these techniques to games and one
	of the first to work with conceptual (instead of physical) data.
	The resulting maps arrange related games into spontaneously arising
	clusters that sometimes contradict current marketing genres. We analyze
	several of these clusters and propose both interpretations for these
	``true genres'' as well as axes that game players appear to use in
	discriminating between them. Our initial results indicate that game
	players tend to primarily distinguish games not by traditional genres
	but instead by aesthetic and mechanics, which is closely related
	to how developers construct games.},
  database = {ACM},
  owner = {Katia},
  references = {Method and system for music recommendation

	Predicting success from music sales data: a statistical and adaptive
	approach

	For a new classification of game genres

	How Hits Happen: Forecasting Predictability in a Chaotic Marketplace

	Game Design Workshop: Designing, Prototyping, and Playtesting Games

	Half-Real: Video Games between Real Rules and Fictional Worlds

	Structuring information with mental models: a tour of boston

	Circumplex Models of Personality and Emotions

	Spatial knowledge acquisition from maps and from navigation in real
	and virtual environments

	Game Architecture and Design with Cdrom

	A circumplex model of affect

	Navigation And Wayfinding In Virtual Reality

	Nonlinear manifold learning part II

	A global geometric framework for nonlinear dimensionality reduction

	Iso-charts: stretchdriven mesh parameterization using spectral analysis},
  timestamp = {2010.07.06}
}

@ARTICLE{E[70],
    inserir = {false},
  author = {M. Lewis and J. Jacobson},
  title = {Games engines in scientific research},
  year = {2002},
  abstract = {Six-figure workstations and custom software are not producing the
	best graphics or virtual reality simulations anymore. Today, the
	only way to have the fastest, most realistic simulations and sophisticated
	graphics is to trade down from the expensive gear to standard PCs
	running game software. Virtual reality (VR), augmented reality (AR),
	and high-fidelity physical simulation have long posed too high a
	barrier to entry for any but the most generously funded researchers.
	Significant advances in computer graphics in these areas have traditionally
	depended on expensive, specialized graphics hardware running on scientific
	workstations. Highfidelity simulation/graphics software has also
	remained an expensive niche market largely the province of the military
	and high-end VR labs seeking to drive costly peripherals such as
	Caves, datagloves, and head-mounted displays (HMDs). In the past
	two years, however, the situation has changed remarkably. Now the
	mass market for

	computer games, grown even larger than the movie industry, has expropriated
	the best in computer hardware and software for itself. The most sophisticated
	rendering pipelines are now found not on specialized scientific machines
	but on PC video cards costing less than $500. The most sophisticated,
	responsive interactive simulations are now found in the engines built
	to power games. Despite the stigma of violence and gore associated
	...},
  database = {ACM},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.06}
}

@ARTICLE{E[86],
    inserir = {false},
  author = {T. Lin and W. Hu and A. Imamiya and M. Omata},
  title = {Large Display Size Enhances User Experience in 3D Games},
  year = {2006},
  abstract = {Large displays are becoming commonplace for home and office computers.
	Although researchers have quantified the benefits of working on large
	displays, there has been little investigation of how large displays
	physiologically and emotionally impact the user. Using subjective
	and physiological measures, we compared the users experience when
	game playing on a large display versus a small display. We found
	that the large display caused greater physiological responses and
	higher subjective ratings of excitement. These physiological results
	were mirrored in the participants subjective reports. The study
	contributes to understanding of interaction with large displays and
	refining the requirements for what constitutes effective and desirable
	humancomputer interaction (HCI).},
  database = {SpringerLink},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.07}
}

@ARTICLE{E[27],
    inserir = {false},
  author = {I. MacInnes and L. Hu},
  title = {Business models and operational issues in the Chinese online game
	industry},
  year = {2007},
  abstract = {The rapid growth of Internet usage has enabled many new online communities
	to develop. A particularly interesting phenomenon that has arisen
	through Internet communities is the virtual world (VW) style of online
	game. This paper identifies the challenges that developers of VWs
	will face in their efforts to find viable business models. This is
	a single case study of China as an exploratory project to determine
	the issues surrounding business models for virtual world developers
	and users. The paper discusses the feedback effects between broadband
	adoption and online games as well as issues such as culture, history,
	Waigua, private servers, virtual property trade, developer control,
	governance, and regulation. In spite of the profitability of major
	Chinese VW operators, close observation of the Chinese case suggests
	that even the most successful VW operators are still in the early
	stages of their business model development.},
  database = {ScienceDirect},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.07}
}

@ARTICLE{E[67],
    inserir = {false},
  author = {A. Macleod},
  title = {Game design through self-play experiments},
  year = {2005},
  abstract = {The application of self-play experiments to computer games was pioneered
	by Thompson in 1982 with his chess machine BELLE. Since then the
	technique has been widely used in a variety of games to train artificial
	players employing a range of artificial neural network architectures.
	Of particular note is the TD-learning Backgammon program of Tesauro
	developed in 1995. When developing artificial game players that learn
	by experience, it is generally possible to accelerate the training
	process through self-play. Compared with training by humans, this
	confers the advantages of greater speed and a precise control of
	playing strength through parameter variation. In spite of these potential
	advantages, the use of self-play experiments is considered by many
	to be a treacherous road fraught with problems. The value of such
	experiments is unclear and the threshold of learning that can be
	achieved through self-play alone is unknown. There is the common-sense
	perception that only limited playing skill can be achieved through
	machine self-play, a notion that is challenged here. A new application
	that is immune from the problems associated with machine learning
	is the use of self-play experiments to test the integrity and fairness
	of games and modify the rules accordingly. We will show how the rules
	of a particular game, Perudo, can be analysed for fairness and how
	the excessive positive feedback that arises when forces become unbalanced
	can be curbed. We use the notion of fair in the same sense as in
	a soccer game - if a team loses a goal, neglecting psychological
	effects, the chance of losing a second goal is not significantly
	changed. It is recognised that the cumulative growth in advantage
	is part of many games and that it is inappropriate to alter the rules
	in these cases. However the rate at which advantages grow can be
	moderated by rule alterations. We will also consider the application
	of the technique to a range of traditional games. In chess, for example,
	White is considered to have an advantage over Black. The imbalance
	can be determined for different playing strengths and extrapolated.
	We will show that the principles can be extended to the more complex
	situations of computer games and propose that the development of
	unintelligent agents to explore game play is advantageous.},
  database = {ACM},
  owner = {Katia},
  references = {Computer chess strength

	A new self-play experiment in computer chess

	Why settle for optimal play when you can do better

	Machine learning in games: a survey

	Reinforcement learning of strategies for Settlers of Catan

	Evolutionary Changes of Chess-like Games: A study using self-play
	experiment

	Selecting Games for Artificial Intelligence Research

	Introduction to Reinforcement Learning

	Perudo as a development platform for Artificial Intelligence

	Game Design: Theory and Practice

	80-Sqaure Chess

	Dice Games Properly Explained

	Complete Book of Dice Games

	Evolutionary behaviour testing of commercial computer games

	Trap Avoidance in Strategic Computer Game Playing with Case Injected
	Genetic Algorithms},
  timestamp = {2010.07.06}
}

@ARTICLE{E[71],
    inserir = {false},
  author = {P. Malacaria and C. Hankin},
  title = {Generalised flowcharts and games},
  year = {1998},
  abstract = {We introduce a generalization of the classical notion of flowchart
	for languages with higher order and object-oriented features. These
	general flowcharts are obtained by an abstraction of the game semantics
	for Idealized Algol and as such rely on a solid mathematical basis.
	We demonstrate how charts may be used as the basis for data flow
	analysis.},
  database = {SpringerLink},
  owner = {Katia},
  references = {Linearity, sharing and state: a fully abstract game semantics for
	Idealised Algol with active expressions

	Compilers: Principles, Techniques, Tools

	Game semantics and abstract machines

	Demand Interprocedural Dataflow Analysis

	On full abstraction for PCF: I, II and III

	A unified treatment of flow analysis in higherorder languages

	A New Approach to Control Flow Analysis

	Infinitary Control Flow Analysis: a Collecting Semantics for Closure
	Analysis

	Principles of Program Analysis: Flows and Effects

	Syntactic control of interference

	The essence of Algol},
  timestamp = {2010.07.07}
}

@ARTICLE{E[9],
    inserir = {false},
  author = {T. Marill},
  title = {A note on pattern-recognition techniques and game-playing programs},
  year = {1963},
  abstract = {A problem encountered in the design of game-playing programs the evaluation
	of board positions is formally identical to a typical pattern-recognition
	problem. Certain techniques, which have been found helpful in the
	pattern-recognition case, may therefore also be applied to game-playing
	programs. A brief review of these techniques, based on multivariate
	analysis, is given.},
  database = {ScienceDirect},
  owner = {Katia},
  references = {No references: A note on pattern-recognition techniques and game-playing
	programs},
  timestamp = {2010.07.07}
}

@ARTICLE{E[28],
    inserir = {false},
  author = {M. Masuch and M. Rueger},
  title = {Challenges in collaborative game design developing learning environments
	for creating games},
  year = {2006},
  abstract = {We perform a general analysis of the game design process, the structure
	of digital games and investigate the requirements for the use of
	OpenCroquet as a platform for collaborative game design. Based on
	our experiences of using a Squeak/Tweak programming environment in
	many game projects and recently for teaching game design we derive
	properties of a learning environment for teaching game design in
	an OpenCroquet environment with a special focus on collaboration.},
  database = {IEEE},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.06}
}

@ARTICLE{E[140],
    inserir = {false},
  author = {M. McGill},
  title = {Weighted game developer qualifications for consideration in curriculum
	development},
  year = {2009},
  abstract = {Game development programs are being added to computer science departments
	as either a track, minor, or major in post-secondary institutions
	across the United States. These programs are being developed with
	little published quantitative or qualitative research on what such
	programs should entail. The quantitative research in this pilot study
	defines qualifications sought when hiring game developers for positions
	in industry. Using cross-sectional data, qualifications from job
	advertisements were coded, categorized, and then subcategorized and
	weighted totals were calculated based on skills being either required
	or desired. Weighted totals in each subcategory were compared and
	ranked. The top 10 qualifications are provided, along with a breakdown
	of rankings of all subcategories within each category. Subcategories
	of Languages and Tools/Environments are also discussed briefly to
	highlight key qualifications in each.},
  database = {ACM},
  owner = {Katia},
  references = {ACM/IEEE Curricula Recommendations

	Achieving a regional process for curriculum development

	Defining the information technology workforce from the educational
	perspectives: a pilot study

	Corporate curricula in schools: issues and implementation

	Building Employability Skills into the Higher Education Curriculum:
	A University-Wide Initiative

	A strategic approach to computer science curriculum

	Curriculum Framework

	Critical skills and knowledge requirements of IS professionals: a
	joint academic/industry investigation

	Changing Patterns in IT Skill Sets 1998--2003: A Content Analysis
	of Classified Advertising

	The Information Systems Industry: What Abilities Does it Want From
	Its New Hires? A Look at the Southeastern US

	Tech Skills in Ten US Cities: Comparing Job Needs in a Changing World

	Technology Skills in Demand: A Survey of Job Advertisements in New
	England

	Skillset: The Sector Skills Council for Creative Media

	The evolution of IS job skills: a content analysis of IS job advertisements
	from 1970 to 1990},
  timestamp = {2010.07.06}
}

@ARTICLE{E[36],
    inserir = {false},
  author = {M. McGill},
  title = {Critical skills for game developers: an analysis of skills sought
	by industry},
  year = {2008},
  abstract = {With electronic gaming on the rise, several major universities involved
	in game development research have implemented curricula specifically
	for future game developers. Gaming curricula are now being offered
	in smaller universities, colleges, and other educational institutions,
	with other departments wondering if they should follow suit and what
	content should be covered. For this quantitative research, the author
	performed a content analysis on posted job advertisements for game
	developer

	positions, to determine qualities the gaming industry desires when
	seeking game developer employees,. A categorization of qualities
	was performed after reviewing each job ad and five categories for
	qualifications were developed: Experience, Education, Interpersonal
	& Personal Abilities, Technical Skills, and Supporting Knowledge
	and a frequency distribution of the qualities in each ad was performed.
	The results show that there are education and experience levels,
	skills, abilities, and knowledge

	that are clearly sought by industry and certain qualities are sought
	with more frequency than others.},
  database = {ACM},
  owner = {Katia},
  references = {Gaming: A Technology Forecast

	BCSA Press Release

	Using Training Ads to Identify High-Demand IS/IT Job Skills and Competencies

	The Information Systems Industry: What Abilities Does it Want From
	Its New Hires? A Look at the Southeastern US

	Corporate Curricula in Schools: Issues and Implementations

	Game Design & Programming Concentration Within the Computer Science
	Curriculum

	The Job Seekers Use Both Print and Online Advertising

	Developing a Management Information Systems (MIS) Curriculum: Perspectives
	from MIS Practitioners

	Enhancing the Undergraduate Industrial Engineering Curriculum: Defining
	desired characteristics and emerging topics

	An Analysis of the Changing Demand Patterns for Information Technology
	Professionals

	Changing Patterns in IT Skill Sets 1998-2003: A Content Analysis of
	Classified Advertising

	A Strategic Approach to Computer Science Curriculum

	Curriculum Framework

	IS Knowledge and Skills Sought By Employers: A Content Analysis of
	Australian IS Early Career Online Job Advertisements

	Tech Skills in Ten US Cities: Comparing Job Needs in a Changing World

	Critical Skills and Knowledge Requirements of IS Professionals: A
	Joint Academic and Industry Investigation

	The IT/IS Job Market: A Longitudinal Perspective

	A Comparative Study of IT/IS Job Skills and Job Definitions

	Technology Skills in Demand: A Survey of Job Advertisements in New
	England

	Experience with an industry-driven capstone course on game programming

	The Key to Employability: Developing a Practical Model of Graduate
	Employability

	Connecting Enterprise and Graduate Employability: Challenges to the
	higher education culture and curriculum?

	Skillset: The Sector Skills Council for Creative Media

	The Evolution of IS Job Skills: A Content Analysis of IS Job Advertisements
	from 1970 to 1990

	The IS Expectation Gap: Industry Expectations Versus Academic Preparation

	Information Systems Entry-Level Job Skills: A Survey of Employers

	Educating the Next Generation of Game Developers},
  timestamp = {2010.07.06}
}

@ARTICLE{I[44],
    inserir = {true},
  author = {M. McNaughton and M. Cutumisu and D. Szafron and J. Schaeffer and
	J. Redford and D. Parker},
  title = {ScriptEase: generative design patterns for computer role-playing
	games},
  year = {2004},
  abstract = {Recently, some researchers have argued that generative design patterns
	(GDPs) can leverage the obvious design re-use that characterizes
	traditional design patterns into code re-use. This work provides
	additional evidence that GDPs are both useful and productive. Specifically,
	the current state-of-the-art in the domain of computer games is to
	script individual game objects to provide the desired interactions
	for each game adventure. We use BioWare Corp.'s popular Neverwinter
	Nights computer role-playing game to show how GDPs can be used to
	generate game scripts. This is a particularly good domain for GDPs,
	since game designers often have little or no programming skills.
	We demonstrate our approach using a new GDP tool called ScriptEase.},
  database = {IEEE},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.06}
}

@ARTICLE{E[19],
    inserir = {false},
  author = {P. Melliès and N. Tabareau},
  title = {An Algebraic Account of References in Game Semantics},
  year = {2009},
  abstract = {We study the algebraic structure of a programming language with higher-order
	store, in the style of ML references. Instead of working directly
	on the operational semantics of the language, we consider its fully
	abstract game semantics defined by Abramsky, Honda and McCusker one
	decade ago. This alternative description of the language is nice
	and conceptual, except on one significant point: the interactive
	behavior of the higher-order memory cell is reflected in the model
	by a strategy cell whose definition remains slightly enigmatic. The
	purpose of our work is precisely to clarify this point, by providing
	a neat algebraic definition of the strategy. This conceptual reconstruction
	of the memory cell is based on the idea that a general reference
	behaves essentially as a linear feedback (or trace operator) in an
	ambient category of Conway games and strategies. This analysis leads
	to a purely axiomatic proof of soundness of the model, based on a
	natural refinement of the replication modality of tensor logic.},
  database = {ScienceDirect},
  owner = {Katia},
  references = {Axioms for Definability and Full Completeness

	A fully abstract game semantics for general reference

	Axiomatizing Fully Complete Models for ML Polymorphic Types

	Linearity, sharing and state: a fully abstract game semantics for
	idealized algol with active expressions

	Call-by-value games

	A mixed linear and non-linear logic: Proofs, terms and models

	Sequential algorithms on concrete data structures

	Games and Full Abstraction for Nondeterministic Languages

	On traced monoidal closed categories

	Remarques sur la théorie des jeux à deux personnes

	Traced monoidal categories

	Coherence for compact closed categories

	A categorical semantics of higher order store

	A game semantics of names and pointers

	Global state considered helpful

	Duality in bicategories and topological applications

	On the semantics of Idealized Algol without the bad variable constructor

	Resource modalities in game semantics

	Action Calculi V: reflexive molecular forms

	An explicit formula for the free exponential modality of linear logic

	Global state considered unnecessary: An introduction to object-based
	semantics

	Syntactic control of interference

	Modalités de ressources et contrôle en logique tensorielle},
  timestamp = {2010.07.07}
}

@ARTICLE{I[45],
    inserir = {true},
  author = {A. Mitchell and K. McGee},
  title = {Designing Storytelling Games That Encourage Narrative Play},
  year = {2009},
  abstract = {Storytelling games are a form of competitive storytelling framed in
	the context of gameplay. However, most existing storytelling games
	emphasize competitive gameplay and winning at the expense of competitive
	narrative play; they tend to be storytelling games rather than storytelling
	games. This paper explores issues related to the design of storytelling
	games that are won through narrative play and proposes a number of
	design rules for this. These design rules not only help in the design
	of storytelling games with a stronger element of narrative play,
	they also have implications for the design of computational storytelling
	systems.},
  database = {SpringerLink},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.07}
}

@ARTICLE{I[46],
    inserir = {true},
  author = {P. Moreno-Ger and J. L. Sierra and I. Martínez-Ortiz and B. Fernández-Manjón},
  title = {A documental approach to adventure game development},
  year = {2007},
  abstract = {In this paper, we propose a documental approach to the development
	of graphical adventure videogames. This approach is oriented to the
	production and maintenance of adventure videogames using the game s
	storyboard as the key development element. The videogame storyboard
	is marked up with a suitable domain-specific descriptive markup language,
	from which the different art assets that are needed are referred
	to, and then the final executable videogame itself is automatically
	produced by processing the marked storyboard with a suitable processor
	for such a language. This document-oriented approach opens new authoring
	possibilities in videogame development and allows a rational collaboration
	between the different communities that participate in the development
	process: game writers, artists, and programmers. We have implemented
	the approach in the context of the <e-Game > project, by defining
	a suitable markup language for the storyboards (the <e-Game > language),
	and by building a suitable processor for this language (the <e-Game
	> engine).},
  database = {ScienceDirect},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.07}
}

@ARTICLE{E[80],
    inserir = {false},
  author = {G. Morgan and F. Lu and K. Storey},
  title = {Interest management middleware for networked games},
  year = {2005},
  abstract = {In this paper we present an implementation of an interest management
	scheme using standard message oriented middleware (MOM) technologies
	to provide scalable message dissemination for networked games. The
	aim of all interest management schemes is to identify when objects
	that inhabit a virtual world should be interacting and to enable
	such interaction via message passing while preventing objects that
	should not be interacting from exchanging messages. The time taken
	by existing interest management schemes to resolve which objects
	influence each other may be too large to enable the desired interaction
	to occur. Furthermore, existing interest management implementations
	tend to be proprietary and are built directly on top of networking
	protocols. In this paper we present an approach to interest management
	based on the predicted movement of objects. Our approach determines
	the frequency of message exchange between objects on the likelihood
	that such objects will influence each other in the near future. We
	then demonstrate, via implementation and experimentation, how existing
	middleware standards provide a suitable platform for the deployment
	of our interest management scheme.},
  database = {ACM},
  owner = {Katia},
  references = {Mercury: a scalable publish-subscribe system for internet games

	JacORB 1.4 Programming Guide

	Host Extensions for IP Multicasting

	Designing and Optimizing a Scalable CORBA Notification Service

	MASSIVE: a distributed virtual reality system incorporating spatial
	trading

	SIMNET: The advent of simulator networking

	Notification Service Specification

	The Common Object Request Broker: Architecture and Specification

	Networked virtual environments: design and implementation

	Planet Side web Site

	Determining Collisions between Moving Spheres for Distributed Virtual
	Environments

	Java Message Service Specification - Version 1.1

	Java RMI Specification

	Unreal Networking Architecture

	OpenFusion CORBA Notification Service

	Mysql Reference Manual},
  timestamp = {2010.07.06}
}

@ARTICLE{E[114],
    inserir = {false},
  author = {S. N. I. Mount and E. I. Gaura and R. M. Newman},
  title = {Sensorium games: usability considerations for pervasive gaming},
  year = {2005},
  abstract = {The Sensorium family of games provides a platform and environment
	for multiplayer games in a pervasive environment. Each player is
	equipped with a mote, which (along with those of other players) is
	an element in a wireless sensor network. Sensorium games are pervasive
	in the truest sense: that is, sensory events in the environment trigger
	events in the game. For example, walking under a light may cause
	a loss of game lives.In this paper, we describe the Sensorium game
	platform and Trove, an implemented game which is a member of the
	Sensorium family. We describe our experiences of player Trove and
	heuristic evaluations of its usability.},
  database = {ACM},
  owner = {Katia},
  references = {Pirates! - using the physical world as a game board

	Gaming on the edge: using seams in ubicomp games

	MICA2 wireless measurement system datasheet

	MTS sensor, data acquisition boards datasheet

	Where on-line meets on the streets: experiences with mobile mixed
	reality games

	System architecture directions for networked sensors

	Issues and challenges in uniquitous computing

	Feedback, latency, accuracy: exploring tradeoffs in location-aware
	gaming

	Heuristic evaluation, Usability inspection methods

	Heuristic evaluation of user interfaces

	Raiders of the lost ark},
  timestamp = {2010.07.06}
}

@ARTICLE{E[21],
    inserir = {false},
  author = {J. Munro and C. Boldyreff and A. Capiluppi},
  title = {Architectural studies of games engines - The quake series},
  year = {2009},
  abstract = {The move of commercial companies to "open-source" their products presents
	challenges for both the proposing company and the wider open source
	(OS) communities. The former has to align their source code to the
	OS practices, while the latter has to cope with large amounts of
	closely-developed code. This paper aims to present relevant data
	and results from the analysis performed on the Quake family of OSS
	game engines, including findings and an initial interpretation of
	the data. This forms the basis for the architectural understanding
	necessary to design and develop improvements and new features to
	the studied game engines. The presented approach constitutes a useful
	resource for games developers who wish to contribute to the further
	evolution of these games engines; and it provides insights into how
	the Quake engine architecture has evolved in practice since it was
	released as an open source project.},
  database = {IEEE},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.06}
}

@ARTICLE{E[55],
    inserir = {false},
  author = {A. S. Murawski and C. -H. L. Ong},
  title = {Evolving Games and Essential Nets for Affine Polymorphism},
  year = {2001},
  abstract = {This paper presents a game model of Second-order Intuitionistic Multiplicative
	Affine Logic (IMAL2). We extend Lamarche s essential nets to the
	second-order affine setting and use them to show that the model is
	fully and faithfully complete.},
  database = {SpringerLink},
  owner = {Katia},
  references = {Semantics of interaction: an introduction to Game Semantics

	Games and full completeness for multiplicative linear logic

	A Fully-complete PER Model for ML Polymorphic Types

	The Structures of Multiplicatives

	Quantifiers in Linear Logic II

	Light linear logic

	Games and definability for System

	On Full Abstraction for PCF: I, II & III

	A universal innocent game model for the Bohm tree lambda theory

	Proof Nets for Intuitionistic Linear Logic 1: Essential Nets

	Exhausting Strategies, Joker Games and Full Completeness for IMLL
	with Unit

	Dominator Trees and Fast Verification of Proof Nets

	Games for System},
  timestamp = {2010.07.07}
}

@ARTICLE{E[65],
    inserir = {false},
  author = {L. Nacke},
  title = {From playability to a hierarchical game usability model},
  year = {2009},
  abstract = {This paper presents a brief review of current game usability models.
	This leads to the conception of a high-level game usability framework
	model that integrates current usability approaches in game industry
	and game research.},
  database = {ACM},
  owner = {Katia},
  references = {Evaluating user experiences in games

	Using heuristics to evaluate the playability of games

	Playability in action videogames: a qualitative design model

	ISO/IEC 9241-11 Ergonomic Requirements for Office Work with Visual
	Display Terminals (Vdts) -- Part 11: Guidance on Usability

	Communication and Community in Digital Entertainment Services

	Playability heuristics for mobile games

	Play and Playability as Key Concepts in New Media Studies

	Using Psychophysiological Techniques to Measure User Experience with
	Entertainment Technologies

	Flow and immersion in first-person shooters: measuring the player's
	gameplay experience

	Usability Engineering

	A method to standardize usability metrics into a single score

	GameFlow: a model for evaluating player enjoyment in games

	Defining personas in games using metrics},
  timestamp = {2010.07.06}
}

@ARTICLE{E[64],
    inserir = {false},
  author = {K. Nakano and T. Terano},
  title = {From Gaming Simulation to Case Method Empirical Study on Business
	Game Development and Evaluation},
  year = {2004},
  abstract = {Both Gaming Simulation and Case Method are traditional and powerful
	tools to carry out educational courses in a business school. However,
	there have been few studies to integrate Gaming Simulation and Case
	Method methodology. This paper presents a new practical approach
	for this purpose. At Graduate School of Systems Management, Tsukuba
	University, we have ten years experiences on the business modeling
	course with BMDL/BMDS (Business Model Description Language/ Business
	Model Development System) ar-chitecture. Base on the experience,
	in this paper, we have developed a new business game: ldquoCase of
	Asahi Super Dryrdquo. The aim of this game is to explore managersrsquo
	decision making strategies in a quantitative business operation domain
	through the successful case of Japanese brewery company. Using the
	developed model, we tried to evaluate the effectiveness for Case
	Method on Gaming Simulation. The experimental results have suggested
	the benefits of the proposed approach.},
  database = {SpringerLink},
  owner = {Katia},
  references = {Game development toolkit for business people in Japan

	Teaching and the case method: Text, cases, and readings

	Teaching strategic management with a business game

	Teaching business ethics with management and marketing games

	Understanding your business through Home-Made simulator development

	Gaming Simulation

	Designing games and simulations},
  timestamp = {2010.07.07}
}

@ARTICLE{I[47],
    inserir = {true},
  author = {L. M. Nascimento and E. S. de Almeida and S. R. de L. Meira},
  title = {A Case Study in Software Product Lines - The Case of the Mobile Game
	Domain},
  year = {2008},
  abstract = {Software product lines (SPL) processes are gradually being adopted
	by many companies in several domains. A particular domain where the
	adoption of such processes may bring relevant benefits is the mobile
	applications domain given the big diversity of handsets, although
	the characteristics of this domain usually create barriers to apply
	these processes in practice, such as, restrictions of memory size
	and processing power and different API implementations by different
	manufacturers. In this context, this work presents briefly a practical
	approach to implement core assets in a SPL applied to the mobile
	game domain combining the good practices from the already published
	processes and describes in details a case study performed with the
	application of this approach, based on three different adventure
	mobile games. The results of the case study have shown the approach
	can be suitable for the domain in question.},
  database = {IEEE},
  owner = {Katia},
  references = {C.R.U.I.S.E: Component Reuse in Software Engineering

	Product Line Hall of Fame

	Software Product Lines: Practices and Patterns

	PuLSE: A Methodology to Develop Software Product Lines

	Component-Based Product Line Development: The KobrA Approach

	Software Product Line Engineering: Foundations, Principles and Techniques

	Designing Software Product Lines with UML: From Use Cases to Pattern-Based
	Software Architectures

	Software Product-Line Engineering: A Family-Based Software Development
	Process

	The Java ME Platform - the Most Ubiquitous Application Platform for
	Mobile Devices

	GoPhone - A software product line in the mobile phone domain

	Product line variability refactoring tool

	Aspect-Oriented Programming

	Feature-Oriented Domain Analysis (FODA) Feasibility Study

	Automatically Composing Reusable Software Components for Mobile Devices

	Implementing Product Line Variabilities

	Component Quality Assurance: Towards a Software Component Certification
	Process

	Experimentation in Software Engineering: An Introduction

	The Goal Question Metric Approach

	A Complexity Measure},
  timestamp = {2010.07.06}
}

@ARTICLE{I[48],
    inserir = {true},
  author = {D. Natapov and S. J. Castellucci and I. S. MacKenzie},
  title = {ISO 9241-9 evaluation of video game controllers},
  year = {2009},
  abstract = {Fifteen participants completed a study comparing video game controllers
	for point-select tasks. We used a Fitts' law task, as per ISO 9241-9,
	using the Nintendo Wii Remote for infrared pointing, the Nintendo
	Classic Controller for analogue stick pointing, and a standard mouse
	as a baseline condition. The mouse had the highest throughput at
	3.78 bps. Both game controllers performed poorly by comparison. The
	Wii Remote throughput was 31.5% lower, at 2.59 bps, and the Classic
	Controller 60.8% lower at 1.48 bps. Comparing just the video game
	controllers, the Wii Remote presents a 75% increase in throughput
	over the Classic Controller . Error rates for the mouse, Classic
	Controller , and the Wii Remote were 3.53%, 6.58%, and 10.2%, respectively.
	Fourteen of 15 participants expressed a preference for the Wii Remote
	over the Classic Controller for pointing tasks in a home entertainment
	environment.},
  database = {ACM},
  owner = {Katia},
  references = {Unigest: Text entry using three degrees of motion

	Testing pointing device performance and user assessment with the ISO
	9241, Part 9 standard

	Entertainment Software Association (ESA) - Industry Facts

	Line drawing in virtual reality using a game pad

	ISO, 9421-9 Ergonomic requirements for office work with visual display
	terminals (VDTs) - Part 9: Requirements for non-keyboard input devices

	Variability of throughput in pointing device tests: Button-up or button-down?

	Performance measures of game controllers in a three-dimensional environment

	TwoStick: Writing with a game controller

	Nintendo Wii outsells 360, PS3, PS2, PSP combined in April: ars technica
	- the art of technology NPD report

	Fitts' law as a research and design tool in humancomputer interaction

	An evaluation of two input devices for remote pointing

	Accuracy measures for evaluating computer pointing devices

	Gesture recognition with a Wii controller

	An isometric joystick as a pointing device for hand-held information
	terminals

	Towards a standard for pointing device evaluation: Perspectives on
	27 years of Fitts' law research in HCI

	Wii Fit Review - Is Nintendo ushering a fitness revolution?},
  timestamp = {2010.07.06}
}

@ARTICLE{E[128],
    inserir = {false},
  author = {M. J. Nelson and M. Mateas},
  title = {Towards Automated Game Design},
  year = {2007},
  abstract = {Game generation systems perform automated, intelligent design of games
	(i.e. videogames, boardgames), reasoning about both the abstract
	rule system of the game and the visual realization of these rules.
	Although, as an instance of the problem of creative design, game
	generation shares some common research themes with other creative
	AI systems such as story and art generators, game generation extends
	such work by having to reason about dynamic, playable artifacts.
	Like AI work on creativity in other domains, work on game generation
	sheds light on the human game design process, offering opportunities
	to make explicit the tacit knowledge involved in game design and
	test game design theories. Finally, game generation enables new game
	genres which are radically customized to specific players or situations;
	notable examples are cell phone games customized for particular users
	and newsgames providing commentary on current events. We describe
	an approach to formalizing game mechanics and generating games using
	those mechanics, using WordNet and ConceptNet to assist in performing
	common-sense reasoning about game verbs and nouns. Finally, we demonstrate
	and describe in detail a prototype that designs micro-games in the
	style of Nintendo s WarioWare series.},
  database = {SpringerLink},
  owner = {Katia},
  references = {Towards an ontological language for game analysis

	Metagame in symmetric, chess-like games

	What WarioWare can teach us about game design

	ConceptNet: A practical commonsense reasoning toolkit

	WordNet: An Electronic Lexical Database

	The public acquisition of commonsense knowledge

	CYC: A large-scale investment in knowledge infrastructure

	Natural Language Processing with ThoughtTreasure

	Beating common sense into interactive applications

	WordNet:Similarity: Measuring the relatedness of concepts

	EGGG: Automated programming for game generation

	The future of content. Keynote address

	Procedural level generation

	Procedural level design for platform games

	Terrain synthesis from digital elevation models

	Using MIDI to modify video game content

	TALE-SPIN

	The Creative Process: A Computer Model of Storytelling

	What is an image?

	Virtual Music: Computer Synthesis of Musical Style

	Interactive improvisational music companionship: A user-modeling approach

	Generation of ideologically-biased historical documentaries

	MAKEBELIEVE: Using commonsense knowledge to generate stories},
  timestamp = {2010.07.07}
}

@ARTICLE{I[49],
    inserir = {true},
  author = {D. Nguyen and S. B. Wong},
  title = {Design patterns for games},
  year = {2002},
  abstract = {Designing a two-person game involves identifying the game model to
	compute the best moves, the user interface (the view) to play the
	game, and the controller to

	coordinate the model and the view. A crucial task is to represent
	the algorithms used in their highest abstract forms. This can prove
	to be a difficult and subtle endeavor.

	It is made easier however by the use of good objectoriented (OO) design
	principles to help maintain a high level abstract viewpoint during
	the design process. The state pattern is used to represent the game
	board and is coupled with the visitor pattern to provide state-dependent,
	variant behaviors. The min -max algorithm and its variants

	are implemented as the strategy pattern, which allows flexible and
	extensible computational capability. Careful analysis is performed
	to properly abstract the interactions

	between the model and the view. The command design pattern is used
	to provide callback services between the model and the view. Leading
	students through this design process enables them to learn algorithms
	and architectures that easily scale to full-sized applications.},
  database = {ACM},
  owner = {Katia},
  references = {Data Structures and Problem Solving Using Java

	Design Patterns, Elements of Reusable Object-Oriented Software

	Design Patterns for Decoupling Data Structures and Algorithms},
  timestamp = {2010.07.06}
}

@ARTICLE{E[130],
    inserir = {false},
  author = {A. Nijholt and D. P. Bos and B. Reuderink},
  title = {Turning shortcomings into challenges: Brain computer interfaces for
	games},
  year = {2009},
  abstract = {In recent years we have seen a rising interest in brain computer interfacing
	for human computer interaction and potential game applications. Until
	now, however, we have almost only seen proof-of-concepts where a
	single BCI paradigm is demonstrated to work as a simple control mechanism,
	as a measurement of user state, or for neurofeedback. There have
	hardly been any attempts to design BCI games where BCI is considered
	to be one of multiple possible input modalities (together with keyboard,
	speech, gestures, etc.) that can be used to control the game. One
	reason may be that research still follows the paradigms of the traditional,
	medically oriented, BCI approaches. In this paper we discuss current
	BCI research from the viewpoint of games and game design. It is hoped
	that this survey will make clear that we need to design different
	games than we used to, but that such games can nevertheless be interesting
	and exciting.},
  database = {ScienceDirect},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.07}
}

@ARTICLE{I[50],
    inserir = {true},
  author = {T. Nummenmaa and J. Kuittinen and J. Holopainen},
  title = {Simulation as a game design tool},
  year = {2009},
  abstract = {In this paper we suggest using gameplay simulations on a logical event
	level as a design tool already in the early stages of the development
	process. The approach is centred on abstracting all unnecessary details
	of the gameplay to produce a highly simplified model of the game
	system. Compared to other kinds of intermediate design representations,
	such as sketches and prototypes, the simulations can reveal problems
	and opportunities in the longer term dynamics of possible gameplay.
	As an example we describe an implementation of a simulation model
	for the game Tower Bloxx using a simulation software package called
	DisCo.},
  database = {ACM},
  owner = {Katia},
  references = {DisCo toolset - the new generation

	Hierarchical petri nets for story plots featuring virtual humans

	Principles of simulation

	Patterns in Game Design

	Petri nets for game plot

	Z: An Introduction to Formal Methods

	Game Design Workshop: A Playcentric Approach to Creating Innovative
	Games

	Formal models and game design

	Games Without Frontiers: Theories and Methods for Game Studies and
	Design

	The DisCo2000 Specification Language Annotated version

	The DisCo language and temporal logic of actions

	Object-oriented specification of reactive systems

	Composing DisCo specifications using generic Real-Time events - a
	mobile robot case study

	Barriers and enablers for creating shared understanding in co-design
	projects

	Mental synthesis and creativity in design: an experimental examination

	A Practical Theory of Reactive Systems: Incremental Modeling of Dynamic
	Behaviors

	The temporal logic of actions

	How Designers Think: The Design Process Demystified

	Thoughtful Interaction Design: A Design Perspective on Information
	Technology

	A layer-based formalization of an on-board instrument

	Adding probabilistic modeling to executable formal DisCo specifications
	with applications in strategy modeling in multiplayer game design

	The thinking eye: visual re-cognition in design emergence

	Seeing is believing: the importance of visualization in manufacturing
	simulation

	Game Design Theory and Practice

	Rules of Play: Game Design Fundamentals

	The Art of Game Design: A book of lenses

	The Reflective Practitioner: How Professionals Think In Action

	Programmed Graph Rewriting with Time for Simulation-Based Design

	A method for modeling probabilistic object behaviour for simulations
	of formal specifications

	Scalable agent-based simulation of players in massively multiplayer
	online games

	A study of prototypes, design activity, and design outcome},
  timestamp = {2010.07.06}
}

@ARTICLE{E[45],
    inserir = {false},
  author = {O. Oda and L. J. Lister and S. White and S. Feiner},
  title = {Developing an augmented reality racing game},
  year = {2008},
  abstract = {Augmented reality (AR) makes it possible to create games in which
	virtual objects are overlaid on the real world, and real objects
	are tracked and used to control virtual ones. We describe the development
	of an AR racing game created by modifying an existing racing game,
	using an AR infrastructure that we developed for use with the XNA
	game development platform. In our game, the driver wears a tracked
	video see-through head-worn display, and controls the car with a
	passive tangible controller. Other players can participate by manipulating
	waypoints that the car must pass and obstacles with which the car
	can collide. We discuss our AR infrastructure, which supports the
	creation of AR applications and games in a managed code environment,
	the user interface we developed for the AR racing game, the game's
	software and hardware architecture, and feedback and observations
	from early demonstrations.},
  database = {ACM},
  owner = {Katia},
  references = {Evaluation of user satisfaction and learnability for outdoor augmented
	reality gaming

	"A Survey of Augmented Reality," Presence: Teleoperators and Virtual
	Environments

	MonkeyBridge: autonomous agents in augmented reality games

	Capture the Flag: Mixed-Reality Social Gaming with Smart Phones

	Touch-Space: Mixed Reality Game Space Based on Ubiquitous

	Augmented Reality Chinese Checkers

	Orchestrating a mixed reality game 'on the ground'

	Augmented Reality: A New Way of Seeing

	ARTag Rev1: Marker Detection

	A Fiducial Marker System Using Digital Techniques

	Magic Mirror System with Hand-held and Wearable Augmentations

	SymBall: camera driven table tennis for mobile phones

	OpenCV: Open Source Computer Vision Library

	Marker Tracking and HMD Calibration for a Video-Based Augmented Reality
	Conferencing System

	Visuo-haptic collaborative augmented reality ping-pong

	Immersive Authoring of Tangible Augmented Reality Applications

	TARBoard: Tangible Augmented Reality System for Table-top Game Environment

	Towards the next generation of tabletop gaming experiences

	A Multimodal Interaction Framework for Pervasive Game Applications

	AR-bowling: immersive and realistic game play in real environments
	using augmented reality

	The MORGAN framework: enabling dynamic multi-user AR and VR projects

	RV-Border Guards: A Multi-player Mixed Reality Entertainment

	Foot-based mobile interaction with games

	ARQuake: the outdoor augmented reality gaming system

	Augmented Reality Techniques in Games

	ARQuake: An Outdoor/Indoor Augmented Reality First Person Application

	Towards Massively Multi-User Augmented Reality on Handheld Devices},
  timestamp = {2010.07.06}
}

@ARTICLE{E[78],
    inserir = {false},
  author = {Y. Okada},
  title = {IntelligentBox as component based development system for body action
	3D games},
  year = {2005},
  abstract = {This paper treats component based approach for the development of
	body action 3D games. The research group of the author has already
	proposed a 3D software development system called IntelligentBox.
	IntelligentBox has provided various software components called boxes,
	which are 3D visible, reactive objects. IntelligentBox allows the
	user to develop 3D graphics applications including 3D games by combining
	already existing boxes through direct manipulations on a computer
	screen. This is the main feature of IntelligentBox, which is a difference
	from other conventional systems. In this paper, the author introduces
	the extension of IntelligentBox to the development of body action
	3D games. To deal with body actions, various components, i.e., particular
	boxes, those handle input devices frequently used in virtual reality
	applications, are introduced to IntelligentBox. Furthermore, the
	author introduced a particular component called virtual mouse pointer
	to make it possible to manipulate 3D objects using an input device
	like a data-glove.},
  database = {ACM},
  owner = {Katia},
  references = {A framework for the structured design of VR/AR content

	Distributed Open Inventor: a practical approach to distributed 3D
	graphics

	Direct 3D interaction with smart objects

	Modeling virtual object behavior within virtual environment

	Sensor Based Synthetic Actors in a Tennis Game Simulation

	IntelligentBox: a constructive visual software development system
	for interactive 3D graphic applications

	Collaborative Environments of lIntelligetnBox for Distributed 3D Graphics
	Applications

	Virtual Input Devices Based on Motion Capture and Collision Detection

	3D visual component based approach for immersive collaborative virtual
	environments

	Manipulation Using Magnet Metaphor for 2D and 3D Integrated Toolkit
	Systems

	Manipulation Guide Using Contact Constraints for Construction of 3D
	Composite Objects

	CAVERNsoft G2: a toolkit for high performance tele-immersive collaboration

	An open software architecture for virtual reality interaction

	VRPN: a device-independent, network-transparent VR peripheral system},
  timestamp = {2010.07.06}
}

@ARTICLE{I[51],
    inserir = {true},
  author = {E. M. I. Ollila and R. Suomela and J. Holopainen},
  title = {Using prototypes in early pervasive game development},
  year = {2008},
  abstract = {In this article we discuss various prototyping methods in early pervasive
	game development. The focus is on pervasive games that are played
	with mobile phones. Choosing the right prototyping method is crucial
	in achieving results that can be used for validating or developing
	further design ideas. In this article we give guidelines that help
	the selection process and give ideas on methods that can be used
	in different situations. We have play-tested pervasive game prototypes
	using agile software prototype development methods, forum prototypes,
	and guided paper prototyping methods. We give examples of five pervasive
	games where these kinds of prototyping methods are used. In concluding,
	we compare the results and discuss their benefits and disadvantages
	in the game development process, that is, when the methods should
	be used and what should be considered when using them.},
  database = {ACM},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.06}
}

@ARTICLE{E[7],
    inserir = {false},
  author = {E. Onieva and D. A. Pelta and J. Alonso and V. Milanes and J. Perez},
  title = {A modular parametric architecture for the TORCS racing engine},
  year = {2009},
  abstract = {This paper presents our approach to TORCS Car Racing Competition 2009,
	it is based on a complete modular architecture capable of driving
	automatically a car along a track with or without oppents. The architecture
	is composed of five simple modules being each one responsible for
	a basic aspect of car driving. The modules control gear shiftings,
	steer movements and pedals positions by using of simple functions
	meanwhile the allowed speed in a certain track segment is managed
	by a simple TSK fuzzy system.},
  database = {IEEE},
  owner = {Katia},
  references = {The 2007 ieee cec simulated car racing competition

	The wcci 2008 simulated car racing competition

	Fuzzy identification of systems and its applications to modeling and
	control

	Software manual of the car racing competition

	Fuzzy sets

	Structure identification of fuzzy model

	Modeling a fuzzy coprocessor and its programming language

	On stability of fuzzy systems expressed by fuzzy rules

	Ten years of genetic fuzzy systems: Current framework and new trends

	Genetic fuzzy systems: Taxonomy, current research trends and prospects},
  timestamp = {2010.07.06}
}

@ARTICLE{E[88],
    inserir = {false},
  author = {M. Overmars},
  title = {Learning object-oriented design by creating games},
  year = {2006},
  abstract = {Playing computer games is a popular recreational activity for young
	people. Creating a state-of-the-art commercial computer game is an
	incredibly difficult task. Writing a game like Pac-Man from scratch
	in a modern programming language is still difficult. Fortunately,
	several currently available tools make game creation easier. These
	tools can be used to create more complex games, but they offer only
	limited programming possibilities. Many similar packages exist. One
	such program is Game Maker, which is a rapid-application development
	tool. The Game Maker interface uses an object-oriented, event-driven
	approach. With Game Maker's drag-and-drop techniques, users can create
	games without writing a single line of code. But the program also
	includes an interpreted programming language. The program produces
	stand-alone games that can be distributed freely: a version of Game
	Maker, itself, is available for free as well.},
  database = {IEEE},
  owner = {Katia},
  references = {no references: Learning object-oriented design by creating games},
  timestamp = {2010.07.06}
}

@ARTICLE{E[25],
    inserir = {false},
  author = {R. Pagulayan and K. Steury},
  title = {Beyond usability in games},
  year = {2004},
  abstract = {Video games are an art form that combines traditional artistic endeavors
	such as the visual arts, story-telling, and music, with more modern
	technical and engineering achievements. At the center of this effort
	is the game designer who drives the creative vision and who decides
	what needs to be accomplished in the design and creation of the video
	game. At some level, we, as user researchers, can provide input at
	nearly every stage of the development process that is useful for
	design, but in the end, it is not up to us to design a game. Our
	role is to assist the designer in the facilitation of their game
	vision, then provide feedback to help shape that vision into something
	that users enjoy. Beyond previous statements made in the literature
	regarding the limitations of the traditional concept of usability
	for enjoyment or pleasure, there are certain concepts that we believe
	are important to address in the design of video games. These include,
	but are not limited to, fun, challenge, pace, learning curve, engagement,
	and so on [2, 3]. One of the biggest challenges for video games is
	taking these global concepts and deconstructing them into a real
	gameplay experience. However, this is where we make a clear delineation
	between the creation of the experience and the facilitation of the
	experience, by endorsing the view of Overbeek et al. that design
	should be left to designers, For too long psychologists have led
	designers to make overly cognitive designs. We repeat: Design should
	be left to designers! [1]. To further clarify, lets take an example
	of one of the concepts listed above pace. We ve defined pace in the
	past as the rate at which players experience new challenges and
	novel game details.[2]. This is a very high-level definition, but
	spans across most, if not all, game genres. The way that a game designer
	will address pace is going to vary widely depending on the genre,
	their vision, and the experience they want to create. Lets look
	at two examples...},
  database = {ACM},
  owner = {Katia},
  references = {Let's make things Engaging

	User-centered design in games

	Designing for Fun: User-Testing Case Studies},
  timestamp = {2010.07.06}
}

@ARTICLE{E[69],
    inserir = {false},
  author = {J. R. Parker},
  title = {Games and animation: collaborations between the arts and computer
	science},
  year = {2004},
  abstract = {We explain the need for formal collaboration between students in the
	arts and computer science students, and argue that this should be
	encouraged at an early stage of their education. Specific courses
	that foster this sort of cooperation are described.},
  database = {IEEE},
  owner = {Katia},
  references = {Computing and the Humanities: Summary of a Roundtable Meeting

	Computer Science and the Arts: Some Multi-Disciplinary Teaching Collaborations
	ITiCSE 2003

	Computer Animation - Algorithms and Technoques

	Core Techniques and Algorithms in Game Programming

	How To Write and Use Instructional Objectives

	Goals, Objectives & Educational Outcomes},
  timestamp = {2010.07.06}
}

@ARTICLE{I[52],
    inserir = {true},
  author = {E. B. Passos and J. W. S. Sousa and E. W. G. Clua and A. Motenegro
	and L. Murta},
  title = {Smart composition of game objects using dependency injection},
  year = {2009},
  abstract = {Most game engines are based on inheritance of game objects and/or
	componentization of behaviors. While this approach enables clear
	visualization of the system architecture, good code reuse, and fast
	prototyping, it brings some issues, mostly related to the high dependency
	between game objects/components instances. This dependency often
	leads to static casts and null pointer references that are difficult
	to debug. In this article we propose the use of the dependency injection
	design pattern to safely initialize game objects and lessen the programmer's
	role in handling these issues both during the prototyping and production
	phases. Since these dependencies are attributes of game objects and
	the injection occurs only at the initialization pass, there is no
	performance penalty at the game loop.},
  database = {ACM},
  owner = {Katia},
  references = {A data-driven game object system

	The continuous world of dungeon siege

	Optimizing the development pipeline - Tools, technology, process

	Cryengine Sandbox 2 Manual

	Parallel processing between GPU and CPU: Concepts in a game architecture

	Unrealscript language reference

	Component based game development - A solution to escalating costs
	and expanding deadlines & quest

	Inversion of control containers and the dependency injection pattern

	Design patterns: elements of reusable object-oriented software

	A generic framework for game development

	Jgn: Java game networking

	Why and what of inversion of contro

	Jmephysics: Interface between jme and physics engines

	Jmonkey engine 1.0 online documentation

	Pococapsule/c++ ioc and dsm framework

	Component-based methodology and development framework for virtual
	and augmented reality systems

	Game object component system

	The next mainstream programming language: a game developer's perspective},
  timestamp = {2010.07.06}
}

@ARTICLE{E[139],
    inserir = {false},
  author = {B. Pellens and O. De Troyer and F. Kleinerman},
  title = {Visual generative behavior patterns to facilitate game development},
  year = {2009},
  abstract = {The worldwide videogame and interactive entertainment industry revenue
	is expected to reach over $50 billion in 2009 [2]. The majority of
	the effort in game development revolves around content creation and
	many resources are spent on it. Game companies construct or buy a
	set of content creation tools to aid the designers in their work.
	However, these tools only focus on the artwork, interfaces, game
	levels, and so on but none of them really focus on the content which
	is related to the gameplay or the game story, that is, the dynamic
	aspect of the game. Creating this story-related content, namely the
	scripts for the behavioral aspect in computer games, and translating
	this into appropriate program code is a very difficult task. For
	complex scripting, the developer has to resort to manually write
	code using scripting languages (i.e. Lua or Python). Furthermore,
	these languages are not tailored for games which also do not make
	them easier. Over the years, game developers have come up with many
	predefined (parts of) solutions to improve the development process
	[1][3]. In addition, in practice, people are also trying to avoid
	writing long scripts by using existing scripts and customizing them
	to fit their needs.},
  database = {ACM},
  owner = {Katia},
  references = {Patterns in Game Design (Game Development Series)

	DFC Intelligence 2008 World Wide Market Forecasts for Video Game and
	Interactive Entertainment Industry Report Series

	Usability Patterns in Games

	Design patterns: elements of reusable object-oriented software

	Generative Design Patterns

	Conceptual modeling of behavior in a virtual environment},
  timestamp = {2010.07.06}
}

@ARTICLE{I[53],
    inserir = {true},
  author = {M. Peltoniemi},
  title = {Life-cycle of the games industry: the specificities of creative industries},
  year = {2008},
  abstract = {This paper assesses the maturity of the games industry. The indicators
	of industry maturity posited in the industry life-cycle theory are
	discussed. The economic characteristics of creative, or cultural,
	industries are listed. Empirical work is done on the concentration
	of the international game development sector based on UK sales. The
	growth of the Finnish games industry is analyzed based on original
	statistics. The paper concludes that based on this empirical work
	the software side of the games industry is far from mature. Explanations
	for this finding are proposed based on the characteristics of the
	games industry in particular and the creative industries in general.},
  database = {ACM},
  owner = {Katia},
  references = {The Productivity Dilemma: Roadblock to Innovation in the Automobile
	Industry

	Innovation: Mapping the winds of creative destruction

	Patterns of Industrial Innovation

	Evolutionary trends in industry variables

	Technological discontinuities and dominant designs -- A cyclical model
	of technological change

	Creative Industries: Contracts between Arts and Commerce

	The interaction of design hierarchies and market concepts in technological
	evolution

	Hollywood Economics: How extreme uncertainty shapes the film industry

	Develop 100: The World's Most Successful Game Studios 2008 Edition

	Getting the measure of the electronic games industry: Developers and
	the management of innovation

	Architectural innovation -- The reconfiguration of existing product
	technologies and the failure of established firms

	The Cultural Industries

	Processing Fads and Fashions: An Organization-Set Analysis of Cultural
	Industry Systems

	Video games production networks': value capture, power relations and
	embeddedness

	The life-cycle of a competitive industry

	Balancing Act: Learning from Organizing Practices in Cultural Industries

	Critical push: Strategies for creating momentum in the motion picture
	industry

	Toward a systematic framework for research on dominant designs, technological
	innovations, and industrial change

	Cultural Industries and the Production of Culture

	Technological leapfrogging: Lessons from the US video game console
	industry

	Network effects and competition: An empirical analysis of the home
	video game industry

	Videogames as interactive experiential products and their manner of
	development

	Balancing the tensions between rationalization and creativity in the
	video games industry

	Techonological discontinuities and organizational environments

	A dynamic model of product and process innovation},
  timestamp = {2010.07.06}
}

@ARTICLE{I[54],
    inserir = {true},
  author = {H. Peng and H. Song and Z. Zhang and Y. Chen and X. Zou and L. Xiao},
  title = {A Study on User Experience of Online Games},
  year = {2009},
  abstract = {User experience issues in online games are studied with the theory
	and method of user-centered design and game playability as the breakthrough
	point, and then we can get the design guidelines about the user experience.
	According to the data and then we use factor analysis and correlation
	analysis to study the degree of correlation between the various indicators
	and player satisfaction. According to the results, a user experience
	design guidelines is proposed. This guidelines can be referenced
	by the designer for the game development and other IT products.},
  database = {IEEE},
  owner = {Katia},
  references = {Usability Engineering

	The Value of the User Experience in the 3G Network Optimization

	Player centred game design: Player modelling and adaptive digital
	games

	Human-Computer Interaction: User in the Design and Evaluation

	Talking about the elements of user experience: An interview with Jesse
	James Garrett

	Observing the User Experience-A Practitioner's Guide to User Research

	Human-Computer Interaction: User in the Design and Evaluation

	Evaluation of Urban Human Settlements Development in Northwest China

	Communicating Design

	More funology:games:Beyond usability in games

	Struetural Equations with Latent riables

	Aeeounting for user needs and motivations in game design},
  timestamp = {2010.07.06}
}

@ARTICLE{E[63],
    inserir = {false},
  author = {L. Petrak and O. Landsiedel and K. Wehrle},
  title = {Framework for evaluation of networked mobile games},
  year = {2005},
  abstract = {In this position paper we propose an evaluation framework for networked
	mobile gaming, consisting of user, group, communication, and environment
	models. Each of these components acts as a detailed representation
	of real-world characteristics. The combination of these models allows
	a realistic modeling of mobile gaming scenarios. The main contribution
	of our approaches is a new class of mobility models, which are purely
	based on strategies derived from real-world scenarios. This allows
	us to simulate the behavior and the movement of users and groups,
	and the communication aspects, and thus, it facilitates a creation
	of test beds for mobile applications. These simulated users interact,
	e.g. communicate, with each other and are able to move purposeful
	as well as to build groups spontaneously depending on the similarity
	of their goals or individual strategies. The paper presents an analytic
	discussion of the framework, its architecture, and the current state
	of its implementation.},
  database = {ACM},
  owner = {Katia},
  references = {The Influence Model: A Tractable Representation for the Dynamics of
	the Networked Markov Chains

	A Survey of Mobility Models for Ad Hoc Network Research

	The Impact of Group Mobility Models on the Optimization of Mobile
	Ad Hoc Networks Routing Protocols

	Mobile Ad Hoc Networks for the Military

	Evaluating mobility models within an ad hoc network

	A New Routing Protocol For The Reconfigurable Wireless Networks

	The Influence Mobility Model: A Novel Hierarchical Mobility Modeling
	Framework

	Towards realistic mobility models for mobile ad hoc networks

	Access and mobility of wireless PDA users

	Mobility Models in Ad Hoc Networks

	Design and Evaluation of an Individually Simulated Mobility Model
	in Wireless Ad Hoc Networks

	Load Reduction in Ad Hoc Networks Using Mobile Servers

	OMNeT++},
  timestamp = {2010.07.06}
}

@ARTICLE{I[55],
    inserir = {true},
  author = {F. Petrillo and M. Pimenta and F. Trindade and C. Dietrich},
  title = {What went wrong? A survey of problems in game development},
  year = {2009},
  abstract = {Despite its growth and profitability, many reports about game projects
	show that their production is not a simple task, but one beset by
	common problems and still distant from having a healthy and synergetic
	work process. The goal of this article is to survey the problems
	in the development process of electronic games, which are mainly
	collected from game postmortems, by exploring their similarities
	and differences to well-known problems in traditional information
	systems.},
  database = {ACM},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.06}
}

@ARTICLE{E[1],
    inserir = {false},
  author = {A. Pezeshk and M. Imaninejad},
  title = {A 3-D computer game controller: design and applications},
  year = {2004},
  abstract = {During the past few decades from the invention of first gaming systems,
	there have been only a few designs for 3-D game controllers, most
	of which were released in limited numbers due to their high cost.
	These controllers were as a result targeted towards virtual reality
	applications and have less been used for home gaming applications.
	Ultrasonic ranging [Logitech 1992] and image processing techniques
	[Marks 2000] are among the methods used to track the position of
	the handheld compartment (HC) of the controller. Both of these methods
	impose some requirements on the environment in which they are utilized
	in, to have the desired performance. Highly reflective surfaces or
	materials in the vicinity of the transceivers cause unwanted echoes
	in the received signal which degrades the performance of ultrasonic
	ranging methods. Image processing techniques require high processing
	power and some sort of distinction, usually in color, between the
	background and the HC. Additionally, both of these methods fall short
	in tracking fast motions of the controller, which further limits
	their application. In this work, a novel design for a 3-D computer
	game controller using Micro-Electro-Mechanical-Systems (MEMS) sensors
	is presented. The proposed design is virtually independent of the
	environment in which it is used and requires small processing power.},
  database = {ACM},
  owner = {Katia},
  references = {3D mouse and head tracker

	Medieval Chamber. Emerging Technologies

	Two-dimensional position detection system with MEMS accelerometers
	for mouse applications

	Game Physics},
  timestamp = {2010.07.06}
}

@ARTICLE{I[56],
    inserir = {true},
  author = {A. M. Phelps and D. M. Parks},
  title = {Fun and Games: Multi-Language Development},
  year = {2004},
  abstract = {Computer games (or electronic games if you encompass those games
	played on console-class hardware) comprise one of the fastest-growing
	application markets in the world. Within the development community
	that creates these entertaining marvels, multi-language development
	is becoming more commonplace as games become more and more complex.
	Today, asking a development team to construct a database-enabled
	Web site with the requirement that it be written entirely in C++
	would earn scornful looks and rolled eyes, but not long ago the idea
	that multiple languages were needed to accomplish a given task was
	scoffed at.},
  database = {ACM},
  owner = {Katia},
  references = {Dirty Java: Using the Java Native Interface within Games

	Evaluating Java for Game Development. Department of Computer Science

	Postmortem of Nihilistic Software's Vampire: The Masquerade--Redemption

	Tricks of the Windows Game Programming Gurus

	Game Scripting Mastery

	Core Techniques and Algorithms in Game Programming

	Game scripting in Python

	Game Programming with Python

	A framework for rapid 3D level design using MAXScript TM code generation

	Java for Embedded Systems

	Performance Issues for Multi-language Java Applications

	MUPPETS: multi-user programming pedagogy for enhancing traditional
	study},
  timestamp = {2010.07.06}
}

@ARTICLE{E[125],
    inserir = {false},
  author = {F. Piller and C. Ihl and J. Fuller and C. Stotko},
  title = {Toolkits for Open Innovation The Case of Mobile Phone Games},
  year = {2004},
  abstract = {User toolkits enable consumers to develop customized product applications
	without having dedicated technical knowledge. Applied in the field
	of handheld computing, toolkits are a very powerful instrument to
	meet the growing demand for customized mobile applications. In this
	paper, the theoretical principles and functionalities of user interaction
	toolkits are translated into a technical software concept for mobile
	phone games. The presented toolkit is a new Internet based application
	allowing users to create a customized game on their desktop computer
	and to transfer it to handheld devices. In contrast to well known
	open source software development projects, no programming expertise
	is required. Thus, participation of innovative users is comparatively
	easy. In line with the open source concept, but as an extending feature
	to the toolkit approach, the presented solution is embedded in an
	online community. Thus, contributions by innovative users can be
	stored in a library leading to a continuously growing information
	pool of available components. Games and components can be passed
	on easily between customers, facilitating the adoption of other users'
	contributions as well as collaborative development between users.
	The community feature of the toolkit does not only provide the common
	toolset of online communities allowing for user-to-user communication,
	e.g. chats and bulletin boards, or text based contributions, e.g.
	recommendations, product evaluations and voting tools, but it also
	enables users to exchange and jointly develop actual product prototypes.
	In this regard, the presented 'toolkit for open innovation' is the
	foundation of a 'value web' in a unique manner: a value web in between
	consumers and users. The paper further derives economic benefits
	of the developed toolkit for mobile phone game creation theoretically
	and integrates them into a diversified business model. The toolkit
	as a distinct performance feature has the potential to establish
	a social environment for its most enthusiastic users and thereby
	to strengthen user relationships with the provider and increase overall
	business success.},
  database = {IEEE},
  owner = {Katia},
  references = {Dimensions of Consumer Expertise

	Economic Welfare and the Allocation of Resources For Invention

	Building Customer Relations over the Internet

	Open Source Software: Free Provision of Complex Public Goods

	A Componential Analysis of Cognitive Effort in Choice

	Open innovation: the new imperative for creating and profiting from
	technology

	Characterizing Customer Value for Product Customization

	Key Research Issues in User Interaction with Configuration Toolkits
	in a Mass Customization System

	Entrepreneurial Opportunities with Toolkits for User Innovation and
	Design

	How Communities Support Innovative Activities: An Exploration of Assistance
	and Sharing Among End-Users

	Working for free? Motivations for participating in open-source projects

	Motivation of software developers in open source projects: An internet-based
	survey of contributors to the Linux kernel

	Variety for Sale: Mass Customization or Mass Confusion

	Making Consumer Knowledge Available and Useful - The Case of the Computer
	Games

	Wanted: Programmers for Handheld Devices

	Moving Java into Mobile Phones

	Business Models and System Architectures of Virtual Communities: From
	Sociological Phenomenon to Peer-to-Peer Architectures

	Characteristics of Innovating Users in a Consumer Goods Field

	Agents that Reduce Work and Information Overload

	Measuring the Customer Experience in Online Environments: A Structural
	Modeling Approach

	Mass Customization

	The Participatory Electronic Product Catalog: Supporting Customer
	Collaboration in E-Commerce Applications

	Mass Customization or Mass Confusion

	Business Models for Electronic Markets

	Economics of product development by users: the impact of "sticky"
	local information

	User Toolkits for Innovation

	Shifting Innovation to Users via Toolkits},
  timestamp = {2010.07.06}
}

@ARTICLE{I[57],
    inserir = {true},
  author = {D. Pinelle and N. Wong and T. Stach},
  title = {Heuristic Evaluation for Games: Usability Principles for Video Game
	Design},
  year = {2008},
  abstract = {Most video games require constant interaction, so game designers must
	pay careful attention to usability issues. However, there are few
	formal methods for evaluating the usability of game interfaces. In
	this paper, we introduce a new set of heuristics that can be used
	to carry out usability inspections of video games. The heuristics
	were developed to help identify usability problems in both early
	and functional game prototypes. We developed the heuristics by analyzing
	PC game reviews from a popular gaming website, and the review set
	covered 108 different games and included 18 from each of 6 major
	game genres. We analyzed the reviews and identified twelve common
	classes of usability problems seen in games. We developed ten usability
	heuristics based on the problem categories, and they describe how
	common game usability problems can be avoided. A preliminary evaluation
	of the heuristics suggests that they help identify game-specific
	usability problems that can easily be overlooked otherwise.},
  database = {ACM},
  owner = {Katia},
  references = {Task analysis and training design

	Video game values: Human-computer interaction and games

	Walkthroughs: Efficient collaborative testing

	The pluralistic usability walkthrough: coordinated empathies

	Eds. John Wiley& Sons

	An Interpreted Demonstration of Computer Game Design

	Sale must end: Should discount methods be cleared off HCI's shelves?

	Review of Druuna: Morbus Gravis

	Learning from Games: HCI Design Innovations in Entertainment Software

	A Comparison of Heuristic Evaluation and Usability Testing: The Efficacy
	of a Domain-Specific Heuristic Checklist

	Essential Facts about the Computer and Video Game Industry 2007

	Heuristics and Usability Guidelines for the Creation and Evaluation
	of Fun in Video Games

	Game Design Workshop: Designing, Prototyping, and Playtesting Games

	Review of Rugby 2004

	User interface evaluation in the real world: a comparison of four
	techniques

	Effective Affective Communication in Virtual Environments

	Marrying HCI/Usability and computer games: a preliminary look

	Comparison of empirical testing and walkthrough methods in user interface
	evaluation

	Testing a walkthrough methodology for theory-based design of walk-up-and-use
	interfaces

	Heuristics for designing enjoyable user interfaces: Lessons from computer
	games

	Human Factors in Computing Systems

	Review of Eragon

	Review of Mage Knight Apocalypse

	Enhancing the Explanatory Power of Usability Heuristics

	Usability Inspection Methods

	How to Conduct a Heuristic Evaluation

	Severity Ratings for Usability Problems

	Review of Vietcong 2

	Review of Pax Romana

	Cognitive walkthroughs: a method for theory-based evaluation of user
	interfaces

	Analysis and training in information technology tasks

	Review of Paradise Cracked

	Review of Total Extreme Wrestling 2004

	Review of DMZ: North Korea

	Review of Genesis Rising: The Universal Crusade

	Review of Secrets of the Ark: A Broken Sword Game

	Review of Soldner: Secret Wars},
  timestamp = {2010.07.06}
}

@ARTICLE{I[58],
    inserir = {true},
  author = {D. Pinelle and N. Wong and T. Stach},
  title = {Using genres to customize usability evaluations of video games},
  year = {2008},
  abstract = {Video games are varied, with vastly different visual layouts and interaction
	styles; however, most games that share a common genre still have
	many user interface similarities. These similarities suggest that
	genres can be used as a conceptual framework for examining design
	issues in video games, and for developing a deeper understanding
	of how the design process can be specialized for specific types of
	games. In this paper, we consider how genre relates to one aspect
	of design---the usability of games, which deals with players' ability
	to learn, control, and understand a game interface. We report results
	from a study where we coded usability problems in reviews of 108
	commercial video games. The review set included 18 games from each
	of six major game genres. We statistically analyzed the problems
	from each genre, and found significant differences between many of
	the genres. We present usability profiles for each genre based on
	the problem distributions that we found. The profiles describe both
	common and infrequent problems in each genre and provide details
	on how they commonly occur in games. The profiles can be used to
	specialize usability evaluations by helping designers focus on common
	problems seen in games from each genre.},
  database = {ACM},
  owner = {Katia},
  references = {Task analysis and training design

	Interface-Walkthroughs: Efficient Collaborative Testing

	An interpreted demonstration of computer game design

	Using heuristics to evaluate the playability of games

	Learning from Games: HCI Design Innovations in Entertainment Software

	Essential Facts about the Computer and Video Game Industry 2007

	Heuristics and Usability Guidelines for the Creation and Evaluation
	of Fun in Video Games

	Game Design Workshop: Designing, Prototyping, and Playtesting Games

	Review: Rugby 2004

	Review: Emergency 3

	Review: Terrawars: New York Invasion

	Computer game genres

	Review: Made Man

	Review: TMNT

	Enhancing the explanatory power of usability heuristics

	Usability inspection methods

	Review: Traitor's Gate 2

	Review: Pax Romana, http://www.gamespot.com/pc/strategy/paxromana/review.html.

	Cognitive walkthroughs: a method for theory-based evaluation of user
	interfaces

	Heuristic evaluation for games: usability principles for video game
	design

	Evaluating usability of human-computer interfaces: a practical method

	Designing the Experience of Interactive Play

	Analysis and training in information technology tasks

	Review: Secrets of the Ark: A Broken Sword Game

	Review: Barrow Hill: Curse of the Ancient Circle

	Review: UFO: Aftershock

	Review: Total Extreme Wrestling 2004

	Review: Valhalla Chronicles

	Some preliminary investigation about the organization of user interface
	design guidelines

	Review: Silverfall

	Review: Psychotoxic},
  timestamp = {2010.07.06}
}

@ARTICLE{I[59],
    inserir = {true},
  author = {P. Piselli and M. Claypool and J. Doyle},
  title = {Relating cognitive models of computer games to user evaluations of
	entertainment},
  year = {2009},
  abstract = {As the interactive entertainment industry matures, a better understanding
	of what makes software entertaining is needed. A natural starting
	point is the application of traditional Human-Computer Interaction
	(HCI) tools to interactive entertainment software. HCI tools include
	cognitive models that researchers have used to model users' thought
	processes and evaluate interface design. This paper users a simple
	cognitive model to investigate the relationship between the complexity
	of an interaction and the entertainment experienced by the user.
	We design a simple computer game, create a normative model for how
	a user plays this game, and build several variations of this game
	such that normative models of these variants differed across two
	factors: pace and complexity. User studies conducted on these variations
	allow comparison with these factors to user performance and self-reported
	user enjoyment. Users ingame enjoyment was found to be related to
	both the subject's performance and the game complexity.},
  database = {ACM},
  owner = {Katia},
  references = {Modeling the Inverted-U Effect in ACT-R

	Fun in Slots

	ACT-R/PM and menu selection: Applying a Cognitive Architecture to
	HCI

	A Look at Behaviourism and Perceptual Control Theory in Interface
	Design

	The pleasure principle: immersion

	Computational Complexity of Games and Puzzles

	Cognitive Modeling and Human-Computer Interaction

	The Role of Interest in Learning from Scientific Text and Illustrations:
	On the Distinction between Emotional Interest and Cognitive Interest

	On the Rate of Gain of Information

	Using GOMS for user interface design and evaluation: which technique?

	Browser-Soar: a computational model of a highly interactive task

	Communication and Persuasion: Central and Peripheral Routes to Attitude
	Change

	A Perception/Action Substrate for Cognitive Modeling in HCI

	Narrative event adaptation in virtual environments

	Explaining the enjoyment of playing video games: the role of competition

	Enjoyment: at the Heart of Media Entertainment

	The Relation of Strength of Stimulus to Rapidity of Habit-Formation},
  timestamp = {2010.07.06}
}

@ARTICLE{E[2],
    inserir = {false},
  author = {A. Ploss and F. Glinka and S. Gorlatch},
  title = {A Case Study on Using RTF for Developing Multi-player Online Games},
  year = {2009},
  abstract = {Real-Time Online Interactive Applications (ROIA) include a broad spectrum
	of online computer games, as well as challenging distributed e-learning
	applications, like virtual classrooms and collaborative environments.
	Development of ROIA poses several complex tasks that currently are
	addressed at a low level of abstraction. In our previous work, we
	presented the Real-Time Framework (RTF) - a novel middleware for
	a high-level development and execution of ROIA in single- and multi-server
	environments. This paper describes a case study in which a simple
	but representative online computer game is developed using RTF. We
	explain how RTF supports the design of data structures and their
	automatic serialization for network transmission, as well as determining
	and processing user actions when computing a new game state; the
	challenge is to provide the state updates to all players in real
	time at a very high frequency.},
  database = {SpringerLink},
  owner = {Katia},
  references = {Core Techniques and Algorithms in Game Programming

	The edutain@grid Project

	Torque network library

	High-level Development of Multiserver Online Games

	RTF: A Real-Time Framework for Developing Scalable Multiplayer Online
	Games

	Enhancing Grids for Massively Multiplayer Online Games

	From a Single- to Multi-Server Online Game: A Quake 3 Case Study using
	RTF

	Real Time Game Loop Models for Single-Player Computer Games},
  timestamp = {2010.07.07}
}

@ARTICLE{E[8],
    inserir = {false},
  author = {J. van de Pol and M. Weber},
  title = {A Multi-Core Solver for Parity Games},
  year = {2008},
  abstract = {We describe a parallel algorithm for solving parity games, with applications
	in, e.g., modal u-calculus model checking with arbitrary alternations,
	and (branching) bisimulation checking. The algorithm is based on
	Jurdzinski's Small Progress Measures. Actually, this is a class of
	algorithms, depending on a selection heuristics. Our algorithm operates
	lock-free, and mostly wait-free (except for infrequent termination
	detection), and thus allows maximum parallelism. Additionally, we
	conserve memory by avoiding storage of predecessor edges for the
	parity graph through strictly forward-looking heuristics. We evaluate
	our multi-core implementation's behaviour on parity games obtained
	from u-calculus model checking problems for a set of communication
	protocols, randomly generated problem instances, and parametric problem
	instances from the literature.},
  database = {ScienceDirect},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.07}
}

@ARTICLE{E[108],
    inserir = {false},
  author = {R. Prodan and V. Nae},
  title = {Prediction-based real-time resource provisioning for massively multiplayer
	online games},
  year = {2009},
  abstract = {Massively Multiplayer Online Games (MMOGs) are a class of computationally
	intensive client server applications with severe real-time Quality
	of Service (QoS) requirements, such as the number of updates per
	second each client needs to receive from the servers for a fluent
	and realistic experience. To guarantee the QoS requirements, game
	providers currently over-provision a large amount of their resources,
	which makes the overall efficiency of provisioning and utilization
	of resources rather low and prohibits any but the largest providers
	from joining the market. To address this deficiency, we propose a
	new prediction-based method for dynamic resource provisioning and
	scaling of MMOGs in distributed Grid environments. Firstly, a load
	prediction service anticipates the future game world entity distribution
	from historical trace data using a fast and flexible neural network-based
	method. On top of it, we developed generic analytical game load models
	used to foresee future hot-spots that congest the game servers and
	make the overall environment fragmented and unplayable. Finally,
	a resource allocation service performs dynamic load distribution,
	balancing, and migration of entities that keep the game servers reasonably
	loaded such that the real-time QoS requirements are maintained. Experimental
	results based on a realistic simulation environment demonstrate the
	advantages of our prediction service compared to other conventional
	methods, especially due to its ability to adapt to different user
	load patterns, and a reduction of the average over-allocation from
	250% (in the case of static over-provisioning) to around 25% using
	our dynamic provisioning method.},
  database = {ScienceDirect},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.07}
}

@ARTICLE{E[56],
    inserir = {false},
  author = {G. F. Puga and B. Díaz-Agudo and P. González-Calero},
  title = {Experience-based design of behaviors in videogames},
  year = {2008},
  abstract = {Artificial intelligence in games is usually used for creating player s
	opponents. Manual edition of intelligent behaviors for Non-Player
	Characters (NPC) of games is a cumbersome task that needs experienced
	designers. Amongst other activities, they design new behaviors in
	terms of perception and actuation over the environment. Behaviors
	typically use recurring patterns, so that experience and reuse are
	crucial aspects for behavior design. In this paper we present a behavior
	editor (eCo) using Case Based Reasoning to retrieve and reuse stored
	behaviors represented as hierarchical state machines. In this paper
	we focus on the application of different types of similarity assessment
	to retrieve the best behavior to reuse. eCo is configurable for different
	domains. We present our experience within a soccer simulation environment
	(SoccerBots) to design the behaviors of the automatic soccer players.},
  database = {SpringerLink},
  owner = {Katia},
  references = {Machine learning and games

	Semiautomatic edition of behaviours in videogames

	Hierarchical finite state machines with multiple concurrency models

	AI Game Development - Synthetic Creatures with Learning and Reactive
	Behaviors

	Finite state machines (fsm)

	Putting ai in entertainment: An ai authoring tool for simulation and
	games

	RoboCup: The robot world cup initiative

	Introduction to Information Retrieval

	Similarity measures for structured representations

	The string-to-string correction problem

	Measuring the similarity of labeled graphs

	A method of similarity metrics for structured representations

	Javy: Virtual Environment for Case-Based Teaching of Java Virtual
	Machine},
  timestamp = {2010.07.07}
}

@ARTICLE{E[106],
    inserir = {false},
  author = {H. Qin and P. P. Rau and G. Salvendy},
  title = {Player Immersion in the Computer Game Narrative},
  year = {2007},
  abstract = {The main characteristics of the computer game narrative are interactive
	and nonlinear, so this study proposes a questionnaire aim at studying
	player immersion in the computer game narrative. To evaluate the
	questionnaire, a survey was conducted on the Internet. After factor
	analysis and reliability test, an instrument for measuring player
	immersion were obtained. This instrument not only can be applied
	to the computer game narrative, it also ca be used to measure user
	experience in story-oriented virtual reality.},
  database = {SpringerLink},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.07}
}

@ARTICLE{E[60],
    inserir = {false},
  author = {A. Quilliot and F. Bendali and J. Mailfert},
  title = {Extended cooperative networks games},
  year = {2009},
  abstract = {We present here a pricing model which is an extension of the Cooperative
	Game concept and which includes a notion of Price-Dependent Demand.
	We present some existence results as well as some algorithms, and
	conclude by discussing a specific problem related to Network Pricing.},
  database = {ScienceDirect},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.07}
}

@ARTICLE{E[40],
    inserir = {false},
  author = {R. Raisamo and S. Patomaki and M. Hasu and V. Pasto},
  title = {Design and evaluation of a tactile memory game for visually impaired
	children},
  year = {2007},
  abstract = {Visually impaired people have a lack of proper user interfaces to
	allow them to easily make use of modern technology. This problem
	may be solved with multimodal user interfaces that should be designed
	taking into account the type and degree of disability. The purpose
	of the study presented in this article was to create usable games
	for visually impaired children making use of low-cost vibro-tactile
	devices in multimodal applications. A tactile memory game using multimodal
	navigation support with high-contrast visual feedback and audio cues
	was implemented. The game was designed to be played with a tactile
	gamepad. Different vibrations were to be remembered instead of sounds
	or embossed pictures that are common in memory games for blind children.
	The usability and playability of the game was tested with a group
	of seven 12 13-year-old visually impaired children. The results showed
	that the game design was successful and a tactile gamepad was usable.
	The game got a positive response from the focus group.},
  database = {ScienceDirect},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.07}
}

@ARTICLE{I[60],
    inserir = {true},
  author = {E. M. Reyno and J. Á C. Cubel},
  title = {Automatic prototyping in model-driven game development},
  year = {2009},
  abstract = {Model-driven game development (MDGD) is an emerging paradigm where
	models become first-order elements in game development, maintenance,
	and evolution. In this article, we present a first approach to 2D
	platform game prototyping automatization through the use of model-driven
	engineering (MDE). Platform-independent models (PIM) define the structure
	and the behavior of the games and a platform-specific model (PSM)
	describes the game control mapping. Automatic MOFscript transformations
	from these models generate the software prototype code in C++. As
	an example, Bubble Bobble has been prototyped in a few hours following
	the MDGD approach. The resulting code generation represents 93&percnt;
	of the game prototype.},
  database = {ACM},
  owner = {Katia},
  references = {Game Development: Harder Than You Think

	Formal abstract design tools

	Component-based game development -- A solution to escalating costs
	and expanding deadlines & quest

	Game Design Workshop: Designing, Prototyping, and Playtesting Games

	Using domain-specific modeling towards computer games development
	industrialization

	The paper chase: Saving money via paper prototyping

	Integrating authoring tools into model-driven development of interactive
	multimedia applications

	Rules of Play: Game Design Fundamentals

	GDC: Spore: Preproduction through prototyping},
  timestamp = {2010.07.06}
}

@ARTICLE{I[61],
    inserir = {true},
  author = {A. El Rhalibi and M. Merabti and Y. Shen},
  title = {Improving Game Processing in Multithreading and Multiprocessor Architecture},
  year = {2006},
  abstract = {This paper explores the idea that future game consoles and computers
	may no longer be single processor units, but instead symmetrical
	multiprocessor units. If this were to occur games would need to be
	programmed with concurrency in mind so that they could take advantage
	of the additional processing units. We explore past research and
	works in the field of parallel computing to find principles applicable
	to computer game programming. Concepts such as the Flynns classification,
	task, task-dependency graphs, dependency analysis, and Bernsteins
	conditions to concurrency are applied to computer game programming
	to develop a new model for computer games that is meant to replace
	the standard sequential game loop.},
  database = {SpringerLink},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.07}
}

@ARTICLE{E[118],
    inserir = {false},
  author = {J. Robertson and J. Good},
  title = {Story creation in virtual game worlds},
  year = {2005},
  abstract = {Allowing young people to create computer games they will ultimately
	want to play not only offers key educational benefits but builds
	self-esteem and teamwork skills.},
  database = {ACM},
  owner = {Katia},
  references = {Supporting children's collaborative authoring: Practicing written
	literacy while composing oral texts

	Moose crossing: construction, community, and learning in a networked
	virtual world for kids

	Actual Minds

	No magic bullet: 3D video games in education

	What Video Games Have to Teach Us About Learning and Literacy

	Children's contributions to new technology: the design of AdventureAuthor

	Learning design by making games: Children's development of design
	strategies in the creation of a complex computational artifact

	Electronic play worlds: Gender differences in children's construction
	of video games

	Report on the educational use of computer games

	Storymakers Pilot Project Report---Pictures of the Present, Visions
	for the Future

	Cognition, Computers and Creative Writing},
  timestamp = {2010.07.06}
}

@ARTICLE{I[62],
    inserir = {true},
  author = {T. Roden and I. Parberry},
  title = {Designing a narrative-based audio only 3D game engine},
  year = {2005},
  abstract = {Immersing players in believable and engaging virtual environments
	is a common goal for many interactive computer games. While PC-based
	audio only games set in virtual worlds have traditionally been developed
	for blind players, new technology will soon create a market for audio
	only games aimed at a mass audience. We propose a framework for authoring
	interactive narrative-based audio only adventure games set in 3D
	virtual environments. Our work builds on several years of research
	into audio only applications for sight impaired users, augmented
	reality systems and human-computer interaction studies. We argue
	that a simple user interface enhances both immersion and entertainment
	value, making audio only games practical for mobile computing. Novel
	features of our system include real-time gameplay and support for
	multiple players. We also describe a software architecture for creating
	audio only games, the current implementation of which uses low-cost
	existing PC-based hardware and software.},
  database = {ACM},
  owner = {Katia},
  references = {Micro-narratives in Sound Design: Context, Character, and Caricature
	in Waveform Manipulation

	Dynamic Variables and Audio Programming

	A 3D-Auditory Environment for Hierarchical Navigation in Non-visual
	Interaction

	Sleuth: An Audio Experience

	There and Everywhere: The Effects of Multichannel Audio on Presence

	A flexible 3d sound system for interactive applications

	Designing an Auditory W-LAN based Game

	The Business of Mobile Games

	Guided by Voices: An Audio Augmented Reality System

	Audio Space Invaders

	Interacting with Sound: An Interaction Paradigm for Virtual Auditory
	Worlds

	AudioBattleship: blind learners collaboration through sound

	Identifying Where You Are in a Room: Sensitivity to Room Acoustics

	Audio Games: Fun For All? All For Fun?},
  timestamp = {2010.07.06}
}

@ARTICLE{I[63],
    inserir = {true},
  author = {T. E. Roden and I. Parberry and D. Ducrest},
  title = {Toward mobile entertainment: A paradigm for narrative-based audio
	only games},
  year = {2007},
  abstract = {The widespread use of sophisticated mobile computing devices has set
	the stage for a renaissance in audio only entertainment. Traditional
	visual games are already used widely in cellular phones and similar
	devices. A significant limitation is the small display size. In contrast,
	audio only games on suitable mobile hardware need not degrade due
	to the smaller form factor. This makes audio only games an attractive
	alternative to visual games. We describe a framework for authoring
	interactive narrative-based audio only games set in 3D virtual environments.
	Despite the novelty in audio only gaming, our approach builds on
	a foundation of several years of research into audio only applications
	for sight impaired users, augmented reality systems and human computer
	interaction studies. In comparison to attempts to provide a realistic
	user interface, we argue a simple interface enhances both immersion
	and entertainment value, serendipitously making audio only games
	practical for mobile computing. Novel features of our system include
	real-time gameplay and multi-player support. We also describe our
	software architecture, the current implementation of which uses low-cost
	existing PC-based hardware and software. In addition, we describe
	our first game, Dragon s Roar.},
  database = {ScienceDirect},
  owner = {Katia},
  references = {Diesel Power FX Player for Windows Mobile Platforms

	Playing by ear: Creating blind-accessible games

	Micro-narratives in sound design: Context, character, and caricature
	in waveform manipulation

	EA Sells a Million The Sims 2 Games on Mobile in Europe

	Dynamic variables and audio programming

	EAX 5.0 Programmers Guide

	A 3D-auditory environment for hierarchical navigation in non-visual
	interaction

	Entertainment Computing Research Group

	Sleuth: An audio experience

	Hear, there and everywhere: The effects of multichannel audio on presence

	Audio games: New perspectives on game audio

	A flexible 3D sound system for interactive applications

	Designing an auditory W-LAN based game

	The business of mobile games

	ARM9 Linux Gains 3D Audio

	Guided by voices: An audio augmented reality system

	Audio space invaders

	Multimedia Framework for Symbian OS

	OpenAL

	Interacting with sound: An interaction paradigm for virtual auditory
	worlds

	Playing audio-only games: A compendium of interacting with virtual,
	auditory worlds

	Audio battleship: Blind learners collaboration through sound

	Identifying where you are in a room: Sensitivity to room acoustics

	Mobile Media API 1.1 specification

	Audio Games: Fun for all? All for fun?

	Mobile Games Poised for Take-Off

	Investigating auditory direct manipulation: Sonifying the towers of
	Hanoi

	Voice Extensible Markup Language (VoiceXML) 2.1},
  timestamp = {2010.07.07}
}

@ARTICLE{I[64],
    inserir = {true},
  author = {R. B. Rookhuiszen and M. Theune},
  title = {Playful vs. serious instruction giving in a 3D game environment},
  year = {2009},
  abstract = {In this paper we introduce two NLG systems that we developed for the
	GIVE challenge, which was aimed at the evaluation of natural language
	generation (NLG) systems. The Challenge involved automatically generating
	instructions for users to carry out a task in a 3D game environment.
	One of our systems focused on generating optimally helpful serious
	instructions while the other focused on entertainment, providing
	more playful instructions. We used the data gathered in the Challenge
	 both subjective user ratings and objective task performance data
	 to compare the efficiency and entertainment value of both systems.
	We found a clear difference in efficiency, but were unable to prove
	that one system was more entertaining than the other. This could
	be explained by the fact that the set-up and evaluation methods of
	the GIVE Challenge were not aimed at measuring entertainment. Based
	on our experiences, we give some suggestions for the set-up of future
	installments of the Challenge.},
  database = {ScienceDirect},
  owner = {Katia},
  references = {An alignment-capable microplanner for natural language generation

	Report on the first NLG challenge on Generating Instructions in Virtual
	Environments (GIVE)

	Narrative prose generation

	The GIVE-1 Austin system

	A model for human readable instruction generation using level-based
	discourse planning and dynamic inference of attributes

	Syntax and Semantics 3: Speech Acts

	Learning lexical alignment policies for generating referring expressions
	for spoken dialogue systems

	The software architecture for the first challenge on Generating Instructions
	in Virtual Environments

	Albert in Africa: online role-playing and lessons from improvisational
	theatre

	User-centered design in games

	It is always a lot of fun!: exploring dimensions of digital game experience
	using focus group methodology

	Building Natural Language Generation Systems

	Summary of the GIVE Meeting at ENLG 2009

	Landmarks in navigation instructions for a virtual environment

	Gameflow: a model for evaluating player enjoyment in games

	NL generation for virtual humans in a complex social environment

	Cross-format analysis of the gaming experience in multi-player role-playing
	games},
  timestamp = {2010.07.07}
}

@ARTICLE{E[137],
    inserir = {false},
  author = {W. A. Wan Rozali and X. H. A. Hamid and M. I. M. Sabri},
  title = {Video games: Issues and problems},
  year = {2007},
  abstract = {Video games have become part of young adult life since 30 years ago.
	It affects their daily activities and the way they think and behave.
	Study and intensive review on the issues and problems of the influence
	of video games are important to ensure the games have some kind of
	limitation and boundary. There are two main issues have been discussed
	which are social and technological design. In addition to that, the
	relationship between video games and education, current industry
	market, and technology has also been considered. There are three
	main people can control the problems, they are parent, government
	and video games developer.},
  database = {IEEE},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.06}
}

@ARTICLE{I[65],
    inserir = {true},
  author = {G. Russell and A. F. Donaldson and P. Sheppard},
  title = {Tackling online game development problems with a novel network scripting
	language},
  year = {2008},
  abstract = {We describe a novel scripting language for writing bandwidth-efficient
	online game logic. The language facilitates the development of deterministic,
	concurrent, distributed games, with assurances of consistency maintenance
	between clients and server. Our approach allows for increased simulation
	accuracy when compared to dead reckoning, and removes the need to
	write code to repair distributed state inconsistencies, or to explicitly
	transfer data over a network.},
  database = {ACM},
  owner = {Katia},
  references = {Accuracy in dead-reckoning based distributed multi-player games

	Concurrent programming in ERLANG

	Performance and reliability analysis of relevance filtering for scalable
	distributed interactive simulation

	Colyseus: a distributed architecture for online multiplayer games

	Comparing interest management algorithms for massively multiplayer
	games

	An efficient synchronization mechanism for mirrored game architectures

	Low latency and cheat-proof event ordering for peer-to-peer games

	A fair message exchange framework for distributed multi-player games

	Improving network efficiency in real-time groupware with general message
	compression

	NPSNET: A network software architecture for large-scale virtual environment

	Local-lag and timewarp: providing consistency for replicated continuous
	applications

	Pattern-Oriented Software Architecture: Patterns for Concurrent and
	Networked Objects

	Algorithms and Networking for Computer},
  timestamp = {2010.07.06}
}

@ARTICLE{I[67],
    inserir = {true},
  author = {W. Scacchi},
  title = {Free and open source development practices in the game community},
  year = {2004},
  abstract = {The free and open source software (FOSS) approach lets community of
	like-minded participants develop software systems and related artifacts
	that are shared freely instead of offered as closed-source commercial
	products. Free (as in freedom) software and open source are closely
	related but slightly different approaches and licensing schemes for
	developing publicly shared software. FOSS development communities
	don't seem to adopt modern software engineering processes. FOSS communities
	develop software that's extremely valuable, generally reliable, globally
	distributed, made available for acquisition at little or no cost,
	and readily used in its community. Free and open source software
	development practices gives rise to new view of how complex software
	systems can be constructed, deployed, and evolved. They rely on lean
	electronic communication media, virtual project management, and version
	management mechanisms to coordinate globally dispersed development
	efforts. These FOSS processes offer new directions for developing
	complex software systems. We look at the FOSS computer game community
	to provide examples of common development processes and practices.},
  database = {IEEE},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.06}
}

@ARTICLE{I[68],
    inserir = {true},
  author = {R. Schaap and R. Bidarra},
  title = {Towards Emotional Characters in Computer Games},
  year = {2009},
  abstract = {This paper describes our research on integrating emotion aspects into
	characters of video games. Motivation for this is the significant
	absence of emotive expression in most characters of current games.
	In order to provide players with a more immersed game experience,
	it is essential that characters show compelling expressions, in particular,
	facial expressions. As a research methodology, we took several intense
	scenes from classic movies and evaluated what would be necessary
	to allow a virtual character to reenact the scenes inside a game.
	The recreated scenes should convey the same emotions as the original
	scenes. Our approach represents the internal state of a video game
	characters by using a PAD-based model, as well as modeling the impact
	on it of many relevant environment aspects. Representing this internal
	state also involves blending together animations to create lively
	facial expressions. We conclude that the resulting model is good
	enough to allow scenes to be recreated with an emotional load similar
	to the original scenes. The approach is also successful inimproving
	the consistency of the mood of the characters based on their personality.},
  database = {SpringerLink},
  owner = {Katia},
  references = {Talking heads: Facial animation in the getaway

	The three dimensions of emotional reaction

	The big-five trait taxonomy: History, measurement, and theoretical
	perspectives

	ALMA: A Layered Model of Affect

	The PAD model as basis for emotion of video game characters},
  timestamp = {2010.07.07}
}

@ARTICLE{I[69],
    inserir = {true},
  author = {T. Sellar},
  title = {User Experience in Interactive Computer Game Development},
  year = {2004},
  abstract = {This paper outlines PhD research into user experience in interactive
	computer game development. The study will investigate how usability
	methods and approaches can be adapted and extended to evaluate and
	improve the user experience of gaming systems. The research will
	focus on exploring ways to evaluate fun and engaging user experiences,
	and on identifying how to provide useful, valid, timely, cost-efficient
	feedback on user experience to game development teams. A range of
	research methods is proposed including case studies with industry
	stakeholders, contextual and lab-based user experience evaluations
	with gamers, and action research within a games company. Research
	findings will inform the development of a practical evaluation model
	and tools to support game experience design practices and product
	development.},
  database = {SpringerLink},
  owner = {Katia},
  references = {Historical Sales Figures

	User Experience in Interactive Computer Game Development 681

	Interactive Digital Software Association

	User-centred design in games

	An Interpreted Demonstration of Computer Game Design

	Why We Play Games: Four Keys to More Emotion in Player Experiences

	Ergonomic requirements for office work with visual display terminals
	(VDTs) Part 11: Guidance on usability

	Heuristics and Usability Guidelines for the Creation and Evaluation
	of Fun in Video Games

	Key barriers to fully engaging majority-market gamers

	Introduction to The New Usability

	Human-Computer Interaction

	Measuring Desirability: New methods for evaluating desirability in
	a usability lab setting

	Funology: Designing Enjoyment

	Funology: From Usability to Enjoyment

	Beyond Psychological Theory: Getting Data that Improve Games

	The Inherent Appeal of Physically Controlled Peripherals

	Effective Affective User Interface Design in Games

	Affect: Physiological Responses During Computer Use

	Affective Gaming

	Game On

	Head-mounted video recording: A methodology for studying naturalistic
	decision making

	Andrew Rollings and Ernest Adams on Game Design},
  timestamp = {2010.07.07}
}

@ARTICLE{E[76],
    inserir = {false},
  author = {T. Sko and H. J. Gardner},
  title = {Head Tracking in First-Person Games: Interaction Using a Web-Camera},
  year = {2009},
  abstract = {Recent advances in face-tracking technology have made it possible
	to recognize head movements using a commodity web-camera. This development
	has created exciting possibilities for enhancing player enjoyment
	during computer game play. In order to ascertain the real-world potential
	for head gestural input to First Person Shooter games, we have developed
	seven diverse interaction techniques and integrated these with a
	modern games engine. Evaluation of the techniques was carried out
	with four focus groups made up of expert games developers and experienced
	end-users. One of the techniques was further refined and subjected
	to a follow-up comparison test with promising results. A set of guidelines
	for the future development of head interaction techniques for computer
	games has been derived from the studies. All of the techniques have
	been built upon freely available software and open-sourced to encourage
	further research in this area.},
  database = {SpringerLink},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.07}
}

@ARTICLE{E[48],
    inserir = {false},
  author = {D. K. Smith},
  title = {Dynamic programming and board games: A survey},
  year = {2007},
  abstract = {In several of the earliest papers on dynamic programming (DP), reference
	was made to the possibility that the DP approach might be used to
	advise players on the optimal strategy for board games such as chess.
	Since these papers in the 1950s, there have been many attempts to
	develop such strategies, drawing on ideas from DP and other branches
	of mathematics. This paper presents a survey of those where a dynamic
	programming approach has been useful, or where such a formulation
	of the problem will allow further insight into the optimal mode of
	play.},
  database = {ScienceDirect},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.07}
}

@ARTICLE{E[85],
    inserir = {false},
  author = {S. Song and J. Lee},
  title = {Key factors of heuristic evaluation for game design: Towards massively
	multi-player online role-playing game},
  year = {2007},
  abstract = {The computer game industry has become the fastest growing field of
	the entertainment industry. However, only a very small number of
	computer game products overcome the costs of production and generate
	earnings. According to traditional marketing wisdom, customers preferences
	must be analyzed correctly to create successful products, and in
	the gaming industry, such information must be considered during the
	design process. This research aims to explore key factors of heuristic
	evaluation for game design. A review of literature pertaining to
	computer games and HCI was conducted along with an empirical research
	of a Massively Multi-player Online Role-playing Game (MMORPG). We
	identified 18 usability issues in MMORPG and presented a recommendation
	relevant to the issues. Empirical data were applied to a new heuristic
	evaluation framework. We determined the relationship between key
	factors and four game categories, such as game interface, game play,
	game narrative, and game mechanics. Moreover, the results presented
	54 key factors for a new heuristic evaluation framework for game
	design. The conclusion presents key implications of our research
	in a game design context, particularly related to early design processes.},
  database = {ScienceDirect},
  owner = {Katia},
  references = {CD-ROMs: The Giants Rule. Business Week

	Usability Testing and Research

	Using heuristics to evaluate the playability of games

	User-based evaluations

	A Practical Guide to Usability Testing

	Playability in action videogames: a qualitative design model

	Heuristics and usability guidelines for the creation and evaluation
	of fun in video games

	Beyond psychological theory: getting data that improve games

	Game design as a narrative architecture. In: Wardip-Fruin

	Here is the Online Role-Playing Game You Should Play

	What makes things fun to learn? A study of intrinsically motivating
	computer games

	An exploratory study of the critical design factors for MMO game design
	based on usability evaluation

	Thinking About Answers: The Application of Cognitive Processes to
	Survey Methodology

	The Think Aloud Method: A Practical Guide to Modeling Cognitive Processes

	Showdown in cyberspace: star wars vs. the sims

	Gender and age distribution},
  timestamp = {2010.07.07}
}

@ARTICLE{E[117],
    inserir = {false},
  author = {no authors: Spectral Lines},
  title = {Spectral Lines: Software Development: Game Over?},
  year = {2006},
  abstract = {Computer-game developers of the world, unite! A surprising legal victory
	against too much work for too little pay has come out of the US $10.5
	billion gaming industry.

	Software publishing is booming, so why are the people in it so unhappy
	with their game-writing jobs? Gaming software development is notorious
	for the long hours put in by the folks who grind out the code. And
	their employers have come to expect a level of commitment that includes
	long days and nights of voluntary service from their mostly young
	employees. So much so that some firms take this unpaid overtime for
	grantedeven building it into their planning and forecasting. But
	now the issue has escalated for all concerned, including the worlds
	biggest game developer, Electronic Arts Inc., of Redwood City, Calif...},
  database = {IEEE},
  owner = {Katia},
  references = {no references: Spectral Lines: Software Development: Game Over?},
  timestamp = {2010.07.06}
}

@ARTICLE{E[50],
    inserir = {false},
  author = {P. Spronck and I. Sprinkhuizen-Kuyper and E. Postma},
  title = {Enhancing the Performance of Dynamic Scripting in Computer Games},
  year = {2004},
  abstract = {Unsupervised online learning in commercial computer games allows computer-controlled
	opponents to adapt to the way the game is being played. As such it
	provides a mechanism to deal with weaknesses in the game AI and to
	respond to changes in human player tactics. In prior work we designed
	a novel technique called ldquodynamic scriptingrdquo that is able
	to create successful adaptive opponents. However, experimental evaluations
	indicated that, occasionally, the time needed for dynamic scripting
	to generate effective opponents becomes unacceptably long. We investigated
	two different countermeasures against these long adaptation times
	(which we call ldquooutliersrdquo), namely a better balance between
	rewards and penalties, and a history-fallback mechanism. Experimental
	results indicate that a combination of these two countermeasures
	is able to reduce the number of outliers significantly. We therefore
	conclude that the performance of dynamic scripting is enhanced by
	these counter-measures.},
  database = {SpringerLink},
  owner = {Katia},
  references = {The Evolution of Game AI

	A Gamut of Games

	The Illusion of Intelligence

	The Perils of AI Scripting

	How Not to Implement a Basic Scripting Language

	Varieties of Learning

	Game AI: The State of the Industry

	Online Coevolution for Action Games

	Anticipating Opponent Behaviour Using Sequential Prediction and Real-Time
	Fuzzy Rule Learning

	Online Adaptation of Game Opponent AI in Simulation and in Practice

	Artificial Intelligence: A Modern Approach

	Learning and Adaptation

	Evolutionary Algorithms in Theory and Practice

	Improving Opponent Intelligence Through Offline Evolutionary Learning},
  timestamp = {2010.07.07}
}

@ARTICLE{E[90],
    inserir = {false},
  author = {P. Stacey and A. Brown and J. Nandhakumar},
  title = {Making Sense of Stories: the development of a new mobile computer
	game},
  year = {2007},
  abstract = {This paper analyzes the retrospective stories of a four person team
	responsible for developing a new computer game for mobile phones.
	Our theorizing is based on an in-depth, two year, case study. The
	research contribution this paper makes is threefold. First, it outlines
	and discusses some of the analytical issues at stake in the adoption
	of a storytelling approach to understanding IS developments. Second,
	we show how individuals' work stories are tools by which they make
	sense of organizational events and read meaning into their working
	lives and relationships with others. Third, we illustrate the roles
	that individuals' work stories play in bolstering their self-esteem
	by attributing positive outcomes to the self and negative outcomes
	to external forces, and in their strategic presentation of the self
	to others. Finally we outline some implications for managing the
	mobile game development process},
  database = {IEEE},
  owner = {Katia},
  references = {Storytelling in organizations, facts, fictions, and fantasies

	Narrative, organizations and research

	Sensemaking in organizations

	Organizing and the process of sensemaking

	What constitutes a self-serving attributional bias? A rply to Bradley

	The justification of organizational performance

	The presentation of self in everyday life

	Impression management in organizations: Theory, measurement, practice

	Product development in Japanese TV game software: The case of an innovative
	game

	Virtual Communities as Platforms for Product Development - an interpretive
	case study of Customer Involvement in Online Game Development

	Managing Projects in a Games Factory: Temporality and Practices

	Drawing Emerging Business Models for the Mobile Music Industry

	Will Wireless Gaming Be a Winner?

	Collaborative and Constructive Multi-player Games

	The Making of a Monster: Creating Baldur's Gate

	The social construction of reality

	The struggle with sense

	Toward a general theory of strategic self-presentation

	Narrative analysis and organizational development

	Doomed to Failure: Narratives of Inevitability and Conspiracy in a
	Failed IS Project

	Attributions in the Board Room: Causal Reasoning in Corporate Annual
	Reports

	Self-serving biases in the attribution of causality: fact or fiction

	What constitutes a self-serving attributional bias? A reply to Bradley

	Narration as a human communication paradigm: the case of public moral
	argument

	Tales of the field: On writing ethnography

	The interpretation of cultures: selected essays

	Coming to terms with the field: understanding and doing organizational
	ethnography

	The sociological imagination

	Introduction: Entering the field of qualitative research

	Better stories, not better constructs, to generate better theory:
	a rejoinder to Eisenhardt

	Strategy retold: Towards a narrative view of strategic discourse

	Studies in ethnomethodology

	A sociology of the absurd

	Organizations and control

	On studying managerial elites

	A theory of cognitive dissonance

	The ego and its defenses

	Formative Contexts of Systems Design},
  timestamp = {2010.07.06}
}

@ARTICLE{I[71],
    inserir = {true},
  author = {P. Stacey and J. Nandhakumar},
  title = {Opening up to agile game development},
  year = {2008},
  abstract = {In fast-paced business environments like computer games, Agile would
	seem to be the appropriate style of software development. However,
	our study of three computer game studios revealed that game development
	does not deploy Agile methods as such, but rather it shares some
	of Agiles practices and values. We were intrigued by how agility
	was triggered in game development; triggers undocumented by proponents
	of Agile methods. This article distils our findings into guidelines
	for nurturing and enhancing agility in creative software organizations.
	Game development is both inspirational and unpredictable. A games
	features may never be fully known at the outset of a project, but
	emerge as the developers continually play-test it. This is because
	a commercial game must be fun, entertaining and compelling;10 qualities
	that are only really assessable when a game is compiled and played.
	Agile methods would suggest that game developers write a test script.
	This is perhaps more feasible when building commercial task-oriented
	software, but a computer game has an added aesthetic dimension to
	it; not just in terms of the look and feel, but the game-play too,
	i.e. the rules and level of difficulty of the game. In this respect,
	a game also needs to be tested intuitively by the developers; it
	may functionally run, but is it fun?},
  database = {ACM},
  owner = {Katia},
  references = {Is Internet-Speed Software Development Different?

	Embracing Change with Extreme Programming

	A field study of the software design process for large systems

	Peopleware: productive projects and teams

	Agile software development ecosystems

	Extreme programming and Agile software development methodologies

	Delivering agility through IT

	Qualitative Data Analysis

	Managing Projects in a Games Factory: Temporality and Practices

	Making a game of system design},
  timestamp = {2010.07.06}
}

@ARTICLE{I[70],
    inserir = {true},
  author = {P. Stacey and J. Nandhakumar},
  title = {Managing Projects in a Games Factory: Temporality and Practices},
  year = {2006},
  abstract = {The online gaming world is growing voraciously and so too is the wider
	market for computer games which now exceeds the annual global revenues
	of cinema. Even so, we have only a limited scholarly understanding
	of how games studios produce games. Games projects require particular
	attention because their context is unique. We aim to elucidate the
	games development process from a time perspective and suggest ways
	of managing it. We argue that a games project is characterised by
	a compound of temporal rhythms that emanate from the individual,
	team, company, industry, nation, inter-nation and marketplace levels.
	Project managers need to take account of these 'inner' and 'outer'
	temporal rhythms since they can affect development culture and project
	chronology.},
  database = {IEEE},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.06}
}

@ARTICLE{E[72],
    inserir = {false},
  author = {C. R. Strong and M. Mateas and D. Grossman},
  title = {Generative conversation tool for game writers},
  year = {2009},
  abstract = {Conversation is an important part of many games, whether it is there
	to provide information or entertainment. In the current state of
	commercial game development, almost all conversation is hand-authored.
	Further, different authoring approaches are used for conversations
	between non-player characters (typically linear scripting) versus
	conversations between a non-player character and a human player (typically
	dialogue trees). In this paper, we present a tool, designed in collaboration
	with Telltale Games, for creating cocktail party conversations in
	which characters engage in free-flowing conversations. From an authorial
	perspective, we start at the hand-authoring side of the spectrum
	and add system-level support for conversation generation -- our aim
	is to decrease the authorial burden of creating a conversation while
	remaining close to existing methods the company's designers are familiar
	with using.},
  database = {ACM},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.06}
}

@ARTICLE{E[113],
    inserir = {false},
  author = {Z. Su and W. Song and J. Li},
  title = {Research on a New Development Framework for Mobile Games},
  year = {2009},
  abstract = {A new development framework for mobile games is proposed. In this
	framework, pressure movement module, module of thread pool based
	on I/O completion port, and message module are explained in detail.
	The proposed framework can solve three main problems caused by traditional
	framework. Firstly, single server may exhaust their resources. Secondly,
	synchronization and exclusion of multi-thread can lead to huge system
	resource consumption. Finally, server can not manage thread resources
	flexibly. Experimental results show that the proposed framework is
	effective.},
  database = {IEEE},
  owner = {Katia},
  references = {Mobile games- challenges and opportunities

	Toward next-gen mobile AR games

	A framework with a peer fostering mechanism for mobile P2P game development

	WPAN Platform Design in Handset Integrating Cellular Network and Its
	Application to Mobile Games

	A software framework for online mobile games

	A service based framework for developing mobile, collaborative games},
  timestamp = {2010.07.06}
}

@ARTICLE{E[101],
    inserir = {false},
  author = {R. Suomela and E. Rasanen and A. Koivisto and J. Mattila},
  title = {Open-Source Game Development with the Multi-user Publishing Environment
	(MUPE) Application Platform},
  year = {2004},
  abstract = {The Multi-User Application Platform (MUPE) is a platform for rapid
	development of mobile multi-user context-aware applications. MUPE
	server implements a persistent user-authenticated service that can
	be customized into a game server. The game logic is written to the
	MUPE server and the end-users download the game User Interface (UI)
	to their terminals. This paper studies how MUPE can be used to create
	mobile multi-player games. This paper analyzes the important aspects
	of MUPE in game development and the different parts involved in developing
	games with MUPE. Two games made with MUPE are introduced and analyzed.
	The games presented in this paper and the MUPE system are available
	at the MUPE website http://www.mupe.net under the Nokia open source
	license version 1.0a.},
  database = {SpringerLink},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.07}
}

@ARTICLE{E[107],
    inserir = {false},
  author = {J. Sykes and M. Federoff},
  title = {Player-centred game design},
  year = {2006},
  abstract = {Videogames are not your typical software application. They are often
	designed to elicit a negative emotional response, such as frustration
	or fear, the antithesis of usability. However, this is not to suggest
	that HCI has little to offer the game design community. Indeed, the
	exact opposite appears to be true. A number of user-centred design
	techniques have evolved which can support each stage of the game
	design process, from concept through to post-production. However,
	there is currently no archive of appropriate techniques showing how
	they might be applied to videogame design. Given the differences
	in goals from these products to traditional software, this is clearly
	necessary. The purpose of this workshop is to identify those techniques
	appropriate to game design, and elicit practitioners' experience
	when applying such methodologies. The intended result is a prescriptive
	process which demonstrates how user-centred methodologies can best
	be applied to game design.},
  database = {ACM},
  owner = {Katia},
  references = {Playerocentred Game Design: Player Modelling and Adaptive Digital
	Games

	Gender inclusive game design: expanding the market

	Using the RITE Method to improve products: a definition and a case
	study

	Experiences of designing with children and teachers in the StoryStation
	project

	Andrew Rollings and Ernest Adams on Game Design

	Considering the user in video game design},
  timestamp = {2010.07.06}
}

@ARTICLE{E[105],
    inserir = {false},
  author = {J. L. G. Sánchez and N. P. Zea and F. L. Gutiérrez},
  title = {Playability: How to Identify the Player Experience in a Video Game},
  year = {2009},
  abstract = {Nowadays Video Games occupy a privileged position in the leisure and
	entertainment market, representing the fastest-growing industry globally.
	In this paper we will analyse how, in video game development, Usability
	alone is not sufficient to achieve the optimum Player Experience.
	We argue that the concept of Usability needs broadening and deepening,
	to embrace further attributes and properties that identify and describe
	the Player Experience. We present our proposed means of defining
	Playability, its attributes and properties and how associate them
	with the different elements of a video game.},
  database = {SpringerLink},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.07}
}

@ARTICLE{I[66],
    inserir = {true},
  author = {J. L. G. Sánchez and N. P. Zea and F. L. Gutiérrez},
  title = {From Usability to Playability: Introduction to Player-Centred Video
	Game Development Process},
  year = {2009},
  abstract = {While video games have traditionally been considered simple entertainment
	devices, nowadays they occupy a privileged position in the leisure
	and entertainment market, representing the fastest-growing industry
	globally. We regard the video game as a special type of interactive
	system whose principal aim is to provide the player with fun and
	entertainment. In this paper we will analyse how, in Video Games
	context, Usability alone is not sufficient to achieve the optimum
	Player Experience. It needs broadening and deepening, to embrace
	further attributes and properties that identify and describe the
	Player Experience. We present our proposed means of defining Playability.
	We also introduce the notion of Facets of Playability. Each facet
	will allow us to characterize the Playability easily, and associate
	them with the different elements of a video game. To guarantee the
	optimal Player Experience, Playability needs to be assessed throughout
	the entire video game development process, taking a Player-Centred
	Video Game Design approach.},
  database = {SpringerLink},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.07}
}

@ARTICLE{E[4],
    inserir = {false},
  author = {S. L. Tanimoto and T. Robison and S. B. Fan},
  title = {A game-building environment for research in collaborative design},
  year = {2009},
  abstract = {Collaborative design practices are evolving rapidly today as a result
	of improvements in telecommunications and human-computer interfaces.
	We present a suite of research tools that we have built in order
	to evaluate a particular methodology for design based on a theory
	of problem solving from the field of artificial intelligence. These
	tools are (a) a formal specification for a class of multimedia games,
	(b) a game-building tool called PRIME Designer, and (c) a game engine
	that brings games to life. The design of these tools addresses several
	issues: (1) support for a common language for the design process,
	deriving from state-space search, (2) visual interfaces for collaboration,
	(3) specifications for a class of games (called PRIME games) whose
	affordances represent a balance between simplicity and richness,
	(4) educating students to work in design teams that use advanced
	computational services, and (5) assessing the learning and contributions
	of each team member. We also report on a focus group study in which
	four undergraduate students used the tools. Our experience suggests
	that users without a computing background can learn how to employ
	state-space trees to organize the design process, and thereby gain
	facilities to coordinate their individual contributions to the design
	of a game.},
  database = {IEEE},
  owner = {Katia},
  references = {Formal abstract design tools

	Awareness and coordination in shared workspaces

	Meta-design: a manifesto for end-user development

	Game Making is the Game: Lessons Learned from Mockingbird

	Open Game Format

	MissionMaker

	Making Games: Developing Games Authoring Software for Educational
	and Creative Use: Non-Technical Summary

	Taking CSCW seriously

	The Sciences of the Artificial

	Work and the division of labor

	Enhancing state-space tree diagrams for collaborative problem solving

	A transparent interface to state-space search programs

	An experiment in automatic game design},
  timestamp = {2010.07.06}
}

@ARTICLE{E[134],
    inserir = {false},
  author = {G. Taran},
  title = {Using Games in Software Engineering Education to Teach Risk Management},
  year = {2007},
  abstract = {An innovative board game was developed at Carnegie Mellon University's
	Master in Software Engineering Program to teach risk management concepts.
	Piloted in two separate courses dealing with software project risk
	management, the goal of the game was to enhance practical learning
	and decision making through simulating a software development project.
	This activity was then compared to others used in the class, specifically
	lectures and case discussions, to assess its effectiveness in meeting
	learning objectives. The results clearly demonstrate the advantages
	of using a game method in teaching software engineering concepts.
	Findings will discuss how the game compares to other teaching activities
	in the classroom in terms of conveying relevant information, help
	in concept understanding and learning enjoyment.},
  database = {IEEE},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.06}
}

@ARTICLE{I[72],
    inserir = {true},
  author = {M. J. Taylor and D. Gresty and M. Basket},
  title = {Computer game-flow design},
  year = {2006},
  abstract = {Computer games are a rapidly growing segment of the entertainment
	industry. Design and development of modern computer games can be
	a complex activity involving many participants from a variety of
	disciplines. However, computer game design approaches typically appear
	to be less formalised than those used for other types of software
	systems. In this article we describe an approach to computer game-flow
	design intended for the design of individual game levels within a
	computer game and demonstrate its application in practice.},
  database = {ACM},
  owner = {Katia},
  references = {Object Oriented Systems Analysis and Design Using UML

	Game Developer's Guide to Design and Production

	Essential use cases and responsibility in object-oriented development

	The Unified Modeling Language user guide

	AI Techniques for Game Programming

	Electronic Arts

	Object-Oriented Game Development

	Design and implementation of computer games: a capstone course for
	undergraduate computer science education

	Design and simulation of interactive 3D computer games

	Tricks of the Windows Game Programming Gurus

	Developer's Guide to Computer Game Design

	Who Needs Software Engineering?

	A Petri net model for computer games analysis

	Writing the adventure game

	Data Structures for Games Programmers

	Game Architecture and Design with Cdrom

	Game Design Theory and Practice

	Software Engineering and Computer Games

	Designing interactivity in computer games: A UML Approach

	Game Scripting Mastery},
  timestamp = {2010.07.06}
}

@ARTICLE{E[74],
    inserir = {false},
  author = {J. Tenzer and P. Stevens},
  title = {GUIDE: Games with UML for interactive design exploration},
  year = {2007},
  abstract = {In this paper we present our design tool GUIDE, which allows the user
	to explore a design in UML interactively by playing a game. The game
	incorporates both the design model and a specification of what it
	means for the design to be correct. The central idea of this approach
	is that the designer can increment the game during a play and gradually
	add more detail to it. Specification and design are refined by repeated
	plays of the game. The designer stops playing when design and specification
	are detailed enough for his purpose and match each other. The interactive
	game approach helps to cope with incompleteness and informal definition
	of UML models, which make strictly formal verification techniques
	difficult. The designer may resolve these problems when they arise
	during a play or let the GUIDE tool determine how the play should
	proceed. We discuss the potential impact of GUIDE and tools like
	it on software development.},
  database = {ScienceDirect},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.07}
}

@ARTICLE{I[73],
    inserir = {true},
  author = {T. Tijs and D. Brokken and W. IJsselsteijn},
  title = {Creating an Emotionally Adaptive Game},
  year = {2009},
  abstract = {To optimize a players experience, an emotionally adaptive game continuously
	adapts its mechanics to the players emotional state, measured in
	terms of emotion-data. This paper presents the first of two studies
	that aim to realize an emotionally adaptive game. It investigates
	the relations between game mechanics, a players emotional state
	and his/her emotion-data. In an experiment, one game mechanic (speed)
	was manipulated. Emotional state was self-reported in terms of valence,
	arousal and boredom-frustration-enjoyment. In addition, a number
	of (mainly physiology-based) emotion-data features were measured.
	Correlations were found between the valence/arousal reports and the
	emotion-data features. In addition, seven emotion-data features were
	found to distinguish between a boring, frustrating and enjoying game
	mode. Taken together, these features convey sufficient data to create
	a first version of an emotionally adaptive game.},
  database = {SpringerLink},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.07}
}

@ARTICLE{I[74],
    inserir = {true},
  author = {M. Q. Tran and R. Biddle},
  title = {Collaboration in serious game development: a case study},
  year = {2008},
  abstract = {This paper presents an ethnographic study of the development practices
	at a small but successful company that develops serious games for
	industry training. We concentrated on the day-to-day collaboration
	of the studio team responsible for the game content and software,
	and used qualitative research methods, including field observations,
	contextual interviews and conversation analysis. This paper reports
	our findings, emphasizing a holistic perspective encompassing social
	and technical factors influencing collaboration in serious game development.
	In particular, we report on how co-location and a positive social
	environment work together with the technical tools and infrastructure
	to provide an environment that facilitates full participation of
	professionals with differing disciplinary perspectives, and contributes
	to iterative development and refinement of the game.},
  database = {ACM},
  owner = {Katia},
  references = {Supporting creativity with awareness in distributed collaboration

	An in-depth case study of art-technology collaboration

	Organizational collaboration: effects of rank on collaboration

	Analyzing and supporting collaboration in cooperative computer-mediated
	communication

	Stigmergic Collaboration: A Theoretical Framework for Mass Collaboration

	Object Design: Roles, Responsibilities, and Collaborations

	Artefacts in Software Design

	Towards a Framework for Integrating Agile Development and User-Centered
	Design

	Constructions of survival and coping by women who have survived childhood
	sexual abuse

	Qualitative Inquiry and Research Design Choosing Among Five Traditions

	The case for collaborative programming},
  timestamp = {2010.07.06}
}

@ARTICLE{E[84],
    inserir = {false},
  author = {D. Twilleager and J. Kesselman and A. Goldberg and D. Petersen and
	J. C. Soto and C. Melissinos},
  title = {Java technologies for games},
  year = {2004},
  abstract = {Network games are the fastest growing segment of the games market.
	The technologies required to build these massively networked games
	is evolving at a rapid pace. There are many components to these technologies.
	There are server, desktop client, and mobile client technologies
	which enable these connected games. This article provides on overview
	of the server, desktop, and mobile technologies that are available
	to build a networked game with Java technology.},
  database = {ACM},
  owner = {Katia},
  references = {no references - Java technologies for games},
  timestamp = {2010.07.06}
}

@ARTICLE{E[39],
    inserir = {false},
  author = {A. Tychsen and A. Canossa},
  title = {Defining personas in games using metrics},
  year = {2008},
  abstract = {Game metrical data are increasingly being used to enhance game testing
	and to inform game design. There are different approaches and techniques
	to gather the metrics data; however there seems to be a lack of frameworks
	to read and make sense of it. In this paper, the concept of play-persona
	is applied to game metrics, in the specific case of character-based
	computer games, where the player controls a single protagonist, around
	whom the gameplay and -- story evolves. A case is presented for Hitman:
	Blood Money (IO Interactive, 2007). Player-controlled game characters
	can be deconstructed into a range of components and these expressed
	as monitored game metrics. These metrics can subsequently be utilized
	to discover patterns of play by building play-personas: Modeled representations
	of how players interact with the game. This process can also be useful
	to assist game design, by informing whether the game facilitates
	the specific play patterns implied by theoretical play-personas.},
  database = {ACM},
  owner = {Katia},
  references = {21st Century Game Design (Game Development Series)

	About Face 3.0: The Essentials of Interaction Design

	Tracking Player Feedback to Improve Game Design

	Designing for sociability in massively multiplayer games: an examination
	of the "third places" of SWG

	User-based evaluations

	Visualizing Data

	Building Character

	Too Many Clicks! Unit-Based Interfaces Considered Harmful

	Better Game Characters by Design: A Psychological Approach

	Tracking real-time user experience (TRUE): a comprehensive instrumentation
	solution for complex systems

	What is the Avatar?: Fiction and Embodiment in Avatar-Based Singleplayer
	Computer Games

	Why we play games: Four keys to more emotion without story

	Physiological indicators for the evaluation of co-located collaborative
	play

	Using the RITE method to improve products: A definition and a case
	study

	Metrics in MMP Development and Operations

	Building Character: An Analysis of Character Creation

	User-centered design in games

	Making sense of low-level usage data to understand user activities

	Game Testing

	Master Metrics: The Science Behind the Art of Game Design

	Halo 3: How Microsoft Labs Invented a New Science of Play

	Innovations in Character: Personalizing RPGs, Retaining Players},
  timestamp = {2010.07.06}
}

@ARTICLE{E[58],
    inserir = {false},
  author = {P. Vorderer and T. Hartmann and C. Klimmt},
  title = {Explaining the enjoyment of playing video games: the role of competition},
  year = {2003},
  abstract = {The tremendous and still growing popularity of computer and video
	games has inspired Communication Researchers and Media Psychologists
	to investigate the factors of the enjoyment experienced by the players.
	Apparently, the games' interactivity allows for a continuous stream
	of challenging and competitive situations that have to be resolved
	by the players. Competition is therefore regarded a key element of
	the explanation of players' entertainment experience. Subsequent
	to a theoretical explication, empirical evidence for the role of
	competition in the playing process and the impact of competitiveness
	for selective exposure to computer games is reported from a field
	experiment (N = 349) and an online survey study (N = 795).},
  database = {ACM},
  owner = {Katia},
  references = {Quick facts about video game consoles and software

	Toward a theory of intrinsically motivating instruction

	Interactive entertainment and beyond

	Aggression, competition and computer games: Computer and human opponents

	Disclosing the secret behind computer games

	Computer-Spiel: Interaktive Unterhaltungsangebote als Synthese aus
	Medium und Spielzeug {Computer-Games: Understanding interactive entertainment
	as combination of media and toys}

	Sequential dependencies in emotional experience and behavior

	Video games and the pleasures of control

	How "Real" are Computer Personalities? Psychological Responses to
	Personality Types in Human-Computer Interaction

	Playing Together: a Taxonomy of Multiplayer Video Games

	When comparisons arise

	Towards a self-evaluation maintenance model of social behavior

	Computer Games, Self-Esteem and Gratification of Needs in Adolescents

	Selbstwertdienliches Verhalten und soziale Konflikte {Self-esteem,
	behaviour, and social conflicts}

	Mood management: Using entertainment to full advantage

	Social motivation - a set of propositions

	Eine Analyse des Zusammenhangs zwischen Schulleistungen und dem Wetteifermotive
	{An analysis of the relationship between school achievement and the
	motivation to compete}

	Self-efficacy: The exercise of control

	Generalized Self-Efficacy Scale

	Motivational basis of choice in experimental games

	Social value orientations and impressions of partner's honesty and
	intelligence: A test of the might versus morality effect

	Development of Prosocial, Individualistic, and Competitive Orientations:
	Theory and Preliminary Evidence

	Development of the Sport Orientation Questionnaire

	It's all entertainment, sure. But what exactly is entertainment?

	The Ambiguity of Play},
  timestamp = {2010.07.06}
}

@ARTICLE{E[54],
    inserir = {false},
  author = {D. Voth},
  title = {Evolutions in Gaming},
  year = {2007},
  abstract = {Game consoles are encroaching on PC territory, says Mark Claypool,
	associate professor in the computer science department at Wooster
	Polytechnic Institute. "Now they have hard drives, main memory, a
	programmable processor, a big graphics card, and networking." While
	game consoles aren't upgraded as often as PCs are-the last upgrades
	were four and five years ago-the most recent upgrades share the common
	denominator of "more": more power, better graphics, and more connections
	with other players. Last year's releases from the big three in gaming
	consoles-Microsoft's Xbox 360, Nintendo's Wii, and Sony's PlayStation
	3-represent an evolution in both technology and purpose, expanding
	game play and its applications.},
  database = {IEEE},
  owner = {Katia},
  references = {no references: Evolutions in Gaming},
  timestamp = {2010.07.06}
}

@ARTICLE{I[76],
    inserir = {true},
  author = {J. Waldo},
  title = {Scaling in games and virtual worlds},
  year = {2008},
  abstract = {Online games and virtual worlds have familiar scaling requirements,
	but don't be fooled: Everything you know is wrong.},
  database = {ACM},
  owner = {Katia},
  references = {no references - Scaling in games and virtual worlds},
  timestamp = {2010.07.06}
}

@ARTICLE{E[82],
    inserir = {false},
  author = {N. Wang and S. Marsella},
  title = {Introducing EVG: An Emotion Evoking Game},
  year = {2006},
  abstract = {A dungeon role playing game intended to induce emotions such as boredom,
	surprise, joy, anger and disappointment is introduced. From the preliminary
	study, facial expressions indicating boredom and anger were observed.
	Individual differences were found on appraisal and facial expression
	of surprise, joy and disappointment.},
  database = {SpringerLink},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.07}
}

@ARTICLE{I[77],
    inserir = {true},
  author = {D. Weibel and B. Wissmath and S. Habegger and Y. Steiner and R. Groner},
  title = {Playing online games against computer- vs. human-controlled opponents:
	Effects on presence, flow, and enjoyment},
  year = {2008},
  abstract = {The purpose of this study was to examine whether playing online games
	against other users leads to different experiences in comparison
	with playing against computer-controlled opponents. Thereby, a one-factorial
	multivariate design was used (computer-controlled vs. human-controlled
	opponent). Dependent variables were the participants feelings of
	presence and flow. Additionally, the amount of enjoyment was measured.
	The findings indicate that the type of opponent influences playing
	experiences: participants who played against a human-controlled opponent
	reported more experiences of presence, flow, and enjoyment, whereby
	the strongest effect refers to the experience of presence. Furthermore,
	strong relations between presence, flow, and enjoyment were observed.
	Further analyzes suggest that flow mediates the relationship between
	presence and enjoyment.},
  database = {ScienceDirect},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.07}
}

@ARTICLE{I[78],
    inserir = {true},
  author = {R. Wetzel and R. McCall and A. Braun and W. Broll},
  title = {Guidelines for designing augmented reality games},
  year = {2008},
  abstract = {The growing popularity of augmented reality (AR) games in both a research
	and more recently commercial context has led for a need to take a
	closer look at design related issues which impact on player experience.
	While issues relating to this area have been considered, to date
	most of the emphasis has been on the technology aspects. Furthermore
	it is almost always assumed that the augmented reality element in
	itself will provide a sufficient experience for the player. This
	has led to a need to evaluate what makes a successful augmented reality
	game. In this paper we present a set of design guidelines which are
	drawn from experiences of three mixed reality games. The guidelines
	provide specific guidance on relationships between real and virtual
	space, social interaction, use of AR technologies, maintaining consistent
	themes and implicitly address higher level aspects such as presence
	within a particular augmented reality place.},
  database = {ACM},
  owner = {Katia},
  references = {A Survey of Augmented Reality

	Equilibrium Theory Revisited: Mutual Gaze and Personal Space in Virtual
	Environments, Presence: Teleoperators and Virtual Environments

	The place probe: exploring a sense of place in real and virtual environments,
	Presence: Teleoperators and Virtual Environments

	Pervasive play, immersion and story: designing interference

	Toolglass and magic lenses: the see-through interface

	Meeting technology challenges of pervasive augmented reality games

	Seamful Design and Ubicomp Infrastructure

	Capture the Flag: Mixed-Reality Social Gaming with Smart Phones

	Human Pacman: a mobile, wide-area entertainment system based on physical,
	social, and ubiquitous computing

	Fundamental Components of the Gameplay Experience:1 Analysing Immersion

	Face to Face Collaborative AR on Mobile Phones

	TimeWarp: interactive time travel with a mobile mixed reality game

	Marker Tracking and HMD Calibration for a Video-Based Augmented Reality
	Conferencing System

	A report on the crossmedia game epidemic menace

	At the heart of it all: The concept of presence

	The "Where" of Mixed Reality: Some Guidelines for Design

	Augmented Reality: A class of displays on the realityvirtuality continuum

	A Framework for Realizing Interactive Real-Time AR and VR applications

	ARQuake: the outdoor augmented reality gaming system

	Foot-based mobile interaction with games

	Matrix: A Realtime Object Identification and Registration Method for
	Augmented Reality

	MEC Spatial Presence Questionnaire (MEC-SPQ): Short Documentation
	and Instructions for Application. Report to the European Community

	ARToolKitPlus for Pose Tracking on Mobile Devices

	Towards Massively Multi-User Augmented Reality on Handheld Devices

	The magic lens box: simplifying the development of mixed reality games},
  timestamp = {2010.07.06}
}

@ARTICLE{I[79],
    inserir = {true},
  author = {W. White and C. Koch and J. Gehrke and A. Demers},
  title = {Better scripts, better games Included},
  year = {2009},
  abstract = {Smarter, more powerful scripting languages will improve game performance
	while making gameplay development more efficient. The video game
	industry earned $8.85 billion in revenue in 2007, almost as much
	as movies made at the box office. Much of this revenue was generated
	by blockbuster titles created by large groups of people. Though large
	development teams are not unheard of in the software industry, game
	studios tend to have unique collections of developers. Software engineers
	make up a relatively small portion of the game development team,
	while the majority of the team consists of content creators such
	as artists, musicians, and designers.},
  database = {ACM},
  owner = {Katia},
  references = {Declarative processing for computer games

	MapReduce: simplified data processing on large clusters},
  timestamp = {2010.07.06}
}

@ARTICLE{I[80],
    inserir = {true},
  author = {W. White and B. Sowell and J. Gehrke and A. Demers},
  title = {Declarative processing for computer games},
  year = {2008},
  abstract = {Most game developers think of databases as nothing more than a persistence
	solution. However, database research is concerned with the wider
	problem of declarative processing. In this paper we demonstrate how
	declarative processing can be applied to computer games. We introduce
	the state-effect pattern, a design pattern that allows game developers
	to design parts of their game declaratively. We present SGL, a special
	scripting language which supports this design pattern and which can
	be compiled to a declarative language like SQL. We show how database
	techniques can process this design pattern in a way that improves
	performance by an order of magnitude or more. Finally, we discuss
	some design decisions that developers must make in order to adopt
	this pattern effectively.},
  database = {ACM},
  owner = {Katia},
  references = {SGL: a scalable language for data-driven games

	The Architecture of the Dalí Main-Memory Storage Manager, Multimedia
	Tools and Applications

	Monet: An impressionist sketch of an advanced database system

	Monitoring streams: a new class of data management applications

	Cayuga: A general purpose event monitoring system

	The Gamma Database Machine Project

	Streaming open world pathfinding

	Computer Player Strategy Builder Guide

	A visual environment for rapid behavior definition

	Fast computation of database operations using graphics processors

	Not just for combat training: Using game technology in non-kinetic
	urban simulations

	Adventures in data compilation and scripting for uncharted: Drake's
	fortune

	ScriptEase: Generative Design Patterns for Computer Role-Playing Games

	Aurora: a data stream management system

	GPU Gems

	Embodied agents in dynamic worlds

	Interpreting the data: Parallel analysis with Sawzall

	Massively modernized online: MMO technologies for next-gen and beyond

	Steering behaviors for autonomous characters

	The Design of XPRS

	Scaling games to epic proportions

	Dynamic plan migration for continuous queries over data streams},
  timestamp = {2010.07.06}
}

@ARTICLE{E[110],
    inserir = {false},
  author = {A. Wolff and P. Mulholland and Z. Zdrahal and R. Joiner},
  title = {Re-using digital narrative content in interactive games},
  year = {2007},
  abstract = {This paper presents a model, called Scene-Driver, for the re-use of
	film and television material. We begin by exploring general issues
	surrounding the ways in which content can be sub-divided into meaningful
	units for re-use and how criteria might then be applied to the selection
	and ordering of these units. We also identify and discuss the different
	means by which a user might interact with the content to create novel
	and engaging experiences. The Scene-Driver model has been instantiated
	using content from an animated children's television series called
	Tiny Planets, which is aimed at children of 5 7-year old. This type
	of material, being story-based itself, lends itself particularly
	well to the application of narrative constraints to scene reordering,
	to provide coherence to the experience of interacting with the content.
	We propose an interactive narrative-driven game architecture, in
	which a user generates novel narratives from existing content by
	placing domino like tiles. These tiles act as glue between scenes
	and each tile choice dictates certain properties of the next scene
	to be shown within a game. There are three different game-types,
	based on three different ways in which tiles can be matched to scenes.
	We introduce algorithms for generating legal tile-sets for each of
	these three game-types, which can be extended to include narrative
	constraints. This ensures that all novel orderings adhere to a minimum
	narrative plan, which has been identified based on analysis of the
	Tiny Planets series and on narrative theories. We also suggest ways
	in which basic narratives can be enhanced by the inclusion of directorial
	techniques and by the use of more complex plot structures. In our
	evaluation studies with children in the target age-range, our game
	compared favourably with other games that the children enjoyed playing.},
  database = {ScienceDirect},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.07}
}

@ARTICLE{E[57],
    inserir = {false},
  author = {K. Wu and Y. Cao and B. Sun and Y. Xiao},
  title = {Experimental study of an online game over wireless networks},
  year = {2007},
  abstract = {Online games usually require the delivery of realtime multimedia contents
	over networks. While online games have become increasingly popular
	over the Internet, it is still challenging to build online games
	over wireless networks, where link quality changes from time to time
	and link capacity is usually much smaller compared to wired networks.
	Packet losses and large delay of wireless networks may make online
	gaming an unpleasant experience, especially when a large amount of
	multimedia traffic is exchanged between players. In this paper, we
	implement a two-player competitive online game over wireless LAN
	and test its performance. To reduce the impact of message delay,
	we introduce a design pattern to deduce the traffic of multimedia
	contents by coding game context at the application layer instead
	of transmitting actual multimedia data. Experimental results demonstrate
	that even with a high bit error rate, the application-layer quality
	deterioration is negligible for most game players.},
  database = {IEEE},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.06}
}

@ARTICLE{E[30],
    inserir = {false},
  author = {C. Xin},
  title = {Commercial Strategies for SME Developers of Mobile Phone Serious
	Games in UK Market},
  year = {2009},
  abstract = {This paper is to analyze the detail mobile phone serious game market
	information, in order to identify the business opportunities for
	SME game developers in China and figure out the main barriers to
	entry to the Chinese marketplace. Surely, at the end of this section,
	some possible commercial strategies for SME developers in China will
	be offered and recommended.},
  database = {IEEE},
  owner = {Katia},
  references = {Marketing: Principles & Practice

	E-Business and E-Commerce Management

	Presentation in GDC 2004

	CCID Report

	MIG Report

	Financial Times

	IT Weekly Report},
  timestamp = {2010.07.06}
}

@ARTICLE{E[37],
    inserir = {false},
  author = {C. Xin},
  title = {Cross-Platform Mobile Phone Game Development Environment},
  year = {2009},
  abstract = {This paper discusses the mobile phone game development tools, which
	can achieve cross-platform development. Furthermore, this paper would
	provide suggestions on: how to choose and what the reasons of choices
	are.},
  database = {IEEE},
  owner = {Katia},
  references = {Semi-structured Questionnaire

	J2ME & BREW Game Design: Designing games for J2ME and BREW technology

	Introduction to Mobile Game Development

	Fathammer Announces X-Forge 2.0

	Symbian Grabs Bigger Market Share

	Superscape Group plc. Released in 2004

	The Serious Games Initiative

	Semi-structured Questionnaire

	Telephone Interview

	Presentation in GDC 2004},
  timestamp = {2010.07.06}
}

@ARTICLE{I[81],
    inserir = {true},
  author = {S. Xu and V. Rajlich},
  title = {Empirical Validation of Test-Driven Pair Programming in Game Development},
  year = {2006},
  abstract = {This paper investigates the effects of some extreme programming practices
	in game development by conducting a case study with 12 students who
	were assigned to implement a simple game application either as pairs
	or as individuals. The pairs used some XP practices, such as pair
	programming, test-driven and refactoring, while the individuals applied
	the traditional waterfall-like approach. The results of the case
	study showed that paired students completed their tasks faster and
	with higher quality than individuals. The programs written by pairs
	pass more test cases than those developed by individuals. Paired
	programmers also wrote cleaner code with higher cohesion by creating
	more reasonable number of methods. Therefore, some XP practices,
	such as pair programming, test-driven and refactoring could be used
	in game development.},
  database = {IEEE},
  owner = {Katia},
  references = {Sammy Corporation

	Extreme Programming Explained

	Test-Driving development: by Example

	Working in pairs as a means for design knowledge building: an empirical
	study

	Feature-driven development

	The costs and benefits of pair programming

	Coyoto Development

	Collaborating in Game Design

	Refactoring: Improving the Design of Existing Code

	An initial investigation of test driven development in industry

	Unit Test Frameworks

	Games from within: GDC 2004: Software Engineering Roundtable Summary

	Stepping Through the Looking Glass: Test-Driven Game Development

	Microsoft Producer for Microsoft Office Powerpoint 2003

	Experiment about test-first programming

	Experimental evaluation of pair programming

	The case for collaborative programming

	Software Engineering A Practitioner's Approach

	Agile Software Development with SCRUM

	On pair rotation in the computer science course

	In support of student pair-programming

	Strengthening the case for pair-programming

	Dialog-based protocol: an empirical research method for cognitive
	activity in software engineering},
  timestamp = {2010.07.06}
}

@ARTICLE{E[10],
    inserir = {false},
  author = {B. Yang and X. Cheng and Z. Pan},
  title = {A real-time collision detection algorithm for mobile billiards game},
  year = {2005},
  abstract = {Collision detection is a key technique in game design. However, some
	algorithms employed in PC game are not suitable for mobile game because
	of the low performance and small screen size in mobile devices. Combining
	with the features of the mobile devices, this paper proposes a quick
	and feasible collision detection algorithm. This algorithm makes
	use of the multi-level collision detection and dynamic multi-resolution
	grid subdivision to reduce the computing time for collision detection,
	which improves the algorithm performance greatly. In the collision
	response phase, this paper adopts the time step binary search algorithm
	to ensure both the computing precision and system efficiency. The
	mobile billiards game designed for the Bird Company indicates that
	this algorithm has good performance and real-time interaction.},
  database = {ACM},
  owner = {Katia},
  references = {I-COLLIDE: an interactive and exact collision detection system for
	large-scale environments

	Solving the Collision Detection Problem

	Expanding spheres: A collision detection algorithm for interest management
	in networked games

	Easybowling: a small bowling machine based on virtual simulation

	Pccavesmash: an immersive ping pong game

	Multi-resolution modeling for virtual prototyping

	Simulation on pattern design and layout for group calisthenics and
	eurhythmics},
  timestamp = {2010.07.06}
}

@ARTICLE{E[138],
    inserir = {false},
  author = {X. Yang and M. Yip and X. Xu},
  title = {Visual Effects in Computer Games},
  year = {2009},
  abstract = {Computer game players have already set the agenda for future visual
	effects and techniques: One group seeks to enjoy movie-quality photorealistic
	games, while another seeks maximum freedom of interaction in an open,
	self-evolving, persistent virtual world.},
  database = {IEEE},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.06}
}

@ARTICLE{I[82],
    inserir = {true},
  author = {G. N. Yannakakis and M. Maragoudakis},
  title = {Player Modeling Impact on Players Entertainment in Computer Games},
  year = {2005},
  abstract = {In this paper we introduce an effective mechanism for obtaining computer
	games of high interest (i.e. satisfaction for the player). The proposed
	approach is based on the interaction of a player modeling tool and
	a successful on-line learning mechanism from the authors previous
	work on prey/predator computer games. The methodology demonstrates
	high adaptability into dynamical playing strategies as well as reliability
	and justifiability to the game user.},
  database = {SpringerLink},
  owner = {Katia},
  references = {Dynamic player modelling: A framework for player-centric digital games

	Learning Bayesian Networks from Data: an Information-Theory Based
	Approach

	Learning Bayesian networks: the combination of knowledge and statistical
	data

	Player Modeling for Adaptive Games

	Probabilistic Reasoning in Intelligent Systems

	Evolving Opponents for Interesting Interactive Computer Games

	Interactive Opponents Generate Interesting Games},
  timestamp = {2010.07.07}
}

@ARTICLE{E[129],
    inserir = {false},
  author = {G. N. Yannakakis and G. N. Yannakakis},
  title = {Towards Capturing and Enhancing Entertainment in Computer Games},
  year = {2006},
  abstract = {This paper introduces quantitative measurements/metrics of qualitative
	entertainment features within computer game environments and proposes
	artificial intelligence (AI) techniques for optimizing entertainment
	in such interactive systems. A human-verified metric of interest
	(i.e. player entertainment in real-time) for predator/prey games
	and a neuro-evolution on-line learning (i.e. during play) approach
	have already been reported in the literature to serve this purpose.
	In this paper, an alternative quantitative approach to entertainment
	modeling based on psychological studies in the field of computer
	games is introduced and a comparative study of the two approaches
	is presented. Artificial neural networks (ANNs) and fuzzy ANNs are
	used to model player satisfaction (interest) in real-time and investigate
	quantitatively how the qualitative factors of challenge and curiosity
	contribute to human entertainment. We demonstrate that appropriate
	non-extreme levels of challenge and curiosity generate high values
	of entertainment and we discuss the extensibility of the approach
	to other genres of digital entertainment and edutainment.},
  database = {SpringerLink},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.07}
}

@ARTICLE{E[119],
    inserir = {false},
  author = {M. Yannakakis},
  title = {Testing, Optimizaton, and Games},
  year = {2004},
  abstract = {We discuss algorithmic problems arising in the testing of reactive
	systems, i.e. systems that interact with their environment. The goal
	is to design test sequences so that we can deduce desired information
	about the given system under test, such as whether it conforms to
	a given specification model, or whether it satisfies given requirement
	properties. Test generation can be approached from different points
	of view - as an optimization problem of minimizing cost and maximizing
	the effectiveness of the tests; as a game between tester and system
	under test; or as a learning problem. We touch on some of these aspects
	and related algorithmic questions.},
  database = {IEEE},
  owner = {Katia},
  references = {An optimization technique for protocol conformance test generation
	based on UIO sequences and rural Chinese postman tours

	Distinguishing tests for nondeterministic and probabilistic machines

	Model checking of hierarchical state machines

	Learning regular sets from queries and counterexamples

	Automated functional test generation

	Unified Modeling Language User Guide

	Testing transition systems: An annotated bibliography

	Testing software design modeled by finitestate machines

	Model Checking

	Matching, Euler tours and the Chinese postman

	From Rule-Based to Automata-Based Testing

	Projected state machine coverage for software testing

	On the worstcase performance of some algorithms for the asymmetric
	traveling salesman problem

	Adaptive model checking

	Statecharts: A visual formalism for complex systems

	Fault detection experiments for sequential circuits

	Design tools for requirements engineering

	A temporal logic based theory of test coverage and generation

	On-line minimization of transition systems

	Testing finite state machines: state identification and verification

	Optimization problems from feature testing of communication protocols

	Principles and methods of testing finite state machines - a survey

	Gedanken-experiments on sequential machines

	Testing Hierarchical Systems via Edge Covering

	Fault detection for sequential machines by transitions tours

	Black box checking

	Fault model-driven test derivation from finite state models: Annotated
	bibliography Proc. MOVEP

	The complexity of two-player games with incomplete information

	Inference of finite automata using homing sequences

	Test generation with inputs, outputs amd repetitive quiescence

	Failure diagnosis of automata

	Testing finite state machines: fault detection},
  timestamp = {2010.07.06}
}

@ARTICLE{E[35],
    inserir = {false},
  author = {F. You and I. Palmer and W. Godfrey and Z. B. Zheng},
  title = {Creating Emotions by Characters Design for Computer Games},
  year = {2006},
  abstract = {Firstly, the methodology for characters development in computer games
	was analyzed from both aspects of art-sourced character development
	and story-sourced character development separately from the different
	views of various research fields. In the second section, four different
	techniques relating to character design and the creation of emotion
	has been deeply discussed. At the end, the four diverse designs for
	character OEDIPUS were given according to the plot development based
	on the background of tragical fable of the ancient Greece.},
  database = {SpringerLink},
  owner = {Katia},
  references = {Andrew Rollings and Ernest Adams on Game Design

	REPRESENTATION: Cultural Representations and Signifying Practices

	The Hero with a Thousand Faces

	Creating Emotion in Games

	Media Analysis Techniques

	Understanding Comics:The Invisible Art

	Signs and Meaning in the cinema

	How to Read a film

	The Creation of Characters that Have or Convey Emotion and Personalities
	with the Context of a Computer Game

	Wei Qi nan: Bronze (Animation)},
  timestamp = {2010.07.07}
}

@ARTICLE{E[75],
    inserir = {false},
  author = {P. Zaphiris and C. S. Ang},
  title = {HCI issues in computer games},
  year = {2007},
  abstract = {No abstract is available for this article (Editorial): HCI issues
	in computer games},
  database = {ScienceDirect},
  owner = {Katia},
  references = {},
  timestamp = {2010.07.07}
}

@ARTICLE{I[84],
    inserir = {true},
  author = {W. Zhang and D. Han and T. Kunz},
  title = {Object-Orientation Is Evil to Mobile Game: Experience from Industrial
	Mobile RPGs},
  year = {2007},
  abstract = {Mobile gaming is playing an important role in the entertainment industry.
	Good performance is a critical requirement for mobile games in order
	to achieve acceptable running speed although mobile devices are limited
	by scarce resources. Object-oriented programming is the prevalent
	programming paradigm and this is true for mobile game development
	as well. As the origin of object-orientation (OO) is not targeting
	the embedded software domain, there is suspicion as to OO s usability
	for embedded software, especially with respect to mobile games. Questions
	arise like how OO and to what degree OO will affect the performance,
	executable file size, and how optimization strategies can improve
	the qualities of mobile game software. In this paper we investigate
	these questions within the mobile Role-Playing-Game (RPG) domain
	using five industrial mobile games developed with OO. We re-implemented
	these five RPGs with a structural programming style, by reducing
	the inheritance relationships, removing excessive classes and interfaces.
	Some additional optimizations are also applied during the re-implementation,
	such as the tackling of performance bottleneck methods, using more
	efficient algorithms. New games after optimizations run on average
	almost 25% faster than the corresponding original games, with a maximum
	of 34.62% improvement; the memory usage is decreased by more than
	10% on average and 17.56% as a maximum; we also achieved a 59% code
	reduction and a 71% Jar file decrease after optimization. Therefore
	if developers are aiming for mobile game performance, we conclude
	that they should use as few OO features as possible. Structural programming
	can be a very competitive alternative.},
  database = {SpringerLink},
  owner = {Katia},
  references = {Game Development: Harder Than You Think

	Embedded systems unsuitable for object orientation

	Object Oriented Programming Oversold

	An Object Oriented Metrics Suite on Coupling

	More java pitfalls

	Proguard homepage

	Supremej2me website

	Designing MIDP applications for optimization

	Performance Optimization of Embedded Java Applications by a C/Java-hybrid
	Architecture

	mBooster homepage

	Reuse without Compromising Performance: Industrial Experience from
	RPG Software Product Line for Mobile Devices},
  timestamp = {2010.07.07}
}

@ARTICLE{I[83],
    inserir = {true},
  author = {W. Zhang and D. Han and T. Kunz and K. M. Hansen},
  title = {Mobile Game Development: Object-Orientation or Not},
  year = {2007},
  abstract = {Mobile games are one of the primary entertainment applications at
	present. Limited by scarce resources, such as memory, CPU, input
	and output, etc, mobile game development is more difficult than desktop
	application development, with performance as one of the top critical
	requirements. As object-oriented technology is the prevalent programming
	paradigm, most of the current mobile games are developed with object-orientation
	(OO) technologies. Intuitively OO is not a perfect paradigm for embedded
	software. Questions remain such as how OO and to what degree OO will
	affect the performance, executable file size, and how optimization
	strategies can improve the qualities of mobile game software. These
	questions are investigated in this paper within the mobile Role-Playing-Game
	(RPG) domain using five industrial mobile games developed with OO.
	We analyzed them and found excessive usage of OO features used for
	the development of mobile device applications (but normal for usual
	desktop applications). We then apply some optimization strategies
	along the way of structural programming. The experiment shows that
	the total jar file size of these five optimized games decreases 71
	% the lines of codes decreases 59%, and the loading time of each
	optimized game decreases 22.73%, 34.62% 25.79% 24.65% and 16.70%
	respectively. Therefore, we conclude from our experiments that 00
	should be used with great care in the development of mobile games,
	and that structural programming can be a very competitive alternative.},
  database = {IEEE},
  owner = {Katia},
  references = {Game Development: Harder Than You Think

	Embedded systems unsuitable for object orientation

	Problems in Object-Oriented Software Reuse

	Object Oriented Programming Oversold

	More java pitfalls

	J2ME Game Optimization Secrets

	Proguard homepage

	A metrics suite for object oriented design

	An Object Oriented Metrics Suite on Coupling

	Borland together Architect homepage

	Mobile Game Optimization Secrets

	Supremej2me for J2ME Game programming

	Designing MIDP applications for optimization

	Performance Optimization of Embedded Java Applications by a C/Java-hybrid
	Architecture

	mBooster homepage

	Reuse without Compromising Performance: Industrial Experience from
	RPG Software Product Line for Mobile Devices},
  timestamp = {2010.07.06}
}

@ARTICLE{E[38],
    inserir = {false},
  author = {D. Zhao and S. Schiffel and M. Thielscher},
  title = {Decomposition of Multi-player Games},
  year = {2009},
  abstract = {Research in General Game Playing aims at building systems that learn
	to play unknown games without human intervention. We contribute to
	this endeavour by generalising the established technique of decomposition
	from AI Planning to multi-player games. To this end, we present a
	method for the automatic decomposition of previously unknown games
	into independent subgames, and we show how a general game player
	can exploit a successful decomposition for game tree search.},
  database = {SpringerLink},
  owner = {Katia},
  references = {Automatic heuristic construction in a complete general game player

	Heuristic evaluation functions for general game playing

	Fluxplayer: A successful general game player

	Simulation-based approach to general game playing

	General game playing: Overview of the AAAI competition

	Factored planning

	Factored planning: How, when and when not

	Factored planning using decomposition trees

	Factoring general games

	General game playing: Game description language specification

	A multiagent semantics for the Game Description Language

	On Numbers and Games

	Factoring general games using propositional automata},
  timestamp = {2010.07.07}
}
